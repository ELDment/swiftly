using SwiftlyS2.Internal_API;
using static SwiftlyS2.API.SDK.CS2.Classes;
using static SwiftlyS2.API.SDK.CoreClasses;
using static SwiftlyS2.API.Scripting.Entities;

namespace SwiftlyS2.API.SDK.CS2
{
    public class Classes
    {
        public class AABB_t : ClassData
        {
            public AABB_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AABB_t", "AABB_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AABB_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AABB_t", "AABB_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AABB_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D MinBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBounds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ActiveModelConfig_t : ClassData
        {
            public ActiveModelConfig_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ActiveModelConfig_t", "ActiveModelConfig_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ActiveModelConfig_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ActiveModelConfig_t", "ActiveModelConfig_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ActiveModelConfig_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ModelConfigHandle_t Handle
            {
                get { return Invoker.CallNative<ModelConfigHandle_t>("SDKClass", "Handle", CallKind.ClassMember, m_classData); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string[] AssociatedEntityNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "AssociatedEntityNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AssociatedEntityNames", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AggregateInstanceStreamOnDiskData_t : ClassData
        {
            public AggregateInstanceStreamOnDiskData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateInstanceStreamOnDiskData_t", "AggregateInstanceStreamOnDiskData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateInstanceStreamOnDiskData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateInstanceStreamOnDiskData_t", "AggregateInstanceStreamOnDiskData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateInstanceStreamOnDiskData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint DecodedSize
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DecodedSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecodedSize", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AggregateLODSetup_t : ClassData
        {
            public AggregateLODSetup_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateLODSetup_t", "AggregateLODSetup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateLODSetup_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateLODSetup_t", "AggregateLODSetup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateLODSetup_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LODOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LODOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LODOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxObjectScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxObjectScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxObjectScale", CallKind.ClassMember, m_classData, value); }
            }
            public float[] SwitchDistances
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "SwitchDistances", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwitchDistances", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AggregateMeshInfo_t : ClassData
        {
            public AggregateMeshInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateMeshInfo_t", "AggregateMeshInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateMeshInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateMeshInfo_t", "AggregateMeshInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateMeshInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint VisClusterMemberOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VisClusterMemberOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisClusterMemberOffset", CallKind.ClassMember, m_classData, value); }
            }
            public byte VisClusterMemberCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "VisClusterMemberCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisClusterMemberCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasTransform
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasTransform", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasTransform", CallKind.ClassMember, m_classData, value); }
            }
            public byte LODGroupMask
            {
                get { return Invoker.CallNative<byte>("SDKClass", "LODGroupMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LODGroupMask", CallKind.ClassMember, m_classData, value); }
            }
            public short DrawCallIndex
            {
                get { return Invoker.CallNative<short>("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData, value); }
            }
            public short LODSetupIndex
            {
                get { return Invoker.CallNative<short>("SDKClass", "LODSetupIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LODSetupIndex", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle TintColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "TintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColor", CallKind.ClassMember, m_classData, value); }
            }
            public uint ObjectFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ObjectFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObjectFlags", CallKind.ClassMember, m_classData, value); }
            }
            public int LightProbeVolumePrecomputedHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightProbeVolumePrecomputedHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightProbeVolumePrecomputedHandshake", CallKind.ClassMember, m_classData, value); }
            }
            public uint InstanceStreamOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "InstanceStreamOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceStreamOffset", CallKind.ClassMember, m_classData, value); }
            }
            public uint VertexAlbedoStreamOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexAlbedoStreamOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexAlbedoStreamOffset", CallKind.ClassMember, m_classData, value); }
            }
            public byte InstanceStreams
            {
                get { return Invoker.CallNative<byte>("SDKClass", "InstanceStreams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceStreams", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AggregateSceneObject_t : ClassData
        {
            public AggregateSceneObject_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateSceneObject_t", "AggregateSceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateSceneObject_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateSceneObject_t", "AggregateSceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateSceneObject_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint AllFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AllFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllFlags", CallKind.ClassMember, m_classData, value); }
            }
            public uint AnyFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AnyFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnyFlags", CallKind.ClassMember, m_classData, value); }
            }
            public short Layer
            {
                get { return Invoker.CallNative<short>("SDKClass", "Layer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Layer", CallKind.ClassMember, m_classData, value); }
            }
            public short InstanceStream
            {
                get { return Invoker.CallNative<short>("SDKClass", "InstanceStream", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceStream", CallKind.ClassMember, m_classData, value); }
            }
            public short VertexAlbedoStream
            {
                get { return Invoker.CallNative<short>("SDKClass", "VertexAlbedoStream", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexAlbedoStream", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] VisClusterMembership
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "VisClusterMembership", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisClusterMembership", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AggregateVertexAlbedoStreamOnDiskData_t : ClassData
        {
            public AggregateVertexAlbedoStreamOnDiskData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateVertexAlbedoStreamOnDiskData_t", "AggregateVertexAlbedoStreamOnDiskData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateVertexAlbedoStreamOnDiskData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AggregateVertexAlbedoStreamOnDiskData_t", "AggregateVertexAlbedoStreamOnDiskData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AggregateVertexAlbedoStreamOnDiskData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class AimCameraOpFixedSettings_t : ClassData
        {
            public AimCameraOpFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AimCameraOpFixedSettings_t", "AimCameraOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AimCameraOpFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AimCameraOpFixedSettings_t", "AimCameraOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AimCameraOpFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ChainIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChainIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChainIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int CameraJointIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "CameraJointIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CameraJointIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int PelvisJointIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "PelvisJointIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PelvisJointIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int ClavicleLeftJointIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ClavicleLeftJointIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClavicleLeftJointIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int ClavicleRightJointIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ClavicleRightJointIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClavicleRightJointIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int DepenetrationJointIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DepenetrationJointIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepenetrationJointIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int[] PropJoints
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PropJoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PropJoints", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AimMatrixOpFixedSettings_t : ClassData
        {
            public AimMatrixOpFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AimMatrixOpFixedSettings_t", "AimMatrixOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AimMatrixOpFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AimMatrixOpFixedSettings_t", "AimMatrixOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AimMatrixOpFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimAttachment Attachment
            {
                get { return Invoker.CallNative<CAnimAttachment>("SDKClass", "Attachment", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint BlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxYawAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxYawAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxYawAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxPitchAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxPitchAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxPitchAngle", CallKind.ClassMember, m_classData, value); }
            }
            public int SequenceMaxFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "SequenceMaxFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceMaxFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int BoneMaskIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneMaskIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneMaskIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetIsPosition
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetIsPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetIsPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseBiasAndClamp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseBiasAndClamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseBiasAndClamp", CallKind.ClassMember, m_classData, value); }
            }
            public float BiasAndClampYawOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "BiasAndClampYawOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BiasAndClampYawOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float BiasAndClampPitchOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "BiasAndClampPitchOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BiasAndClampPitchOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CBlendCurve BiasAndClampBlendCurve
            {
                get { return Invoker.CallNative<CBlendCurve>("SDKClass", "BiasAndClampBlendCurve", CallKind.ClassMember, m_classData); }
            }
        }
        public class AmmoIndex_t : ClassData
        {
            public AmmoIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AmmoIndex_t", "AmmoIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AmmoIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AmmoIndex_t", "AmmoIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AmmoIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public char Value
            {
                get { return Invoker.CallNative<char>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AmmoTypeInfo_t : ClassData
        {
            public AmmoTypeInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AmmoTypeInfo_t", "AmmoTypeInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AmmoTypeInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AmmoTypeInfo_t", "AmmoTypeInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AmmoTypeInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MaxCarry
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxCarry", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCarry", CallKind.ClassMember, m_classData, value); }
            }
            public CRangeInt SplashSize
            {
                get { return Invoker.CallNative<CRangeInt>("SDKClass", "SplashSize", CallKind.ClassMember, m_classData); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float Mass
            {
                get { return Invoker.CallNative<float>("SDKClass", "Mass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mass", CallKind.ClassMember, m_classData, value); }
            }
            public CRangeFloat Speed
            {
                get { return Invoker.CallNative<CRangeFloat>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
            }
        }
        public class AnimationDecodeDebugDump_t : ClassData
        {
            public AnimationDecodeDebugDump_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationDecodeDebugDump_t", "AnimationDecodeDebugDump_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationDecodeDebugDump_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationDecodeDebugDump_t", "AnimationDecodeDebugDump_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationDecodeDebugDump_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ProcessingType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ProcessingType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProcessingType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimationDecodeDebugDumpElement_t : ClassData
        {
            public AnimationDecodeDebugDumpElement_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationDecodeDebugDumpElement_t", "AnimationDecodeDebugDumpElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationDecodeDebugDumpElement_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationDecodeDebugDumpElement_t", "AnimationDecodeDebugDumpElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationDecodeDebugDumpElement_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EntityIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntityIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityIndex", CallKind.ClassMember, m_classData, value); }
            }
            public string ModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelName", CallKind.ClassMember, m_classData, value); }
            }
            public string[] PoseParams
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "PoseParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PoseParams", CallKind.ClassMember, m_classData, value); }
            }
            public string[] DecodeOps
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "DecodeOps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecodeOps", CallKind.ClassMember, m_classData, value); }
            }
            public string[] InternalOps
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "InternalOps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InternalOps", CallKind.ClassMember, m_classData, value); }
            }
            public string[] DecodedAnims
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "DecodedAnims", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecodedAnims", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimationSnapshot_t : AnimationSnapshotBase_t
        {
            public AnimationSnapshot_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationSnapshot_t", "AnimationSnapshot_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationSnapshot_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationSnapshot_t", "AnimationSnapshot_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationSnapshot_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EntIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntIndex", CallKind.ClassMember, m_classData, value); }
            }
            public string ModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelName", CallKind.ClassMember, m_classData, value); }
            }
            public AnimationSnapshotBase_t Parent
            {
                get { return Invoker.CallNative<AnimationSnapshotBase_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class AnimationSnapshotBase_t : ClassData
        {
            public AnimationSnapshotBase_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationSnapshotBase_t", "AnimationSnapshotBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationSnapshotBase_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimationSnapshotBase_t", "AnimationSnapshotBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimationSnapshotBase_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool BonesInWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BonesInWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BonesInWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] BoneSetupMask
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "BoneSetupMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneSetupMask", CallKind.ClassMember, m_classData, value); }
            }
            public float[] FlexControllers
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "FlexControllers", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlexControllers", CallKind.ClassMember, m_classData, value); }
            }
            public uint SnapshotType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SnapshotType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SnapshotType", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasDecodeDump
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasDecodeDump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasDecodeDump", CallKind.ClassMember, m_classData, value); }
            }
            public AnimationDecodeDebugDumpElement_t DecodeDump
            {
                get { return Invoker.CallNative<AnimationDecodeDebugDumpElement_t>("SDKClass", "DecodeDump", CallKind.ClassMember, m_classData); }
            }
        }
        public class AnimComponentID : ClassData
        {
            public AnimComponentID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimComponentID", "AnimComponentID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimComponentID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimComponentID", "AnimComponentID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimComponentID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimNodeID : ClassData
        {
            public AnimNodeID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimNodeID", "AnimNodeID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimNodeID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimNodeID", "AnimNodeID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimNodeID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimNodeOutputID : ClassData
        {
            public AnimNodeOutputID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimNodeOutputID", "AnimNodeOutputID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimNodeOutputID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimNodeOutputID", "AnimNodeOutputID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimNodeOutputID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimParamID : ClassData
        {
            public AnimParamID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimParamID", "AnimParamID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimParamID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimParamID", "AnimParamID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimParamID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimScriptHandle : ClassData
        {
            public AnimScriptHandle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimScriptHandle", "AnimScriptHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimScriptHandle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimScriptHandle", "AnimScriptHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimScriptHandle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimStateID : ClassData
        {
            public AnimStateID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimStateID", "AnimStateID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimStateID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimStateID", "AnimStateID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimStateID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AnimTagID : ClassData
        {
            public AnimTagID(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimTagID", "AnimTagID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimTagID(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AnimTagID", "AnimTagID", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AnimTagID()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class audioparams_t : ClassData
        {
            public audioparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("audioparams_t", "audioparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public audioparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("audioparams_t", "audioparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public audioparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] LocalSound
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "LocalSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalSound", CallKind.ClassMember, m_classData, value); }
            }
            public int SoundscapeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundscapeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public byte LocalBits
            {
                get { return Invoker.CallNative<byte>("SDKClass", "LocalBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBits", CallKind.ClassMember, m_classData, value); }
            }
            public int SoundscapeEntityListIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundscapeEntityListIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeEntityListIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint SoundEventHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SoundEventHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundEventHash", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class AutoRoomDoorwayPairs_t : ClassData
        {
            public AutoRoomDoorwayPairs_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AutoRoomDoorwayPairs_t", "AutoRoomDoorwayPairs_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AutoRoomDoorwayPairs_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("AutoRoomDoorwayPairs_t", "AutoRoomDoorwayPairs_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public AutoRoomDoorwayPairs_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class BakedLightingInfo_t : ClassData
        {
            public BakedLightingInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BakedLightingInfo_t", "BakedLightingInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BakedLightingInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BakedLightingInfo_t", "BakedLightingInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BakedLightingInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint LightmapVersionNumber
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LightmapVersionNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightmapVersionNumber", CallKind.ClassMember, m_classData, value); }
            }
            public uint LightmapGameVersionNumber
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LightmapGameVersionNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightmapGameVersionNumber", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D LightmapUvScale
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "LightmapUvScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightmapUvScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasLightmaps
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasLightmaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasLightmaps", CallKind.ClassMember, m_classData, value); }
            }
            public bool CompressionEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CompressionEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompressionEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool SHLightmaps
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SHLightmaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SHLightmaps", CallKind.ClassMember, m_classData, value); }
            }
            public byte ChartPackIterations
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ChartPackIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChartPackIterations", CallKind.ClassMember, m_classData, value); }
            }
            public byte VradQuality
            {
                get { return Invoker.CallNative<byte>("SDKClass", "VradQuality", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VradQuality", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class BaseSceneObjectOverride_t : ClassData
        {
            public BaseSceneObjectOverride_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BaseSceneObjectOverride_t", "BaseSceneObjectOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BaseSceneObjectOverride_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BaseSceneObjectOverride_t", "BaseSceneObjectOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BaseSceneObjectOverride_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint SceneObjectIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SceneObjectIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneObjectIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class BlendItem_t : ClassData
        {
            public BlendItem_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BlendItem_t", "BlendItem_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BlendItem_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BlendItem_t", "BlendItem_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BlendItem_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimUpdateNodeRef Child
            {
                get { return Invoker.CallNative<CAnimUpdateNodeRef>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D Pos
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "Pos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pos", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseCustomDuration
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseCustomDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCustomDuration", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class BoneDemoCaptureSettings_t : ClassData
        {
            public BoneDemoCaptureSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BoneDemoCaptureSettings_t", "BoneDemoCaptureSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BoneDemoCaptureSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("BoneDemoCaptureSettings_t", "BoneDemoCaptureSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public BoneDemoCaptureSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorSplineRotationMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorSplineRotationMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorSplineRotationMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorSplineTranslationMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorSplineTranslationMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorSplineTranslationMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorSplineScaleMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorSplineScaleMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorSplineScaleMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorQuantizationRotationMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorQuantizationRotationMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorQuantizationRotationMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorQuantizationTranslationMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorQuantizationTranslationMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorQuantizationTranslationMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ErrorQuantizationScaleMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "ErrorQuantizationScaleMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorQuantizationScaleMax", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CActionComponentUpdater : CAnimComponentUpdater
        {
            public CActionComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CActionComponentUpdater", "CActionComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CActionComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CActionComponentUpdater", "CActionComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CActionComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAddUpdateNode : CBinaryUpdateNode
        {
            public CAddUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAddUpdateNode", "CAddUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAddUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAddUpdateNode", "CAddUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAddUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FootMotionTiming
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyToFootMotion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyToFootMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyToFootMotion", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyChannelsSeparately
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyChannelsSeparately", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyChannelsSeparately", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseModelSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseModelSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseModelSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyScale
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyScale", CallKind.ClassMember, m_classData, value); }
            }
            public CBinaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CBinaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAI_ChangeHintGroup : CBaseEntity
        {
            public CAI_ChangeHintGroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_ChangeHintGroup", "CAI_ChangeHintGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_ChangeHintGroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_ChangeHintGroup", "CAI_ChangeHintGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_ChangeHintGroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SearchType
            {
                get { return Invoker.CallNative<int>("SDKClass", "SearchType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrSearchName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrSearchName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrSearchName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrNewHintGroup
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrNewHintGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrNewHintGroup", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAI_Expresser : ClassData
        {
            public CAI_Expresser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_Expresser", "CAI_Expresser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_Expresser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_Expresser", "CAI_Expresser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_Expresser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StopTalkTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StopTalkTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopTalkTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StopTalkTimeWithoutDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "StopTalkTimeWithoutDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopTalkTimeWithoutDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float QueuedSpeechTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "QueuedSpeechTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueuedSpeechTime", CallKind.ClassMember, m_classData, value); }
            }
            public float BlockedTalkTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockedTalkTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockedTalkTime", CallKind.ClassMember, m_classData, value); }
            }
            public int VoicePitch
            {
                get { return Invoker.CallNative<int>("SDKClass", "VoicePitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoicePitch", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTimeAcceptedSpeak
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTimeAcceptedSpeak", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTimeAcceptedSpeak", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowSpeakingInterrupts
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowSpeakingInterrupts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowSpeakingInterrupts", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConsiderSceneInvolvementAsSpeech
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConsiderSceneInvolvementAsSpeech", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConsiderSceneInvolvementAsSpeech", CallKind.ClassMember, m_classData, value); }
            }
            public bool SceneEntityDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SceneEntityDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneEntityDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public int LastSpokenPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastSpokenPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastSpokenPriority", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Outer
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Outer", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAI_ExpresserWithFollowup : CAI_Expresser
        {
            public CAI_ExpresserWithFollowup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_ExpresserWithFollowup", "CAI_ExpresserWithFollowup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_ExpresserWithFollowup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAI_ExpresserWithFollowup", "CAI_ExpresserWithFollowup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAI_ExpresserWithFollowup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAI_Expresser Parent
            {
                get { return Invoker.CallNative<CAI_Expresser>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAimCameraUpdateNode : CUnaryUpdateNode
        {
            public CAimCameraUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimCameraUpdateNode", "CAimCameraUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimCameraUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimCameraUpdateNode", "CAimCameraUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimCameraUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle ParameterPosition
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterPosition", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterOrientation
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterOrientation", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterSpineRotationWeight
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterSpineRotationWeight", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterPelvisOffset
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterPelvisOffset", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterUseIK
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterUseIK", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterCameraOnly
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterCameraOnly", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterWeaponDepenetrationDistance
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterWeaponDepenetrationDistance", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterWeaponDepenetrationDelta
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterWeaponDepenetrationDelta", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterCameraClearanceDistance
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterCameraClearanceDistance", CallKind.ClassMember, m_classData); }
            }
            public AimCameraOpFixedSettings_t OpFixedSettings
            {
                get { return Invoker.CallNative<AimCameraOpFixedSettings_t>("SDKClass", "OpFixedSettings", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAimConstraint : CBaseConstraint
        {
            public CAimConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimConstraint", "CAimConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimConstraint", "CAimConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint UpType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "UpType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAimMatrixUpdateNode : CUnaryUpdateNode
        {
            public CAimMatrixUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimMatrixUpdateNode", "CAimMatrixUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimMatrixUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAimMatrixUpdateNode", "CAimMatrixUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAimMatrixUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public AimMatrixOpFixedSettings_t OpFixedSettings
            {
                get { return Invoker.CallNative<AimMatrixOpFixedSettings_t>("SDKClass", "OpFixedSettings", CallKind.ClassMember, m_classData); }
            }
            public uint Target
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAK47 : CCSWeaponBaseGun
        {
            public CAK47(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAK47", "CAK47", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAK47(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAK47", "CAK47", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAK47()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAmbientGeneric : CPointEntity
        {
            public CAmbientGeneric(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAmbientGeneric", "CAmbientGeneric", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAmbientGeneric(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAmbientGeneric", "CAmbientGeneric", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAmbientGeneric()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRadius", CallKind.ClassMember, m_classData, value); }
            }
            public uint SoundLevel
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SoundLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundLevel", CallKind.ClassMember, m_classData, value); }
            }
            public dynpitchvol_t Dpv
            {
                get { return Invoker.CallNative<dynpitchvol_t>("SDKClass", "Dpv", CallKind.ClassMember, m_classData); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool Looping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Looping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Looping", CallKind.ClassMember, m_classData, value); }
            }
            public string Sound
            {
                get { return Invoker.CallNative<string>("SDKClass", "Sound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sound", CallKind.ClassMember, m_classData, value); }
            }
            public string SourceEntName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceEntName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceEntName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity SoundSource
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "SoundSource", CallKind.ClassMember, m_classData); }
            }
            public int SoundSourceEntIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundSourceEntIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundSourceEntIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimActionUpdater : ClassData
        {
            public CAnimActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimActionUpdater", "CAnimActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimActionUpdater", "CAnimActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimActivity : ClassData
        {
            public CAnimActivity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimActivity", "CAnimActivity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimActivity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimActivity", "CAnimActivity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimActivity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Activity
            {
                get { return Invoker.CallNative<int>("SDKClass", "Activity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Activity", CallKind.ClassMember, m_classData, value); }
            }
            public int Flags
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int Weight
            {
                get { return Invoker.CallNative<int>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimationGraphVisualizerAxis : CAnimationGraphVisualizerPrimitiveBase
        {
            public CAnimationGraphVisualizerAxis(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerAxis", "CAnimationGraphVisualizerAxis", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerAxis(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerAxis", "CAnimationGraphVisualizerAxis", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerAxis()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AxisSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "AxisSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxisSize", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimationGraphVisualizerPrimitiveBase Parent
            {
                get { return Invoker.CallNative<CAnimationGraphVisualizerPrimitiveBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimationGraphVisualizerLine : CAnimationGraphVisualizerPrimitiveBase
        {
            public CAnimationGraphVisualizerLine(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerLine", "CAnimationGraphVisualizerLine", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerLine(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerLine", "CAnimationGraphVisualizerLine", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerLine()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WsPositionStart
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsPositionStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsPositionStart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WsPositionEnd
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsPositionEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsPositionEnd", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimationGraphVisualizerPrimitiveBase Parent
            {
                get { return Invoker.CallNative<CAnimationGraphVisualizerPrimitiveBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimationGraphVisualizerPie : CAnimationGraphVisualizerPrimitiveBase
        {
            public CAnimationGraphVisualizerPie(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerPie", "CAnimationGraphVisualizerPie", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerPie(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerPie", "CAnimationGraphVisualizerPie", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerPie()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WsCenter
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsCenter", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WsStart
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsStart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WsEnd
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsEnd", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimationGraphVisualizerPrimitiveBase Parent
            {
                get { return Invoker.CallNative<CAnimationGraphVisualizerPrimitiveBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimationGraphVisualizerPrimitiveBase : ClassData
        {
            public CAnimationGraphVisualizerPrimitiveBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerPrimitiveBase", "CAnimationGraphVisualizerPrimitiveBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerPrimitiveBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerPrimitiveBase", "CAnimationGraphVisualizerPrimitiveBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerPrimitiveBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public int OwningAnimNodePathCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "OwningAnimNodePathCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwningAnimNodePathCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimationGraphVisualizerSphere : CAnimationGraphVisualizerPrimitiveBase
        {
            public CAnimationGraphVisualizerSphere(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerSphere", "CAnimationGraphVisualizerSphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerSphere(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerSphere", "CAnimationGraphVisualizerSphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerSphere()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WsPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsPosition", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimationGraphVisualizerPrimitiveBase Parent
            {
                get { return Invoker.CallNative<CAnimationGraphVisualizerPrimitiveBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimationGraphVisualizerText : CAnimationGraphVisualizerPrimitiveBase
        {
            public CAnimationGraphVisualizerText(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerText", "CAnimationGraphVisualizerText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerText(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGraphVisualizerText", "CAnimationGraphVisualizerText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGraphVisualizerText()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WsPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WsPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WsPosition", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public string Text
            {
                get { return Invoker.CallNative<string>("SDKClass", "Text", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Text", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimationGraphVisualizerPrimitiveBase Parent
            {
                get { return Invoker.CallNative<CAnimationGraphVisualizerPrimitiveBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimationGroup : ClassData
        {
            public CAnimationGroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGroup", "CAnimationGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimationGroup", "CAnimationGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimationGroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimKeyData DecodeKey
            {
                get { return Invoker.CallNative<CAnimKeyData>("SDKClass", "DecodeKey", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimAttachment : ClassData
        {
            public CAnimAttachment(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimAttachment", "CAnimAttachment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimAttachment(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimAttachment", "CAnimAttachment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimAttachment()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] InfluenceOffsets
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "InfluenceOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public int[] InfluenceIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "InfluenceIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceIndices", CallKind.ClassMember, m_classData, value); }
            }
            public float[] InfluenceWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "InfluenceWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceWeights", CallKind.ClassMember, m_classData, value); }
            }
            public byte NumInfluences
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NumInfluences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumInfluences", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimBone : ClassData
        {
            public CAnimBone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimBone", "CAnimBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimBone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimBone", "CAnimBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimBone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Parent
            {
                get { return Invoker.CallNative<int>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Pos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Pos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pos", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public int Flags
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimBoneDifference : ClassData
        {
            public CAnimBoneDifference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimBoneDifference", "CAnimBoneDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimBoneDifference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimBoneDifference", "CAnimBoneDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimBoneDifference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D PosError
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PosError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PosError", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasRotation", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasMovement", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimComponentUpdater : ClassData
        {
            public CAnimComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimComponentUpdater", "CAnimComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimComponentUpdater", "CAnimComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public AnimComponentID Id
            {
                get { return Invoker.CallNative<AnimComponentID>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
            }
            public uint NetworkMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NetworkMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimCycle : CCycleBase
        {
            public CAnimCycle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimCycle", "CAnimCycle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimCycle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimCycle", "CAnimCycle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimCycle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCycleBase Parent
            {
                get { return Invoker.CallNative<CCycleBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimData : ClassData
        {
            public CAnimData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimData", "CAnimData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimData", "CAnimData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MaxUniqueFrameIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxUniqueFrameIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxUniqueFrameIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimDataChannelDesc : ClassData
        {
            public CAnimDataChannelDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDataChannelDesc", "CAnimDataChannelDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDataChannelDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDataChannelDesc", "CAnimDataChannelDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDataChannelDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Flags
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ElementIndexArray
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ElementIndexArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementIndexArray", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] ElementMaskArray
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ElementMaskArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementMaskArray", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimDecoder : ClassData
        {
            public CAnimDecoder(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDecoder", "CAnimDecoder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDecoder(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDecoder", "CAnimDecoder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDecoder()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Version
            {
                get { return Invoker.CallNative<int>("SDKClass", "Version", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Version", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimDemoCaptureSettings : ClassData
        {
            public CAnimDemoCaptureSettings(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDemoCaptureSettings", "CAnimDemoCaptureSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDemoCaptureSettings(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDemoCaptureSettings", "CAnimDemoCaptureSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDemoCaptureSettings()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector4D ErrorRangeSplineRotation
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeSplineRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeSplineRotation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ErrorRangeSplineTranslation
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeSplineTranslation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeSplineTranslation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ErrorRangeSplineScale
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeSplineScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeSplineScale", CallKind.ClassMember, m_classData, value); }
            }
            public float IkRotation_MaxSplineError
            {
                get { return Invoker.CallNative<float>("SDKClass", "IkRotation_MaxSplineError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkRotation_MaxSplineError", CallKind.ClassMember, m_classData, value); }
            }
            public float IkTranslation_MaxSplineError
            {
                get { return Invoker.CallNative<float>("SDKClass", "IkTranslation_MaxSplineError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkTranslation_MaxSplineError", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ErrorRangeQuantizationRotation
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeQuantizationRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeQuantizationRotation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ErrorRangeQuantizationTranslation
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeQuantizationTranslation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeQuantizationTranslation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ErrorRangeQuantizationScale
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ErrorRangeQuantizationScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ErrorRangeQuantizationScale", CallKind.ClassMember, m_classData, value); }
            }
            public float IkRotation_MaxQuantizationError
            {
                get { return Invoker.CallNative<float>("SDKClass", "IkRotation_MaxQuantizationError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkRotation_MaxQuantizationError", CallKind.ClassMember, m_classData, value); }
            }
            public float IkTranslation_MaxQuantizationError
            {
                get { return Invoker.CallNative<float>("SDKClass", "IkTranslation_MaxQuantizationError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkTranslation_MaxQuantizationError", CallKind.ClassMember, m_classData, value); }
            }
            public string BaseSequence
            {
                get { return Invoker.CallNative<string>("SDKClass", "BaseSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseSequence", CallKind.ClassMember, m_classData, value); }
            }
            public int BaseSequenceFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "BaseSequenceFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseSequenceFrame", CallKind.ClassMember, m_classData, value); }
            }
            public uint BoneSelectionMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneSelectionMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneSelectionMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimDesc : ClassData
        {
            public CAnimDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDesc", "CAnimDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDesc", "CAnimDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimDesc_Flag Flags
            {
                get { return Invoker.CallNative<CAnimDesc_Flag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public float Fps
            {
                get { return Invoker.CallNative<float>("SDKClass", "Fps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fps", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimEncodedFrames Data
            {
                get { return Invoker.CallNative<CAnimEncodedFrames>("SDKClass", "Data", CallKind.ClassMember, m_classData); }
            }
            public float Framestalltime
            {
                get { return Invoker.CallNative<float>("SDKClass", "Framestalltime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Framestalltime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RootMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RootMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RootMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RootMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootMax", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] BoneWorldMin
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "BoneWorldMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneWorldMin", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] BoneWorldMax
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "BoneWorldMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneWorldMax", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimSequenceParams SequenceParams
            {
                get { return Invoker.CallNative<CAnimSequenceParams>("SDKClass", "SequenceParams", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimDesc_Flag : ClassData
        {
            public CAnimDesc_Flag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDesc_Flag", "CAnimDesc_Flag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDesc_Flag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimDesc_Flag", "CAnimDesc_Flag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimDesc_Flag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Looping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Looping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Looping", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllZeros
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllZeros", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllZeros", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hidden
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hidden", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hidden", CallKind.ClassMember, m_classData, value); }
            }
            public bool Delta
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Delta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delta", CallKind.ClassMember, m_classData, value); }
            }
            public bool LegacyWorldspace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LegacyWorldspace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyWorldspace", CallKind.ClassMember, m_classData, value); }
            }
            public bool ModelDoc
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ModelDoc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelDoc", CallKind.ClassMember, m_classData, value); }
            }
            public bool ImplicitSeqIgnoreDelta
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ImplicitSeqIgnoreDelta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImplicitSeqIgnoreDelta", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimGraphAdditive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimGraphAdditive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimGraphAdditive", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimEncodedFrames : ClassData
        {
            public CAnimEncodedFrames(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEncodedFrames", "CAnimEncodedFrames", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEncodedFrames(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEncodedFrames", "CAnimEncodedFrames", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEncodedFrames()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Frames
            {
                get { return Invoker.CallNative<int>("SDKClass", "Frames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frames", CallKind.ClassMember, m_classData, value); }
            }
            public int FramesPerBlock
            {
                get { return Invoker.CallNative<int>("SDKClass", "FramesPerBlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FramesPerBlock", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimEncodeDifference UsageDifferences
            {
                get { return Invoker.CallNative<CAnimEncodeDifference>("SDKClass", "UsageDifferences", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimEncodeDifference : ClassData
        {
            public CAnimEncodeDifference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEncodeDifference", "CAnimEncodeDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEncodeDifference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEncodeDifference", "CAnimEncodeDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEncodeDifference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte[] HasRotationBitArray
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "HasRotationBitArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasRotationBitArray", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] HasMovementBitArray
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "HasMovementBitArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasMovementBitArray", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] HasMorphBitArray
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "HasMorphBitArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasMorphBitArray", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] HasUserBitArray
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "HasUserBitArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasUserBitArray", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimEnum : ClassData
        {
            public CAnimEnum(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEnum", "CAnimEnum", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEnum(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEnum", "CAnimEnum", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEnum()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Value
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimEventDefinition : ClassData
        {
            public CAnimEventDefinition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventDefinition", "CAnimEventDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventDefinition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventDefinition", "CAnimEventDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventDefinition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Frame
            {
                get { return Invoker.CallNative<int>("SDKClass", "Frame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frame", CallKind.ClassMember, m_classData, value); }
            }
            public int EndFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndFrame", CallKind.ClassMember, m_classData, value); }
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimEventListener : CAnimEventListenerBase
        {
            public CAnimEventListener(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventListener", "CAnimEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventListener(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventListener", "CAnimEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventListener()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimEventListenerBase Parent
            {
                get { return Invoker.CallNative<CAnimEventListenerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimEventListenerBase : ClassData
        {
            public CAnimEventListenerBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventListenerBase", "CAnimEventListenerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventListenerBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventListenerBase", "CAnimEventListenerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventListenerBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimEventQueueListener : CAnimEventListenerBase
        {
            public CAnimEventQueueListener(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventQueueListener", "CAnimEventQueueListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventQueueListener(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimEventQueueListener", "CAnimEventQueueListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimEventQueueListener()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimEventListenerBase Parent
            {
                get { return Invoker.CallNative<CAnimEventListenerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimFoot : ClassData
        {
            public CAnimFoot(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFoot", "CAnimFoot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFoot(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFoot", "CAnimFoot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFoot()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BallOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BallOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BallOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HeelOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData, value); }
            }
            public int AnkleBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "AnkleBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnkleBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int ToeBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ToeBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimFrameBlockAnim : ClassData
        {
            public CAnimFrameBlockAnim(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFrameBlockAnim", "CAnimFrameBlockAnim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFrameBlockAnim(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFrameBlockAnim", "CAnimFrameBlockAnim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFrameBlockAnim()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int StartFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int EndFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int[] SegmentIndexArray
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SegmentIndexArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SegmentIndexArray", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimFrameSegment : ClassData
        {
            public CAnimFrameSegment(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFrameSegment", "CAnimFrameSegment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFrameSegment(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimFrameSegment", "CAnimFrameSegment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimFrameSegment()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int UniqueFrameIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "UniqueFrameIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UniqueFrameIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint LocalElementMasks
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LocalElementMasks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalElementMasks", CallKind.ClassMember, m_classData, value); }
            }
            public int LocalChannel
            {
                get { return Invoker.CallNative<int>("SDKClass", "LocalChannel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalChannel", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimGraphControllerBase : ClassData
        {
            public CAnimGraphControllerBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphControllerBase", "CAnimGraphControllerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphControllerBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphControllerBase", "CAnimGraphControllerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphControllerBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimGraphDebugReplay : ClassData
        {
            public CAnimGraphDebugReplay(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphDebugReplay", "CAnimGraphDebugReplay", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphDebugReplay(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphDebugReplay", "CAnimGraphDebugReplay", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphDebugReplay()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AnimGraphFileName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AnimGraphFileName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimGraphFileName", CallKind.ClassMember, m_classData, value); }
            }
            public int StartIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int WriteIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "WriteIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WriteIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int FrameCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "FrameCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimGraphModelBinding : ClassData
        {
            public CAnimGraphModelBinding(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphModelBinding", "CAnimGraphModelBinding", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphModelBinding(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphModelBinding", "CAnimGraphModelBinding", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphModelBinding()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimGraphNetworkedVariables : ClassData
        {
            public CAnimGraphNetworkedVariables(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphNetworkedVariables", "CAnimGraphNetworkedVariables", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphNetworkedVariables(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphNetworkedVariables", "CAnimGraphNetworkedVariables", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphNetworkedVariables()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] PredNetBoolVariables
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "PredNetBoolVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PredNetBoolVariables", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] PredNetByteVariables
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "PredNetByteVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PredNetByteVariables", CallKind.ClassMember, m_classData, value); }
            }
            public int[] PredNetIntVariables
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PredNetIntVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PredNetIntVariables", CallKind.ClassMember, m_classData, value); }
            }
            public float[] PredNetFloatVariables
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PredNetFloatVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PredNetFloatVariables", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] PredNetVectorVariables
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PredNetVectorVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PredNetVectorVariables", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] OwnerOnlyPredNetBoolVariables
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "OwnerOnlyPredNetBoolVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyPredNetBoolVariables", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] OwnerOnlyPredNetByteVariables
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "OwnerOnlyPredNetByteVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyPredNetByteVariables", CallKind.ClassMember, m_classData, value); }
            }
            public int[] OwnerOnlyPredNetIntVariables
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "OwnerOnlyPredNetIntVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyPredNetIntVariables", CallKind.ClassMember, m_classData, value); }
            }
            public float[] OwnerOnlyPredNetFloatVariables
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "OwnerOnlyPredNetFloatVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyPredNetFloatVariables", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] OwnerOnlyPredNetVectorVariables
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "OwnerOnlyPredNetVectorVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyPredNetVectorVariables", CallKind.ClassMember, m_classData, value); }
            }
            public int BoolVariablesCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoolVariablesCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoolVariablesCount", CallKind.ClassMember, m_classData, value); }
            }
            public int OwnerOnlyBoolVariablesCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "OwnerOnlyBoolVariablesCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerOnlyBoolVariablesCount", CallKind.ClassMember, m_classData, value); }
            }
            public int RandomSeedOffset
            {
                get { return Invoker.CallNative<int>("SDKClass", "RandomSeedOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomSeedOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTeleportTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTeleportTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTeleportTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimGraphNetworkSettings : CAnimGraphSettingsGroup
        {
            public CAnimGraphNetworkSettings(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphNetworkSettings", "CAnimGraphNetworkSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphNetworkSettings(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphNetworkSettings", "CAnimGraphNetworkSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphNetworkSettings()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool NetworkingEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkingEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkingEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimGraphSettingsGroup Parent
            {
                get { return Invoker.CallNative<CAnimGraphSettingsGroup>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimGraphSettingsGroup : ClassData
        {
            public CAnimGraphSettingsGroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphSettingsGroup", "CAnimGraphSettingsGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphSettingsGroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphSettingsGroup", "CAnimGraphSettingsGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphSettingsGroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimGraphSettingsManager : ClassData
        {
            public CAnimGraphSettingsManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphSettingsManager", "CAnimGraphSettingsManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphSettingsManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimGraphSettingsManager", "CAnimGraphSettingsManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimGraphSettingsManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimInputDamping : ClassData
        {
            public CAnimInputDamping(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimInputDamping", "CAnimInputDamping", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimInputDamping(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimInputDamping", "CAnimInputDamping", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimInputDamping()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint SpeedFunction
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SpeedFunction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedFunction", CallKind.ClassMember, m_classData, value); }
            }
            public float SpeedScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpeedScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedScale", CallKind.ClassMember, m_classData, value); }
            }
            public float FallingSpeedScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FallingSpeedScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallingSpeedScale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimKeyData : ClassData
        {
            public CAnimKeyData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimKeyData", "CAnimKeyData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimKeyData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimKeyData", "CAnimKeyData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimKeyData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ChannelElements
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChannelElements", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChannelElements", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimLocalHierarchy : ClassData
        {
            public CAnimLocalHierarchy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimLocalHierarchy", "CAnimLocalHierarchy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimLocalHierarchy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimLocalHierarchy", "CAnimLocalHierarchy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimLocalHierarchy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int StartFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int PeakFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "PeakFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int TailFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "TailFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TailFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int EndFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndFrame", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimMorphDifference : ClassData
        {
            public CAnimMorphDifference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMorphDifference", "CAnimMorphDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMorphDifference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMorphDifference", "CAnimMorphDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMorphDifference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimMotorUpdaterBase : ClassData
        {
            public CAnimMotorUpdaterBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMotorUpdaterBase", "CAnimMotorUpdaterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMotorUpdaterBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMotorUpdaterBase", "CAnimMotorUpdaterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMotorUpdaterBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public bool Default
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Default", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Default", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimMovement : ClassData
        {
            public CAnimMovement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMovement", "CAnimMovement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMovement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimMovement", "CAnimMovement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimMovement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Endframe
            {
                get { return Invoker.CallNative<int>("SDKClass", "Endframe", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Endframe", CallKind.ClassMember, m_classData, value); }
            }
            public int Motionflags
            {
                get { return Invoker.CallNative<int>("SDKClass", "Motionflags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Motionflags", CallKind.ClassMember, m_classData, value); }
            }
            public float Angle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Vector
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Vector", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Vector", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimNodePath : ClassData
        {
            public CAnimNodePath(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimNodePath", "CAnimNodePath", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimNodePath(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimNodePath", "CAnimNodePath", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimNodePath()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Count
            {
                get { return Invoker.CallNative<int>("SDKClass", "Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Count", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimParameterBase : ClassData
        {
            public CAnimParameterBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParameterBase", "CAnimParameterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParameterBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParameterBase", "CAnimParameterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParameterBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Comment
            {
                get { return Invoker.CallNative<string>("SDKClass", "Comment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Comment", CallKind.ClassMember, m_classData, value); }
            }
            public string Group
            {
                get { return Invoker.CallNative<string>("SDKClass", "Group", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Group", CallKind.ClassMember, m_classData, value); }
            }
            public AnimParamID Id
            {
                get { return Invoker.CallNative<AnimParamID>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
            }
            public string ComponentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ComponentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComponentName", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkingRequested
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkingRequested", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkingRequested", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsReferenced
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsReferenced", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsReferenced", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimParameterManagerUpdater : ClassData
        {
            public CAnimParameterManagerUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParameterManagerUpdater", "CAnimParameterManagerUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParameterManagerUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParameterManagerUpdater", "CAnimParameterManagerUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParameterManagerUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimParamHandle : ClassData
        {
            public CAnimParamHandle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParamHandle", "CAnimParamHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParamHandle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParamHandle", "CAnimParamHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParamHandle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Type
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public byte Index
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimParamHandleMap : ClassData
        {
            public CAnimParamHandleMap(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParamHandleMap", "CAnimParamHandleMap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParamHandleMap(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimParamHandleMap", "CAnimParamHandleMap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimParamHandleMap()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimReplayFrame : ClassData
        {
            public CAnimReplayFrame(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimReplayFrame", "CAnimReplayFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimReplayFrame(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimReplayFrame", "CAnimReplayFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimReplayFrame()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TimeStamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeStamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeStamp", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimScriptBase : ClassData
        {
            public CAnimScriptBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptBase", "CAnimScriptBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptBase", "CAnimScriptBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimScriptComponentUpdater : CAnimComponentUpdater
        {
            public CAnimScriptComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptComponentUpdater", "CAnimScriptComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptComponentUpdater", "CAnimScriptComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public AnimScriptHandle Script
            {
                get { return Invoker.CallNative<AnimScriptHandle>("SDKClass", "Script", CallKind.ClassMember, m_classData); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimScriptManager : ClassData
        {
            public CAnimScriptManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptManager", "CAnimScriptManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimScriptManager", "CAnimScriptManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimScriptManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimSequenceParams : ClassData
        {
            public CAnimSequenceParams(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimSequenceParams", "CAnimSequenceParams", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimSequenceParams(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimSequenceParams", "CAnimSequenceParams", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimSequenceParams()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeInTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimSkeleton : ClassData
        {
            public CAnimSkeleton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimSkeleton", "CAnimSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimSkeleton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimSkeleton", "CAnimSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimSkeleton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] BoneNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "BoneNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneNames", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Parents
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Parents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parents", CallKind.ClassMember, m_classData, value); }
            }
            public string[] MorphNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "MorphNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphNames", CallKind.ClassMember, m_classData, value); }
            }
            public int[] LodBoneCounts
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "LodBoneCounts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LodBoneCounts", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimStateMachineUpdater : ClassData
        {
            public CAnimStateMachineUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimStateMachineUpdater", "CAnimStateMachineUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimStateMachineUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimStateMachineUpdater", "CAnimStateMachineUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimStateMachineUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int StartStateIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartStateIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartStateIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimTagBase : ClassData
        {
            public CAnimTagBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimTagBase", "CAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimTagBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimTagBase", "CAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimTagBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Comment
            {
                get { return Invoker.CallNative<string>("SDKClass", "Comment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Comment", CallKind.ClassMember, m_classData, value); }
            }
            public AnimTagID TagID
            {
                get { return Invoker.CallNative<AnimTagID>("SDKClass", "TagID", CallKind.ClassMember, m_classData); }
            }
            public bool IsReferenced
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsReferenced", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsReferenced", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimTagManagerUpdater : ClassData
        {
            public CAnimTagManagerUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimTagManagerUpdater", "CAnimTagManagerUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimTagManagerUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimTagManagerUpdater", "CAnimTagManagerUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimTagManagerUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CAnimUpdateNodeBase : ClassData
        {
            public CAnimUpdateNodeBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateNodeBase", "CAnimUpdateNodeBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateNodeBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateNodeBase", "CAnimUpdateNodeBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateNodeBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimNodePath NodePath
            {
                get { return Invoker.CallNative<CAnimNodePath>("SDKClass", "NodePath", CallKind.ClassMember, m_classData); }
            }
            public uint NetworkMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NetworkMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkMode", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimUpdateNodeRef : ClassData
        {
            public CAnimUpdateNodeRef(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateNodeRef", "CAnimUpdateNodeRef", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateNodeRef(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateNodeRef", "CAnimUpdateNodeRef", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateNodeRef()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NodeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "NodeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimUpdateSharedData : ClassData
        {
            public CAnimUpdateSharedData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateSharedData", "CAnimUpdateSharedData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateSharedData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUpdateSharedData", "CAnimUpdateSharedData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUpdateSharedData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimGraphSettingsManager Settings
            {
                get { return Invoker.CallNative<CAnimGraphSettingsManager>("SDKClass", "Settings", CallKind.ClassMember, m_classData); }
            }
            public CAnimNodePath RootNodePath
            {
                get { return Invoker.CallNative<CAnimNodePath>("SDKClass", "RootNodePath", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAnimUser : ClassData
        {
            public CAnimUser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUser", "CAnimUser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUser", "CAnimUser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAnimUserDifference : ClassData
        {
            public CAnimUserDifference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUserDifference", "CAnimUserDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUserDifference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAnimUserDifference", "CAnimUserDifference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAnimUserDifference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CastSphereSATParams_t : ClassData
        {
            public CastSphereSATParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CastSphereSATParams_t", "CastSphereSATParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CastSphereSATParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CastSphereSATParams_t", "CastSphereSATParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CastSphereSATParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D RayStart
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RayStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RayStart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RayDelta
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RayDelta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RayDelta", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxFraction
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxFraction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFraction", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Hull
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Hull", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAttachment : ClassData
        {
            public CAttachment(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttachment", "CAttachment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttachment(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttachment", "CAttachment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttachment()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public char[] InfluenceNames
            {
                get { return Invoker.CallNative<char[]>("SDKClass", "InfluenceNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceNames", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] InfluenceOffsets
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "InfluenceOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public float[] InfluenceWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "InfluenceWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceWeights", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] InfluenceRootTransform
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "InfluenceRootTransform", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfluenceRootTransform", CallKind.ClassMember, m_classData, value); }
            }
            public byte Influences
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Influences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Influences", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAttributeContainer : CAttributeManager
        {
            public CAttributeContainer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeContainer", "CAttributeContainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeContainer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeContainer", "CAttributeContainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeContainer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEconItemView Item
            {
                get { return Invoker.CallNative<CEconItemView>("SDKClass", "Item", CallKind.ClassMember, m_classData); }
            }
            public CAttributeManager Parent
            {
                get { return Invoker.CallNative<CAttributeManager>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAttributeList : ClassData
        {
            public CAttributeList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeList", "CAttributeList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeList", "CAttributeList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeList()
            {
            }
            public void SetOrAddAttributeValueByName(string key, float value)
            {
                Internal_API.Invoker.CallNative("SDKClass", "SetOrAddAttributeValueByName", Internal_API.CallKind.ClassFunction, m_classData, key, value);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Manager
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Manager", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAttributeManager : ClassData
        {
            public CAttributeManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeManager", "CAttributeManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAttributeManager", "CAttributeManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAttributeManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ReapplyProvisionParity
            {
                get { return Invoker.CallNative<int>("SDKClass", "ReapplyProvisionParity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReapplyProvisionParity", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Outer
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Outer", CallKind.ClassMember, m_classData); }
            }
            public bool PreventLoopback
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreventLoopback", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventLoopback", CallKind.ClassMember, m_classData, value); }
            }
            public uint ProviderType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ProviderType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProviderType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAudioAnimTag : CAnimTagBase
        {
            public CAudioAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioAnimTag", "CAudioAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioAnimTag", "CAudioAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ClipName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ClipName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClipName", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public float Volume
            {
                get { return Invoker.CallNative<float>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volume", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopWhenTagEnds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopWhenTagEnds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopWhenTagEnds", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopWhenGraphEnds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopWhenGraphEnds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopWhenGraphEnds", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayOnServer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayOnServer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayOnServer", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayOnClient
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayOnClient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayOnClient", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CAudioEmphasisSample : ClassData
        {
            public CAudioEmphasisSample(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioEmphasisSample", "CAudioEmphasisSample", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioEmphasisSample(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioEmphasisSample", "CAudioEmphasisSample", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioEmphasisSample()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Time
            {
                get { return Invoker.CallNative<float>("SDKClass", "Time", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Time", CallKind.ClassMember, m_classData, value); }
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAudioMorphData : ClassData
        {
            public CAudioMorphData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioMorphData", "CAudioMorphData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioMorphData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioMorphData", "CAudioMorphData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioMorphData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Times
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Times", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Times", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] NameHashCodes
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "NameHashCodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHashCodes", CallKind.ClassMember, m_classData, value); }
            }
            public string[] NameStrings
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "NameStrings", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameStrings", CallKind.ClassMember, m_classData, value); }
            }
            public float EaseIn
            {
                get { return Invoker.CallNative<float>("SDKClass", "EaseIn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EaseIn", CallKind.ClassMember, m_classData, value); }
            }
            public float EaseOut
            {
                get { return Invoker.CallNative<float>("SDKClass", "EaseOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EaseOut", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAudioPhonemeTag : ClassData
        {
            public CAudioPhonemeTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioPhonemeTag", "CAudioPhonemeTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioPhonemeTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioPhonemeTag", "CAudioPhonemeTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioPhonemeTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float EndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndTime", CallKind.ClassMember, m_classData, value); }
            }
            public int PhonemeCode
            {
                get { return Invoker.CallNative<int>("SDKClass", "PhonemeCode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhonemeCode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CAudioSentence : ClassData
        {
            public CAudioSentence(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioSentence", "CAudioSentence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioSentence(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CAudioSentence", "CAudioSentence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CAudioSentence()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ShouldVoiceDuck
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldVoiceDuck", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldVoiceDuck", CallKind.ClassMember, m_classData, value); }
            }
            public CAudioMorphData MorphData
            {
                get { return Invoker.CallNative<CAudioMorphData>("SDKClass", "MorphData", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBarnLight : CBaseModelEntity
        {
            public CBarnLight(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBarnLight", "CBarnLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBarnLight(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBarnLight", "CBarnLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBarnLight()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public int ColorMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "ColorMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorMode", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public float ColorTemperature
            {
                get { return Invoker.CallNative<float>("SDKClass", "ColorTemperature", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTemperature", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData, value); }
            }
            public int DirectLight
            {
                get { return Invoker.CallNative<int>("SDKClass", "DirectLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectLight", CallKind.ClassMember, m_classData, value); }
            }
            public int BakedShadowIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BakedShadowIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BakedShadowIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int LightPathUniqueId
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightPathUniqueId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightPathUniqueId", CallKind.ClassMember, m_classData, value); }
            }
            public int LightMapUniqueId
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightMapUniqueId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightMapUniqueId", CallKind.ClassMember, m_classData, value); }
            }
            public int LuminaireShape
            {
                get { return Invoker.CallNative<int>("SDKClass", "LuminaireShape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LuminaireShape", CallKind.ClassMember, m_classData, value); }
            }
            public float LuminaireSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "LuminaireSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LuminaireSize", CallKind.ClassMember, m_classData, value); }
            }
            public float LuminaireAnisotropy
            {
                get { return Invoker.CallNative<float>("SDKClass", "LuminaireAnisotropy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LuminaireAnisotropy", CallKind.ClassMember, m_classData, value); }
            }
            public string LightStyleString
            {
                get { return Invoker.CallNative<string>("SDKClass", "LightStyleString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightStyleString", CallKind.ClassMember, m_classData, value); }
            }
            public float LightStyleStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightStyleStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightStyleStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public string[] QueuedLightStyleStrings
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "QueuedLightStyleStrings", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueuedLightStyleStrings", CallKind.ClassMember, m_classData, value); }
            }
            public string[] LightStyleEvents
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "LightStyleEvents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightStyleEvents", CallKind.ClassMember, m_classData, value); }
            }
            public float Shape
            {
                get { return Invoker.CallNative<float>("SDKClass", "Shape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Shape", CallKind.ClassMember, m_classData, value); }
            }
            public float SoftX
            {
                get { return Invoker.CallNative<float>("SDKClass", "SoftX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoftX", CallKind.ClassMember, m_classData, value); }
            }
            public float SoftY
            {
                get { return Invoker.CallNative<float>("SDKClass", "SoftY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoftY", CallKind.ClassMember, m_classData, value); }
            }
            public float Skirt
            {
                get { return Invoker.CallNative<float>("SDKClass", "Skirt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Skirt", CallKind.ClassMember, m_classData, value); }
            }
            public float SkirtNear
            {
                get { return Invoker.CallNative<float>("SDKClass", "SkirtNear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkirtNear", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SizeParams
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SizeParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeParams", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Shear
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Shear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Shear", CallKind.ClassMember, m_classData, value); }
            }
            public int BakeSpecularToCubemaps
            {
                get { return Invoker.CallNative<int>("SDKClass", "BakeSpecularToCubemaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BakeSpecularToCubemaps", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BakeSpecularToCubemapsSize
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BakeSpecularToCubemapsSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BakeSpecularToCubemapsSize", CallKind.ClassMember, m_classData, value); }
            }
            public int CastShadows
            {
                get { return Invoker.CallNative<int>("SDKClass", "CastShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CastShadows", CallKind.ClassMember, m_classData, value); }
            }
            public int ShadowMapSize
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShadowMapSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowMapSize", CallKind.ClassMember, m_classData, value); }
            }
            public int ShadowPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShadowPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowPriority", CallKind.ClassMember, m_classData, value); }
            }
            public bool ContactShadow
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ContactShadow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ContactShadow", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceShadowsEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceShadowsEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceShadowsEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public int BounceLight
            {
                get { return Invoker.CallNative<int>("SDKClass", "BounceLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BounceLight", CallKind.ClassMember, m_classData, value); }
            }
            public float BounceScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BounceScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BounceScale", CallKind.ClassMember, m_classData, value); }
            }
            public float MinRoughness
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinRoughness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinRoughness", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AlternateColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AlternateColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlternateColor", CallKind.ClassMember, m_classData, value); }
            }
            public float AlternateColorBrightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlternateColorBrightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlternateColorBrightness", CallKind.ClassMember, m_classData, value); }
            }
            public int Fog
            {
                get { return Invoker.CallNative<int>("SDKClass", "Fog", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fog", CallKind.ClassMember, m_classData, value); }
            }
            public float FogStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogStrength", CallKind.ClassMember, m_classData, value); }
            }
            public int FogShadows
            {
                get { return Invoker.CallNative<int>("SDKClass", "FogShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogShadows", CallKind.ClassMember, m_classData, value); }
            }
            public float FogScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool FogMixedShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FogMixedShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMixedShadows", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeSizeStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeSizeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeSizeStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeSizeEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeSizeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeSizeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowFadeSizeStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowFadeSizeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowFadeSizeStart", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowFadeSizeEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowFadeSizeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowFadeSizeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool PrecomputedFieldsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PrecomputedFieldsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedFieldsValid", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedBoundsMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedBoundsMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedBoundsMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedBoundsMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedBoundsMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedBoundsMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedOBBOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedOBBOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector PrecomputedOBBAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PrecomputedOBBAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedOBBExtent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedOBBExtent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBExtent", CallKind.ClassMember, m_classData, value); }
            }
            public int PrecomputedSubFrusta
            {
                get { return Invoker.CallNative<int>("SDKClass", "PrecomputedSubFrusta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedSubFrusta", CallKind.ClassMember, m_classData, value); }
            }
            public bool PvsModifyEntity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PvsModifyEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PvsModifyEntity", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] VisClusters
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "VisClusters", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisClusters", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseAnimGraph : CBaseModelEntity
        {
            public CBaseAnimGraph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraph", "CBaseAnimGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraph", "CBaseAnimGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool InitiallyPopulateInterpHistory
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InitiallyPopulateInterpHistory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitiallyPopulateInterpHistory", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ChoreoServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ChoreoServices", CallKind.ClassMember, m_classData); }
            }
            public bool AnimGraphUpdateEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimGraphUpdateEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimGraphUpdateEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSlopeDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSlopeDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSlopeDistance", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastSlopeCheckPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastSlopeCheckPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastSlopeCheckPos", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimationUpdateScheduled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimationUpdateScheduled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationUpdateScheduled", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Force
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
            public int ForceBone
            {
                get { return Invoker.CallNative<int>("SDKClass", "ForceBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceBone", CallKind.ClassMember, m_classData, value); }
            }
            public PhysicsRagdollPose_t RagdollPose
            {
                get { return Invoker.CallNative<PhysicsRagdollPose_t>("SDKClass", "RagdollPose", CallKind.ClassMember, m_classData); }
            }
            public bool RagdollEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RagdollEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool RagdollClientSide
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RagdollClientSide", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollClientSide", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseAnimGraphAnimGraphController : CAnimGraphControllerBase
        {
            public CBaseAnimGraphAnimGraphController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraphAnimGraphController", "CBaseAnimGraphAnimGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraphAnimGraphController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraphAnimGraphController", "CBaseAnimGraphAnimGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraphAnimGraphController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimGraphControllerBase Parent
            {
                get { return Invoker.CallNative<CAnimGraphControllerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseAnimGraphController : CSkeletonAnimationController
        {
            public CBaseAnimGraphController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraphController", "CBaseAnimGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraphController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseAnimGraphController", "CBaseAnimGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseAnimGraphController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimGraphNetworkedVariables AnimGraphNetworkedVars
            {
                get { return Invoker.CallNative<CAnimGraphNetworkedVariables>("SDKClass", "AnimGraphNetworkedVars", CallKind.ClassMember, m_classData); }
            }
            public bool SequenceFinished
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SequenceFinished", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceFinished", CallKind.ClassMember, m_classData, value); }
            }
            public float SoundSyncTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SoundSyncTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundSyncTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint ActiveIKChainMask
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ActiveIKChainMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActiveIKChainMask", CallKind.ClassMember, m_classData, value); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float SeqStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SeqStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeqStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float SeqFixedCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "SeqFixedCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeqFixedCycle", CallKind.ClassMember, m_classData, value); }
            }
            public uint AnimLoopMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AnimLoopMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimLoopMode", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackRate", CallKind.ClassMember, m_classData, value); }
            }
            public byte NotifyState
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NotifyState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyState", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkedAnimationInputsChanged
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkedAnimationInputsChanged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkedAnimationInputsChanged", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkedSequenceChanged
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkedSequenceChanged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkedSequenceChanged", CallKind.ClassMember, m_classData, value); }
            }
            public bool LastUpdateSkipped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LastUpdateSkipped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastUpdateSkipped", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevAnimUpdateTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevAnimUpdateTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevAnimUpdateTime", CallKind.ClassMember, m_classData, value); }
            }
            public CSkeletonAnimationController Parent
            {
                get { return Invoker.CallNative<CSkeletonAnimationController>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseButton : CBaseToggle
        {
            public CBaseButton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseButton", "CBaseButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseButton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseButton", "CBaseButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseButton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector MoveEntitySpace
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool StayPushed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StayPushed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StayPushed", CallKind.ClassMember, m_classData, value); }
            }
            public bool Rotating
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Rotating", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rotating", CallKind.ClassMember, m_classData, value); }
            }
            public locksound_t Ls
            {
                get { return Invoker.CallNative<locksound_t>("SDKClass", "Ls", CallKind.ClassMember, m_classData); }
            }
            public string UseSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "UseSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseSound", CallKind.ClassMember, m_classData, value); }
            }
            public string LockedSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "LockedSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockedSound", CallKind.ClassMember, m_classData, value); }
            }
            public string UnlockedSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "UnlockedSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UnlockedSound", CallKind.ClassMember, m_classData, value); }
            }
            public string OverrideAnticipationName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OverrideAnticipationName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideAnticipationName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Locked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Locked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Locked", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public float UseLockedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "UseLockedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseLockedTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool SolidBsp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnDamaged
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDamaged", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPressed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPressed", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUseLocked
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUseLocked", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnIn
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnIn", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnOut
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnOut", CallKind.ClassMember, m_classData); }
            }
            public int State
            {
                get { return Invoker.CallNative<int>("SDKClass", "State", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "State", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Constraint
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Constraint", CallKind.ClassMember, m_classData); }
            }
            public CEntityInstance ConstraintParent
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "ConstraintParent", CallKind.ClassMember, m_classData); }
            }
            public bool ForceNpcExclude
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData, value); }
            }
            public string GlowEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "GlowEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowEntity", CallKind.ClassMember, m_classData, value); }
            }
            public bool Usable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Usable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Usable", CallKind.ClassMember, m_classData, value); }
            }
            public string DisplayText
            {
                get { return Invoker.CallNative<string>("SDKClass", "DisplayText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisplayText", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseClientUIEntity : CBaseModelEntity
        {
            public CBaseClientUIEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseClientUIEntity", "CBaseClientUIEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseClientUIEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseClientUIEntity", "CBaseClientUIEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseClientUIEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public string DialogXMLName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DialogXMLName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DialogXMLName", CallKind.ClassMember, m_classData, value); }
            }
            public string PanelClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PanelClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelClassName", CallKind.ClassMember, m_classData, value); }
            }
            public string PanelID
            {
                get { return Invoker.CallNative<string>("SDKClass", "PanelID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelID", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseCombatCharacter : CBaseFlex
        {
            public CBaseCombatCharacter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCombatCharacter", "CBaseCombatCharacter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCombatCharacter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCombatCharacter", "CBaseCombatCharacter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCombatCharacter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ForceServerRagdoll
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceServerRagdoll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceServerRagdoll", CallKind.ClassMember, m_classData, value); }
            }
            public float ImpactEnergyScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData, value); }
            }
            public int MinVehicleDamageToTempRagdoll
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinVehicleDamageToTempRagdoll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinVehicleDamageToTempRagdoll", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyStressDamage
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyStressDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyStressDamage", CallKind.ClassMember, m_classData, value); }
            }
            public bool DeathEventsDispatched
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DeathEventsDispatched", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathEventsDispatched", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageCount", CallKind.ClassMember, m_classData, value); }
            }
            public string StrRelationships
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrRelationships", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrRelationships", CallKind.ClassMember, m_classData, value); }
            }
            public uint Hull
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Hull", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull", CallKind.ClassMember, m_classData, value); }
            }
            public uint NavHullIdx
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NavHullIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NavHullIdx", CallKind.ClassMember, m_classData, value); }
            }
            public CMovementStatsProperty MovementStats
            {
                get { return Invoker.CallNative<CMovementStatsProperty>("SDKClass", "MovementStats", CallKind.ClassMember, m_classData); }
            }
            public CBaseFlex Parent
            {
                get { return Invoker.CallNative<CBaseFlex>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseConstraint : CBoneConstraintBase
        {
            public CBaseConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseConstraint", "CBaseConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseConstraint", "CBaseConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D UpVector
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "UpVector", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpVector", CallKind.ClassMember, m_classData, value); }
            }
            public CBoneConstraintBase Parent
            {
                get { return Invoker.CallNative<CBoneConstraintBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseCSGrenade : CCSWeaponBase
        {
            public CBaseCSGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCSGrenade", "CBaseCSGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCSGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCSGrenade", "CBaseCSGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCSGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Redraw
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Redraw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Redraw", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsHeldByPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHeldByPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHeldByPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool PinPulled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PinPulled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PinPulled", CallKind.ClassMember, m_classData, value); }
            }
            public bool JumpThrow
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JumpThrow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpThrow", CallKind.ClassMember, m_classData, value); }
            }
            public bool ThrowAnimating
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ThrowAnimating", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrowAnimating", CallKind.ClassMember, m_classData, value); }
            }
            public float ThrowTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ThrowTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrowTime", CallKind.ClassMember, m_classData, value); }
            }
            public float ThrowStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ThrowStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrowStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float DropTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DropTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DropTime", CallKind.ClassMember, m_classData, value); }
            }
            public float PinPullTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PinPullTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PinPullTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool JustPulledPin
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JustPulledPin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JustPulledPin", CallKind.ClassMember, m_classData, value); }
            }
            public int NextHoldTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextHoldTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextHoldTick", CallKind.ClassMember, m_classData, value); }
            }
            public float NextHoldFrac
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextHoldFrac", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextHoldFrac", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBase SwitchToWeaponAfterThrow
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "SwitchToWeaponAfterThrow", CallKind.ClassMember, m_classData); }
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseCSGrenadeProjectile : CBaseGrenade
        {
            public CBaseCSGrenadeProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCSGrenadeProjectile", "CBaseCSGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCSGrenadeProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseCSGrenadeProjectile", "CBaseCSGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseCSGrenadeProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D InitialPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InitialPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D InitialVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InitialVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public int Bounces
            {
                get { return Invoker.CallNative<int>("SDKClass", "Bounces", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bounces", CallKind.ClassMember, m_classData, value); }
            }
            public int ExplodeEffectTickBegin
            {
                get { return Invoker.CallNative<int>("SDKClass", "ExplodeEffectTickBegin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeEffectTickBegin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ExplodeEffectOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ExplodeEffectOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeEffectOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float SpawnTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpawnTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnTime", CallKind.ClassMember, m_classData, value); }
            }
            public byte OGSExtraFlags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "OGSExtraFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OGSExtraFlags", CallKind.ClassMember, m_classData, value); }
            }
            public bool DetonationRecorded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DetonationRecorded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetonationRecorded", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ItemIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ItemIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemIndex", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OriginalSpawnLocation
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalSpawnLocation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnLocation", CallKind.ClassMember, m_classData, value); }
            }
            public float LastBounceSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastBounceSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastBounceSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GrenadeSpin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GrenadeSpin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrenadeSpin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastHitSurfaceNormal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastHitSurfaceNormal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHitSurfaceNormal", CallKind.ClassMember, m_classData, value); }
            }
            public int TicksAtZeroVelocity
            {
                get { return Invoker.CallNative<int>("SDKClass", "TicksAtZeroVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TicksAtZeroVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasEverHitEnemy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasEverHitEnemy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasEverHitEnemy", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseGrenade Parent
            {
                get { return Invoker.CallNative<CBaseGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseDMStart : CPointEntity
        {
            public CBaseDMStart(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseDMStart", "CBaseDMStart", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseDMStart(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseDMStart", "CBaseDMStart", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseDMStart()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Master
            {
                get { return Invoker.CallNative<string>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Master", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseDoor : CBaseToggle
        {
            public CBaseDoor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseDoor", "CBaseDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseDoor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseDoor", "CBaseDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseDoor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector MoveEntitySpace
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MoveDirParentSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MoveDirParentSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveDirParentSpace", CallKind.ClassMember, m_classData, value); }
            }
            public locksound_t Ls
            {
                get { return Invoker.CallNative<locksound_t>("SDKClass", "Ls", CallKind.ClassMember, m_classData); }
            }
            public bool ForceClosed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceClosed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceClosed", CallKind.ClassMember, m_classData, value); }
            }
            public bool DoorGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DoorGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DoorGroup", CallKind.ClassMember, m_classData, value); }
            }
            public bool Locked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Locked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Locked", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreDebris
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreDebris", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreDebris", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoNPCs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoNPCs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoNPCs", CallKind.ClassMember, m_classData, value); }
            }
            public uint SpawnPosition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SpawnPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnPosition", CallKind.ClassMember, m_classData, value); }
            }
            public float BlockDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseMoving
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseMoving", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseArrived
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseArrived", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseArrived", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseMovingClosed
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseMovingClosed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseMovingClosed", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseArrivedClosed
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseArrivedClosed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseArrivedClosed", CallKind.ClassMember, m_classData, value); }
            }
            public string ChainTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "ChainTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChainTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBlockedClosing
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBlockedClosing", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBlockedOpening
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBlockedOpening", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUnblockedClosing
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUnblockedClosing", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUnblockedOpening
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUnblockedOpening", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyClosed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyClosed", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnClose
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnClose", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLockedUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLockedUse", CallKind.ClassMember, m_classData); }
            }
            public bool LoopMoveSound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoopMoveSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopMoveSound", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateNavObstacle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsChaining
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsChaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsChaining", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsUsable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsUsable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsUsable", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseEntity : CEntityInstance
        {
            public CBaseEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseEntity", "CBaseEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseEntity", "CBaseEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseEntity()
            {
            }
            public void EmitSound(string sound_name, float pitch, float volume)
            {
                Internal_API.Invoker.CallNative("SDKClass", "EmitSound", Internal_API.CallKind.ClassFunction, m_classData, sound_name, pitch, volume);
            }
            public void EmitSoundFromEntity(string sound_name, float pitch, float volume, float delay)
            {
                Internal_API.Invoker.CallNative("SDKClass", "EmitSoundFromEntity", Internal_API.CallKind.ClassFunction, m_classData, sound_name, pitch, volume, delay);
            }
            public void TakeDamage(ClassData? attacker, ClassData? inflictor, ClassData? ability, DamageTypes_t damageType, float damage)
            {
                Internal_API.Invoker.CallNative("SDKClass", "TakeDamage", Internal_API.CallKind.ClassFunction, m_classData, attacker, inflictor, ability, damageType, damage);
            }
            public void CollisionRulesChanged()
            {
                Internal_API.Invoker.CallNative("SDKClass", "CollisionRulesChanged", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity EHandle()
            {
                return Internal_API.Invoker.CallNative<CBaseEntity>("SDKClass", "EHandle", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public void Spawn(CEntityKeyValues? keys)
            {
                Internal_API.Invoker.CallNative("SDKClass", "Spawn", Internal_API.CallKind.ClassFunction, m_classData, keys);
            }
            public void Despawn()
            {
                Internal_API.Invoker.CallNative("SDKClass", "Despawn", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public void AcceptInput(string input, CEntityInstance activator, CEntityInstance caller, string value, int outputID)
            {
                Internal_API.Invoker.CallNative("SDKClass", "AcceptInput", Internal_API.CallKind.ClassFunction, m_classData, input, activator, caller, value, outputID);
            }
            public string GetClassname()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "GetClassname", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntitySubclassVDataBase GetVData()
            {
                return Internal_API.Invoker.CallNative<CEntitySubclassVDataBase>("SDKClass", "GetVData", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public void Teleport(Vector? position, QAngle? angle, Vector? velocity)
            {
                Internal_API.Invoker.CallNative("SDKClass", "Teleport", Internal_API.CallKind.ClassFunction, m_classData, position, angle, velocity);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] CBodyComponent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CBodyComponent", CallKind.ClassMember, m_classData); }
            }
            public CNetworkTransmitComponent NetworkTransmitComponent
            {
                get { return Invoker.CallNative<CNetworkTransmitComponent>("SDKClass", "NetworkTransmitComponent", CallKind.ClassMember, m_classData); }
            }
            public int CurrentThinkContext
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentThinkContext", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentThinkContext", CallKind.ClassMember, m_classData, value); }
            }
            public int LastThinkTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastThinkTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastThinkTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisabledContextThinks
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisabledContextThinks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisabledContextThinks", CallKind.ClassMember, m_classData, value); }
            }
            public float LastNetworkChange
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastNetworkChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastNetworkChange", CallKind.ClassMember, m_classData, value); }
            }
            public string ResponseContext
            {
                get { return Invoker.CallNative<string>("SDKClass", "ResponseContext", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResponseContext", CallKind.ClassMember, m_classData, value); }
            }
            public int Health
            {
                get { return Invoker.CallNative<int>("SDKClass", "Health", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Health", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxHealth
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxHealth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxHealth", CallKind.ClassMember, m_classData, value); }
            }
            public byte LifeState
            {
                get { return Invoker.CallNative<byte>("SDKClass", "LifeState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LifeState", CallKind.ClassMember, m_classData, value); }
            }
            public float DamageAccumulator
            {
                get { return Invoker.CallNative<float>("SDKClass", "DamageAccumulator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageAccumulator", CallKind.ClassMember, m_classData, value); }
            }
            public bool TakesDamage
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TakesDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TakesDamage", CallKind.ClassMember, m_classData, value); }
            }
            public ulong TakeDamageFlags
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "TakeDamageFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TakeDamageFlags", CallKind.ClassMember, m_classData, value); }
            }
            public byte PlatformType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "PlatformType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlatformType", CallKind.ClassMember, m_classData, value); }
            }
            public byte MoveCollide
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MoveCollide", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveCollide", CallKind.ClassMember, m_classData, value); }
            }
            public byte MoveType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MoveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveType", CallKind.ClassMember, m_classData, value); }
            }
            public byte ActualMoveType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ActualMoveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActualMoveType", CallKind.ClassMember, m_classData, value); }
            }
            public byte WaterTouch
            {
                get { return Invoker.CallNative<byte>("SDKClass", "WaterTouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterTouch", CallKind.ClassMember, m_classData, value); }
            }
            public byte SlimeTouch
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SlimeTouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlimeTouch", CallKind.ClassMember, m_classData, value); }
            }
            public bool RestoreInHierarchy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RestoreInHierarchy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RestoreInHierarchy", CallKind.ClassMember, m_classData, value); }
            }
            public string Target
            {
                get { return Invoker.CallNative<string>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter DamageFilter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "DamageFilter", CallKind.ClassMember, m_classData); }
            }
            public string DamageFilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DamageFilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageFilterName", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveDoneTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveDoneTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveDoneTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint SubclassID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SubclassID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubclassID", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimTime", CallKind.ClassMember, m_classData, value); }
            }
            public float SimulationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SimulationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimulationTime", CallKind.ClassMember, m_classData, value); }
            }
            public float CreateTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CreateTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClientSideRagdoll
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClientSideRagdoll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientSideRagdoll", CallKind.ClassMember, m_classData, value); }
            }
            public byte InterpolationFrame
            {
                get { return Invoker.CallNative<byte>("SDKClass", "InterpolationFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterpolationFrame", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrevVPhysicsUpdatePos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrevVPhysicsUpdatePos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevVPhysicsUpdatePos", CallKind.ClassMember, m_classData, value); }
            }
            public byte TeamNum
            {
                get { return Invoker.CallNative<byte>("SDKClass", "TeamNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamNum", CallKind.ClassMember, m_classData, value); }
            }
            public string Globalname
            {
                get { return Invoker.CallNative<string>("SDKClass", "Globalname", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Globalname", CallKind.ClassMember, m_classData, value); }
            }
            public int SentToClients
            {
                get { return Invoker.CallNative<int>("SDKClass", "SentToClients", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SentToClients", CallKind.ClassMember, m_classData, value); }
            }
            public float Speed
            {
                get { return Invoker.CallNative<float>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Speed", CallKind.ClassMember, m_classData, value); }
            }
            public string UniqueHammerID
            {
                get { return Invoker.CallNative<string>("SDKClass", "UniqueHammerID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UniqueHammerID", CallKind.ClassMember, m_classData, value); }
            }
            public uint Spawnflags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Spawnflags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spawnflags", CallKind.ClassMember, m_classData, value); }
            }
            public int NextThinkTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextThinkTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextThinkTick", CallKind.ClassMember, m_classData, value); }
            }
            public int SimulationTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "SimulationTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimulationTick", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnKilled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnKilled", CallKind.ClassMember, m_classData); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AbsVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AbsVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbsVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public CNetworkVelocityVector Velocity
            {
                get { return Invoker.CallNative<CNetworkVelocityVector>("SDKClass", "Velocity", CallKind.ClassMember, m_classData); }
            }
            public Vector2D BaseVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BaseVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public int PushEnumCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "PushEnumCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushEnumCount", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Collision
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Collision", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity EffectEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EffectEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity OwnerEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "OwnerEntity", CallKind.ClassMember, m_classData); }
            }
            public uint Effects
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Effects", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Effects", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity GroundEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "GroundEntity", CallKind.ClassMember, m_classData); }
            }
            public int GroundBodyIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "GroundBodyIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundBodyIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float Friction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Friction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Friction", CallKind.ClassMember, m_classData, value); }
            }
            public float Elasticity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Elasticity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Elasticity", CallKind.ClassMember, m_classData, value); }
            }
            public float GravityScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "GravityScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GravityScale", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeScale", CallKind.ClassMember, m_classData, value); }
            }
            public float WaterLevel
            {
                get { return Invoker.CallNative<float>("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData, value); }
            }
            public bool GravityDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GravityDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GravityDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimatedEveryTick
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimatedEveryTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimatedEveryTick", CallKind.ClassMember, m_classData, value); }
            }
            public float ActualGravityScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ActualGravityScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActualGravityScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool GravityActuallyDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GravityActuallyDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GravityActuallyDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableLowViolence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableLowViolence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableLowViolence", CallKind.ClassMember, m_classData, value); }
            }
            public byte WaterType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "WaterType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterType", CallKind.ClassMember, m_classData, value); }
            }
            public int EFlags
            {
                get { return Invoker.CallNative<int>("SDKClass", "EFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EFlags", CallKind.ClassMember, m_classData, value); }
            }
            public int InitialTeamNum
            {
                get { return Invoker.CallNative<int>("SDKClass", "InitialTeamNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialTeamNum", CallKind.ClassMember, m_classData, value); }
            }
            public float NavIgnoreUntilTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NavIgnoreUntilTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NavIgnoreUntilTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AngVelocity
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AngVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkQuantizeOriginAndAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkQuantizeOriginAndAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkQuantizeOriginAndAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool LagCompensate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LagCompensate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LagCompensate", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Blocker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Blocker", CallKind.ClassMember, m_classData); }
            }
            public float LocalTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalTime", CallKind.ClassMember, m_classData, value); }
            }
            public float VPhysicsUpdateLocalTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "VPhysicsUpdateLocalTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VPhysicsUpdateLocalTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint BloodType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BloodType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BloodType", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Parent
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseEntityAPI : ClassData
        {
            public CBaseEntityAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseEntityAPI", "CBaseEntityAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseEntityAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseEntityAPI", "CBaseEntityAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseEntityAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBaseFilter : CLogicalEntity
        {
            public CBaseFilter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFilter", "CBaseFilter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFilter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFilter", "CBaseFilter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFilter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Negated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Negated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Negated", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPass
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPass", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFail
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFail", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseFlex : CBaseAnimGraph
        {
            public CBaseFlex(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFlex", "CBaseFlex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFlex(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFlex", "CBaseFlex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFlex()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] FlexWeight
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "FlexWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlexWeight", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LookTargetPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LookTargetPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookTargetPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool Blinktoggle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Blinktoggle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Blinktoggle", CallKind.ClassMember, m_classData, value); }
            }
            public float AllowResponsesEndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AllowResponsesEndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowResponsesEndTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastFlexAnimationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastFlexAnimationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastFlexAnimationTime", CallKind.ClassMember, m_classData, value); }
            }
            public SceneEventId_t NextSceneEventId
            {
                get { return Invoker.CallNative<SceneEventId_t>("SDKClass", "NextSceneEventId", CallKind.ClassMember, m_classData); }
            }
            public bool UpdateLayerPriorities
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UpdateLayerPriorities", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdateLayerPriorities", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseFlexAlias_funCBaseFlex : CBaseFlex
        {
            public CBaseFlexAlias_funCBaseFlex(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFlexAlias_funCBaseFlex", "CBaseFlexAlias_funCBaseFlex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFlexAlias_funCBaseFlex(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseFlexAlias_funCBaseFlex", "CBaseFlexAlias_funCBaseFlex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseFlexAlias_funCBaseFlex()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseFlex Parent
            {
                get { return Invoker.CallNative<CBaseFlex>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseGrenade : CBaseFlex
        {
            public CBaseGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseGrenade", "CBaseGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseGrenade", "CBaseGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnPlayerPickup
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerPickup", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnExplode
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnExplode", CallKind.ClassMember, m_classData); }
            }
            public bool HasWarnedAI
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasWarnedAI", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasWarnedAI", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsSmokeGrenade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsSmokeGrenade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsSmokeGrenade", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLive", CallKind.ClassMember, m_classData, value); }
            }
            public float DmgRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "DmgRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DmgRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float DetonateTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DetonateTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetonateTime", CallKind.ClassMember, m_classData, value); }
            }
            public float WarnAITime
            {
                get { return Invoker.CallNative<float>("SDKClass", "WarnAITime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarnAITime", CallKind.ClassMember, m_classData, value); }
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public string BounceSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "BounceSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BounceSound", CallKind.ClassMember, m_classData, value); }
            }
            public string ExplosionSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExplosionSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionSound", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn Thrower
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Thrower", CallKind.ClassMember, m_classData); }
            }
            public float NextAttack
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextAttack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextAttack", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn OriginalThrower
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "OriginalThrower", CallKind.ClassMember, m_classData); }
            }
            public CBaseFlex Parent
            {
                get { return Invoker.CallNative<CBaseFlex>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseIssue : ClassData
        {
            public CBaseIssue(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseIssue", "CBaseIssue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseIssue(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseIssue", "CBaseIssue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseIssue()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TypeString
            {
                get { return Invoker.CallNative<string>("SDKClass", "TypeString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TypeString", CallKind.ClassMember, m_classData, value); }
            }
            public string DetailsString
            {
                get { return Invoker.CallNative<string>("SDKClass", "DetailsString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetailsString", CallKind.ClassMember, m_classData, value); }
            }
            public int NumYesVotes
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumYesVotes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumYesVotes", CallKind.ClassMember, m_classData, value); }
            }
            public int NumNoVotes
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumNoVotes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumNoVotes", CallKind.ClassMember, m_classData, value); }
            }
            public int NumPotentialVotes
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumPotentialVotes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumPotentialVotes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CBaseModelEntity : CBaseEntity
        {
            public CBaseModelEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseModelEntity", "CBaseModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseModelEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseModelEntity", "CBaseModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseModelEntity()
            {
            }
            public void SetBodygroup(string key, ulong value)
            {
                Internal_API.Invoker.CallNative("SDKClass", "SetBodygroup", Internal_API.CallKind.ClassFunction, m_classData, key, value);
            }
            public void SetModel(string model)
            {
                Internal_API.Invoker.CallNative("SDKClass", "SetModel", Internal_API.CallKind.ClassFunction, m_classData, model);
            }
            public void SetSolidType(byte solidType)
            {
                Internal_API.Invoker.CallNative("SDKClass", "SetSolidType", Internal_API.CallKind.ClassFunction, m_classData, solidType);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] CRenderComponent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CRenderComponent", CallKind.ClassMember, m_classData); }
            }
            public CHitboxComponent CHitboxComponent
            {
                get { return Invoker.CallNative<CHitboxComponent>("SDKClass", "CHitboxComponent", CallKind.ClassMember, m_classData); }
            }
            public int[] DestructiblePartsSystemComponent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "DestructiblePartsSystemComponent", CallKind.ClassMember, m_classData); }
            }
            public uint LastHitGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LastHitGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHitGroup", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastDamagePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastDamagePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastDamagePosition", CallKind.ClassMember, m_classData, value); }
            }
            public float DissolveStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DissolveStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DissolveStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnIgnite
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnIgnite", CallKind.ClassMember, m_classData); }
            }
            public byte RenderMode
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RenderMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderMode", CallKind.ClassMember, m_classData, value); }
            }
            public byte RenderFX
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RenderFX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFX", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowFadeInView
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowFadeInView", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowFadeInView", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Render
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Render", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Render", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderToCubemaps
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderToCubemaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderToCubemaps", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoInterpolate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoInterpolate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoInterpolate", CallKind.ClassMember, m_classData, value); }
            }
            public CCollisionProperty Collision
            {
                get { return Invoker.CallNative<CCollisionProperty>("SDKClass", "Collision", CallKind.ClassMember, m_classData); }
            }
            public CGlowProperty Glow
            {
                get { return Invoker.CallNative<CGlowProperty>("SDKClass", "Glow", CallKind.ClassMember, m_classData); }
            }
            public float GlowBackfaceMult
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlowBackfaceMult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowBackfaceMult", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeMinDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeMinDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeMinDist", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeMaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeMaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeMaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowStrength", CallKind.ClassMember, m_classData, value); }
            }
            public byte ObjectCulling
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ObjectCulling", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObjectCulling", CallKind.ClassMember, m_classData, value); }
            }
            public int AddDecal
            {
                get { return Invoker.CallNative<int>("SDKClass", "AddDecal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AddDecal", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DecalPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DecalPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecalPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DecalForwardAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DecalForwardAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecalForwardAxis", CallKind.ClassMember, m_classData, value); }
            }
            public float DecalHealBloodRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "DecalHealBloodRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecalHealBloodRate", CallKind.ClassMember, m_classData, value); }
            }
            public float DecalHealHeightRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "DecalHealHeightRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecalHealHeightRate", CallKind.ClassMember, m_classData, value); }
            }
            public CNetworkViewOffsetVector ViewOffset
            {
                get { return Invoker.CallNative<CNetworkViewOffsetVector>("SDKClass", "ViewOffset", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseModelEntityAPI : ClassData
        {
            public CBaseModelEntityAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseModelEntityAPI", "CBaseModelEntityAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseModelEntityAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseModelEntityAPI", "CBaseModelEntityAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseModelEntityAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBaseMoveBehavior : CPathKeyFrame
        {
            public CBaseMoveBehavior(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseMoveBehavior", "CBaseMoveBehavior", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseMoveBehavior(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseMoveBehavior", "CBaseMoveBehavior", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseMoveBehavior()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int PositionInterpolator
            {
                get { return Invoker.CallNative<int>("SDKClass", "PositionInterpolator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PositionInterpolator", CallKind.ClassMember, m_classData, value); }
            }
            public int RotationInterpolator
            {
                get { return Invoker.CallNative<int>("SDKClass", "RotationInterpolator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationInterpolator", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimEndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimEndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimEndTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AverageSpeedAcrossFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "AverageSpeedAcrossFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AverageSpeedAcrossFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int[] CurrentKeyFrame
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CurrentKeyFrame", CallKind.ClassMember, m_classData); }
            }
            public int[] TargetKeyFrame
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "TargetKeyFrame", CallKind.ClassMember, m_classData); }
            }
            public int[] PreKeyFrame
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PreKeyFrame", CallKind.ClassMember, m_classData); }
            }
            public int[] PostKeyFrame
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PostKeyFrame", CallKind.ClassMember, m_classData); }
            }
            public float TimeIntoFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeIntoFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeIntoFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int Direction
            {
                get { return Invoker.CallNative<int>("SDKClass", "Direction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Direction", CallKind.ClassMember, m_classData, value); }
            }
            public CPathKeyFrame Parent
            {
                get { return Invoker.CallNative<CPathKeyFrame>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlatTrain : CBaseToggle
        {
            public CBasePlatTrain(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlatTrain", "CBasePlatTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlatTrain(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlatTrain", "CBasePlatTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlatTrain()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string NoiseMoving
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseMoving", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseArrived
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseArrived", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseArrived", CallKind.ClassMember, m_classData, value); }
            }
            public float Volume
            {
                get { return Invoker.CallNative<float>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volume", CallKind.ClassMember, m_classData, value); }
            }
            public float TWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "TWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float TLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "TLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TLength", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlayerController : CBaseEntity
        {
            public CBasePlayerController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerController", "CBasePlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerController", "CBasePlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerController()
            {
            }
            public int EntityIndex()
            {
                return Internal_API.Invoker.CallNative<int>("SDKClass", "EntityIndex", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong InButtonsWhichAreToggles
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "InButtonsWhichAreToggles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InButtonsWhichAreToggles", CallKind.ClassMember, m_classData, value); }
            }
            public uint TickBase
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TickBase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickBase", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerPawn Pawn
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "Pawn", CallKind.ClassMember, m_classData); }
            }
            public bool KnownTeamMismatch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "KnownTeamMismatch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KnownTeamMismatch", CallKind.ClassMember, m_classData, value); }
            }
            public int SplitScreenSlot
            {
                get { return Invoker.CallNative<int>("SDKClass", "SplitScreenSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplitScreenSlot", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerController SplitOwner
            {
                get { return Invoker.CallNative<CBasePlayerController>("SDKClass", "SplitOwner", CallKind.ClassMember, m_classData); }
            }
            public bool IsHLTV
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHLTV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHLTV", CallKind.ClassMember, m_classData, value); }
            }
            public uint Connected
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Connected", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Connected", CallKind.ClassMember, m_classData, value); }
            }
            public string PlayerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PlayerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerName", CallKind.ClassMember, m_classData, value); }
            }
            public string NetworkIDString
            {
                get { return Invoker.CallNative<string>("SDKClass", "NetworkIDString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkIDString", CallKind.ClassMember, m_classData, value); }
            }
            public float LerpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LerpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool LagCompensation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LagCompensation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LagCompensation", CallKind.ClassMember, m_classData, value); }
            }
            public bool Predict
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Predict", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Predict", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLowViolence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLowViolence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLowViolence", CallKind.ClassMember, m_classData, value); }
            }
            public bool GamePaused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GamePaused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GamePaused", CallKind.ClassMember, m_classData, value); }
            }
            public uint IgnoreGlobalChat
            {
                get { return Invoker.CallNative<uint>("SDKClass", "IgnoreGlobalChat", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreGlobalChat", CallKind.ClassMember, m_classData, value); }
            }
            public float LastPlayerTalkTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastPlayerTalkTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPlayerTalkTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastEntitySteadyState
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastEntitySteadyState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastEntitySteadyState", CallKind.ClassMember, m_classData, value); }
            }
            public int AvailableEntitySteadyState
            {
                get { return Invoker.CallNative<int>("SDKClass", "AvailableEntitySteadyState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvailableEntitySteadyState", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasAnySteadyStateEnts
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasAnySteadyStateEnts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasAnySteadyStateEnts", CallKind.ClassMember, m_classData, value); }
            }
            public ulong SteamID
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "SteamID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SteamID", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoClipEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoClipEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoClipEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public uint DesiredFOV
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DesiredFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredFOV", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlayerControllerAPI : ClassData
        {
            public CBasePlayerControllerAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerControllerAPI", "CBasePlayerControllerAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerControllerAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerControllerAPI", "CBasePlayerControllerAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerControllerAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBasePlayerPawn : CBaseCombatCharacter
        {
            public CBasePlayerPawn(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerPawn", "CBasePlayerPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerPawn(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerPawn", "CBasePlayerPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerPawn()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] WeaponServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "WeaponServices", CallKind.ClassMember, m_classData); }
            }
            public int[] ItemServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ItemServices", CallKind.ClassMember, m_classData); }
            }
            public int[] AutoaimServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "AutoaimServices", CallKind.ClassMember, m_classData); }
            }
            public int[] ObserverServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ObserverServices", CallKind.ClassMember, m_classData); }
            }
            public int[] WaterServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "WaterServices", CallKind.ClassMember, m_classData); }
            }
            public int[] UseServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "UseServices", CallKind.ClassMember, m_classData); }
            }
            public int[] FlashlightServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FlashlightServices", CallKind.ClassMember, m_classData); }
            }
            public int[] CameraServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CameraServices", CallKind.ClassMember, m_classData); }
            }
            public int[] MovementServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "MovementServices", CallKind.ClassMember, m_classData); }
            }
            public Vector _angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "_angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "_angle", CallKind.ClassMember, m_classData, value); }
            }
            public Vector _anglePrevious
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "_anglePrevious", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "_anglePrevious", CallKind.ClassMember, m_classData, value); }
            }
            public uint HideHUD
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HideHUD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HideHUD", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeLastHurt
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeLastHurt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeLastHurt", CallKind.ClassMember, m_classData, value); }
            }
            public float DeathTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DeathTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextSuicideTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextSuicideTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSuicideTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool InitHUD
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InitHUD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitHUD", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Expresser
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Expresser", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerController Controller
            {
                get { return Invoker.CallNative<CBasePlayerController>("SDKClass", "Controller", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerController DefaultController
            {
                get { return Invoker.CallNative<CBasePlayerController>("SDKClass", "DefaultController", CallKind.ClassMember, m_classData); }
            }
            public float HltvReplayDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "HltvReplayDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HltvReplayDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float HltvReplayEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "HltvReplayEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HltvReplayEnd", CallKind.ClassMember, m_classData, value); }
            }
            public int HltvReplayEntity
            {
                get { return Invoker.CallNative<int>("SDKClass", "HltvReplayEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HltvReplayEntity", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseCombatCharacter Parent
            {
                get { return Invoker.CallNative<CBaseCombatCharacter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlayerVData : CEntitySubclassVDataBase
        {
            public CBasePlayerVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerVData", "CBasePlayerVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerVData", "CBasePlayerVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSkillFloat HeadDamageMultiplier
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "HeadDamageMultiplier", CallKind.ClassMember, m_classData); }
            }
            public CSkillFloat ChestDamageMultiplier
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "ChestDamageMultiplier", CallKind.ClassMember, m_classData); }
            }
            public CSkillFloat StomachDamageMultiplier
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "StomachDamageMultiplier", CallKind.ClassMember, m_classData); }
            }
            public CSkillFloat ArmDamageMultiplier
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "ArmDamageMultiplier", CallKind.ClassMember, m_classData); }
            }
            public CSkillFloat LegDamageMultiplier
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "LegDamageMultiplier", CallKind.ClassMember, m_classData); }
            }
            public float HoldBreathTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "HoldBreathTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoldBreathTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DrowningDamageInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "DrowningDamageInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrowningDamageInterval", CallKind.ClassMember, m_classData, value); }
            }
            public int DrowningDamageInitial
            {
                get { return Invoker.CallNative<int>("SDKClass", "DrowningDamageInitial", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrowningDamageInitial", CallKind.ClassMember, m_classData, value); }
            }
            public int DrowningDamageMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "DrowningDamageMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrowningDamageMax", CallKind.ClassMember, m_classData, value); }
            }
            public int WaterSpeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "WaterSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float UseRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "UseRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseRange", CallKind.ClassMember, m_classData, value); }
            }
            public float UseAngleTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "UseAngleTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAngleTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public float CrouchTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CrouchTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrouchTime", CallKind.ClassMember, m_classData, value); }
            }
            public CEntitySubclassVDataBase Parent
            {
                get { return Invoker.CallNative<CEntitySubclassVDataBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlayerWeapon : CEconEntity
        {
            public CBasePlayerWeapon(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerWeapon", "CBasePlayerWeapon", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerWeapon(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerWeapon", "CBasePlayerWeapon", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerWeapon()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NextPrimaryAttackTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextPrimaryAttackTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextPrimaryAttackTick", CallKind.ClassMember, m_classData, value); }
            }
            public float NextPrimaryAttackTickRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextPrimaryAttackTickRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextPrimaryAttackTickRatio", CallKind.ClassMember, m_classData, value); }
            }
            public int NextSecondaryAttackTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextSecondaryAttackTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSecondaryAttackTick", CallKind.ClassMember, m_classData, value); }
            }
            public float NextSecondaryAttackTickRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextSecondaryAttackTickRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSecondaryAttackTickRatio", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ReserveAmmo
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ReserveAmmo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReserveAmmo", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPlayerUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerUse", CallKind.ClassMember, m_classData); }
            }
            public CEconEntity Parent
            {
                get { return Invoker.CallNative<CEconEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePlayerWeaponVData : CEntitySubclassVDataBase
        {
            public CBasePlayerWeaponVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerWeaponVData", "CBasePlayerWeaponVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerWeaponVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePlayerWeaponVData", "CBasePlayerWeaponVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePlayerWeaponVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool BuiltRightHanded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BuiltRightHanded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuiltRightHanded", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowFlipping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowFlipping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowFlipping", CallKind.ClassMember, m_classData, value); }
            }
            public byte MuzzleSmokeShotThreshold
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MuzzleSmokeShotThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleSmokeShotThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float MuzzleSmokeTimeout
            {
                get { return Invoker.CallNative<float>("SDKClass", "MuzzleSmokeTimeout", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleSmokeTimeout", CallKind.ClassMember, m_classData, value); }
            }
            public float MuzzleSmokeDecrementRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "MuzzleSmokeDecrementRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleSmokeDecrementRate", CallKind.ClassMember, m_classData, value); }
            }
            public bool LinkedCooldowns
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LinkedCooldowns", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinkedCooldowns", CallKind.ClassMember, m_classData, value); }
            }
            public byte Flags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public uint PrimaryAmmoType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PrimaryAmmoType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrimaryAmmoType", CallKind.ClassMember, m_classData, value); }
            }
            public uint SecondaryAmmoType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SecondaryAmmoType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SecondaryAmmoType", CallKind.ClassMember, m_classData, value); }
            }
            public bool ReserveAmmoAsClips
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ReserveAmmoAsClips", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReserveAmmoAsClips", CallKind.ClassMember, m_classData, value); }
            }
            public bool TreatAsSingleClip
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TreatAsSingleClip", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TreatAsSingleClip", CallKind.ClassMember, m_classData, value); }
            }
            public int Weight
            {
                get { return Invoker.CallNative<int>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoSwitchTo
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoSwitchTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoSwitchTo", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoSwitchFrom
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoSwitchFrom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoSwitchFrom", CallKind.ClassMember, m_classData, value); }
            }
            public uint RumbleEffect
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RumbleEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RumbleEffect", CallKind.ClassMember, m_classData, value); }
            }
            public float DropSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DropSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DropSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public int Slot
            {
                get { return Invoker.CallNative<int>("SDKClass", "Slot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slot", CallKind.ClassMember, m_classData, value); }
            }
            public int Position
            {
                get { return Invoker.CallNative<int>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public CEntitySubclassVDataBase Parent
            {
                get { return Invoker.CallNative<CEntitySubclassVDataBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseProp : CBaseAnimGraph
        {
            public CBaseProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseProp", "CBaseProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseProp", "CBaseProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ModelOverrodeBlockLOS
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ModelOverrodeBlockLOS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelOverrodeBlockLOS", CallKind.ClassMember, m_classData, value); }
            }
            public int ShapeType
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShapeType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShapeType", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConformToCollisionBounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConformToCollisionBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConformToCollisionBounds", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBasePropDoor : CDynamicProp
        {
            public CBasePropDoor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePropDoor", "CBasePropDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePropDoor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBasePropDoor", "CBasePropDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBasePropDoor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AutoReturnDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutoReturnDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoReturnDelay", CallKind.ClassMember, m_classData, value); }
            }
            public int HardwareType
            {
                get { return Invoker.CallNative<int>("SDKClass", "HardwareType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HardwareType", CallKind.ClassMember, m_classData, value); }
            }
            public bool NeedsHardware
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NeedsHardware", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeedsHardware", CallKind.ClassMember, m_classData, value); }
            }
            public uint DoorState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DoorState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DoorState", CallKind.ClassMember, m_classData, value); }
            }
            public bool Locked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Locked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Locked", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoNPCs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoNPCs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoNPCs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ClosedPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ClosedPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClosedPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector ClosedAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "ClosedAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClosedAngles", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Blocker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Blocker", CallKind.ClassMember, m_classData); }
            }
            public bool FirstBlocked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstBlocked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstBlocked", CallKind.ClassMember, m_classData, value); }
            }
            public locksound_t Ls
            {
                get { return Invoker.CallNative<locksound_t>("SDKClass", "Ls", CallKind.ClassMember, m_classData); }
            }
            public bool ForceClosed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceClosed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceClosed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LatchWorldPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LatchWorldPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LatchWorldPosition", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public string SoundMoving
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundMoving", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundOpen
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundOpen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundOpen", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundClose
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundClose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundClose", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundLock
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundLock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundLock", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundUnlock
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundUnlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundUnlock", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundLatch
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundLatch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundLatch", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundPound
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundPound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundPound", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundJiggle
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundJiggle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundJiggle", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundLockedAnim
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundLockedAnim", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundLockedAnim", CallKind.ClassMember, m_classData, value); }
            }
            public int NumCloseAttempts
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumCloseAttempts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumCloseAttempts", CallKind.ClassMember, m_classData, value); }
            }
            public uint PhysicsMaterial
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PhysicsMaterial", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhysicsMaterial", CallKind.ClassMember, m_classData, value); }
            }
            public string SlaveName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SlaveName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlaveName", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePropDoor Master
            {
                get { return Invoker.CallNative<CBasePropDoor>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBlockedClosing
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBlockedClosing", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBlockedOpening
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBlockedOpening", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUnblockedClosing
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUnblockedClosing", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUnblockedOpening
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUnblockedOpening", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyClosed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyClosed", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnClose
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnClose", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLockedUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLockedUse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAjarOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAjarOpen", CallKind.ClassMember, m_classData); }
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseRendererSource2 : CParticleFunctionRenderer
        {
            public CBaseRendererSource2(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseRendererSource2", "CBaseRendererSource2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseRendererSource2(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseRendererSource2", "CBaseRendererSource2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseRendererSource2()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleCollectionRendererFloatInput RadiusScale
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "RadiusScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput AlphaScale
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "AlphaScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput RollScale
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "RollScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererVecInput ColorScale
            {
                get { return Invoker.CallNative<CParticleCollectionRendererVecInput>("SDKClass", "ColorScale", CallKind.ClassMember, m_classData); }
            }
            public uint ColorBlendType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ColorBlendType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorBlendType", CallKind.ClassMember, m_classData, value); }
            }
            public uint ShaderType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ShaderType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShaderType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrShaderOverride
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrShaderOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrShaderOverride", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput CenterXOffset
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "CenterXOffset", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput CenterYOffset
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "CenterYOffset", CallKind.ClassMember, m_classData); }
            }
            public float BumpStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "BumpStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BumpStrength", CallKind.ClassMember, m_classData, value); }
            }
            public uint CropTextureOverride
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CropTextureOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CropTextureOverride", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimationRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimationRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationRate", CallKind.ClassMember, m_classData, value); }
            }
            public uint AnimationType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AnimationType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationType", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimateInFPS
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimateInFPS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimateInFPS", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput MotionVectorScaleU
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "MotionVectorScaleU", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput MotionVectorScaleV
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "MotionVectorScaleV", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput SelfIllumAmount
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "SelfIllumAmount", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput DiffuseAmount
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "DiffuseAmount", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput DiffuseClamp
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "DiffuseClamp", CallKind.ClassMember, m_classData); }
            }
            public int LightingControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightingControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightingControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleAttributeIndex_t SelfIllumPerParticle
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "SelfIllumPerParticle", CallKind.ClassMember, m_classData); }
            }
            public uint OutputBlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OutputBlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputBlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool GammaCorrectVertexColors
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GammaCorrectVertexColors", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GammaCorrectVertexColors", CallKind.ClassMember, m_classData, value); }
            }
            public bool SaturateColorPreAlphaBlend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SaturateColorPreAlphaBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaturateColorPreAlphaBlend", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput AddSelfAmount
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "AddSelfAmount", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput Desaturation
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "Desaturation", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput OverbrightFactor
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "OverbrightFactor", CallKind.ClassMember, m_classData); }
            }
            public int HSVShiftControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "HSVShiftControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HSVShiftControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public uint FogType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FogType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogType", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput FogAmount
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FogAmount", CallKind.ClassMember, m_classData); }
            }
            public bool TintByFOW
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TintByFOW", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintByFOW", CallKind.ClassMember, m_classData, value); }
            }
            public bool TintByGlobalLight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TintByGlobalLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintByGlobalLight", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleAlphaReference
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleAlphaReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleAlphaReference", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleAlphaRefWindow
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleAlphaRefWindow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleAlphaRefWindow", CallKind.ClassMember, m_classData, value); }
            }
            public uint AlphaReferenceType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AlphaReferenceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlphaReferenceType", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput AlphaReferenceSoftness
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "AlphaReferenceSoftness", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput SourceAlphaValueToMapToZero
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "SourceAlphaValueToMapToZero", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput SourceAlphaValueToMapToOne
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "SourceAlphaValueToMapToOne", CallKind.ClassMember, m_classData); }
            }
            public bool Refract
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Refract", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Refract", CallKind.ClassMember, m_classData, value); }
            }
            public bool RefractSolid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RefractSolid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefractSolid", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput RefractAmount
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "RefractAmount", CallKind.ClassMember, m_classData); }
            }
            public int RefractBlurRadius
            {
                get { return Invoker.CallNative<int>("SDKClass", "RefractBlurRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefractBlurRadius", CallKind.ClassMember, m_classData, value); }
            }
            public uint RefractBlurType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RefractBlurType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefractBlurType", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyRenderInEffectsBloomPass
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyRenderInEffectsBloomPass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyRenderInEffectsBloomPass", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyRenderInEffectsWaterPass
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyRenderInEffectsWaterPass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyRenderInEffectsWaterPass", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseMixedResolutionRendering
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseMixedResolutionRendering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseMixedResolutionRendering", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyRenderInEffecsGameOverlay
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyRenderInEffecsGameOverlay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyRenderInEffecsGameOverlay", CallKind.ClassMember, m_classData, value); }
            }
            public string StencilTestID
            {
                get { return Invoker.CallNative<string>("SDKClass", "StencilTestID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StencilTestID", CallKind.ClassMember, m_classData, value); }
            }
            public bool StencilTestExclude
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StencilTestExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StencilTestExclude", CallKind.ClassMember, m_classData, value); }
            }
            public string StencilWriteID
            {
                get { return Invoker.CallNative<string>("SDKClass", "StencilWriteID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StencilWriteID", CallKind.ClassMember, m_classData, value); }
            }
            public bool WriteStencilOnDepthPass
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WriteStencilOnDepthPass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WriteStencilOnDepthPass", CallKind.ClassMember, m_classData, value); }
            }
            public bool WriteStencilOnDepthFail
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WriteStencilOnDepthFail", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WriteStencilOnDepthFail", CallKind.ClassMember, m_classData, value); }
            }
            public bool ReverseZBuffering
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ReverseZBuffering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReverseZBuffering", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableZBuffering
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableZBuffering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableZBuffering", CallKind.ClassMember, m_classData, value); }
            }
            public uint FeatheringMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FeatheringMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeatheringMode", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput FeatheringMinDist
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FeatheringMinDist", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FeatheringMaxDist
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FeatheringMaxDist", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FeatheringFilter
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FeatheringFilter", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FeatheringDepthMapFilter
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FeatheringDepthMapFilter", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput DepthBias
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "DepthBias", CallKind.ClassMember, m_classData); }
            }
            public uint SortMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SortMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortMethod", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunctionRenderer Parent
            {
                get { return Invoker.CallNative<CParticleFunctionRenderer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseToggle : CBaseModelEntity
        {
            public CBaseToggle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseToggle", "CBaseToggle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseToggle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseToggle", "CBaseToggle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseToggle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Toggle_state
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Toggle_state", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Toggle_state", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float Wait
            {
                get { return Invoker.CallNative<float>("SDKClass", "Wait", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Wait", CallKind.ClassMember, m_classData, value); }
            }
            public float Lip
            {
                get { return Invoker.CallNative<float>("SDKClass", "Lip", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lip", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlwaysFireBlockedOutputs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysFireBlockedOutputs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysFireBlockedOutputs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector MoveAng
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "MoveAng", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveAng", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public Vector2D FinalDest
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FinalDest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FinalDest", CallKind.ClassMember, m_classData, value); }
            }
            public Vector FinalAngle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "FinalAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FinalAngle", CallKind.ClassMember, m_classData, value); }
            }
            public int MovementType
            {
                get { return Invoker.CallNative<int>("SDKClass", "MovementType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MovementType", CallKind.ClassMember, m_classData, value); }
            }
            public string Master
            {
                get { return Invoker.CallNative<string>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Master", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseTrailRenderer : CBaseRendererSource2
        {
            public CBaseTrailRenderer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTrailRenderer", "CBaseTrailRenderer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTrailRenderer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTrailRenderer", "CBaseTrailRenderer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTrailRenderer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint OrientationType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OrientationType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationType", CallKind.ClassMember, m_classData, value); }
            }
            public int OrientationControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "OrientationControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public float MinSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinSize", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSize", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput StartFadeSize
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "StartFadeSize", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput EndFadeSize
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "EndFadeSize", CallKind.ClassMember, m_classData); }
            }
            public bool ClampV
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClampV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClampV", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseRendererSource2 Parent
            {
                get { return Invoker.CallNative<CBaseRendererSource2>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseTrigger : CBaseToggle
        {
            public CBaseTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTrigger", "CBaseTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTrigger", "CBaseTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnStartTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartTouch", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartTouchAll
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartTouchAll", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEndTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEndTouch", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEndTouchAll
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEndTouchAll", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnTouching
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTouching", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnTouchingEachEntity
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTouchingEachEntity", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNotTouching
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNotTouching", CallKind.ClassMember, m_classData); }
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Filter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseAsyncQueries
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAsyncQueries", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAsyncQueries", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBaseTriggerAPI : ClassData
        {
            public CBaseTriggerAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTriggerAPI", "CBaseTriggerAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTriggerAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBaseTriggerAPI", "CBaseTriggerAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBaseTriggerAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBeam : CBaseModelEntity
        {
            public CBeam(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBeam", "CBeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBeam(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBeam", "CBeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBeam()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FrameRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameRate", CallKind.ClassMember, m_classData, value); }
            }
            public float HDRColorScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData, value); }
            }
            public float FireTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireTime", CallKind.ClassMember, m_classData, value); }
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public byte NumBeamEnts
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NumBeamEnts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBeamEnts", CallKind.ClassMember, m_classData, value); }
            }
            public uint BeamType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BeamType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeamType", CallKind.ClassMember, m_classData, value); }
            }
            public uint BeamFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BeamFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeamFlags", CallKind.ClassMember, m_classData, value); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float EndWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeLength", CallKind.ClassMember, m_classData, value); }
            }
            public float HaloScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HaloScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HaloScale", CallKind.ClassMember, m_classData, value); }
            }
            public float Amplitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Amplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Amplitude", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFrame", CallKind.ClassMember, m_classData, value); }
            }
            public float Speed
            {
                get { return Invoker.CallNative<float>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Speed", CallKind.ClassMember, m_classData, value); }
            }
            public float Frame
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frame", CallKind.ClassMember, m_classData, value); }
            }
            public uint ClipStyle
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ClipStyle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClipStyle", CallKind.ClassMember, m_classData, value); }
            }
            public bool TurnedOff
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TurnedOff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnedOff", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EndPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EndPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndPos", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity EndEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EndEntity", CallKind.ClassMember, m_classData); }
            }
            public int DissolveType
            {
                get { return Invoker.CallNative<int>("SDKClass", "DissolveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DissolveType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBinaryUpdateNode : CAnimUpdateNodeBase
        {
            public CBinaryUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBinaryUpdateNode", "CBinaryUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBinaryUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBinaryUpdateNode", "CBinaryUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBinaryUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint TimingBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TimingBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimingBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public float TimingBlend
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimingBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimingBlend", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBindPoseUpdateNode : CLeafUpdateNode
        {
            public CBindPoseUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBindPoseUpdateNode", "CBindPoseUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBindPoseUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBindPoseUpdateNode", "CBindPoseUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBindPoseUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBlend2DUpdateNode : CAnimUpdateNodeBase
        {
            public CBlend2DUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlend2DUpdateNode", "CBlend2DUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlend2DUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlend2DUpdateNode", "CBlend2DUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlend2DUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParamSpanUpdater ParamSpans
            {
                get { return Invoker.CallNative<CParamSpanUpdater>("SDKClass", "ParamSpans", CallKind.ClassMember, m_classData); }
            }
            public int[] NodeItemIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "NodeItemIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeItemIndices", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint BlendSourceX
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendSourceX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendSourceX", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamX
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamX", CallKind.ClassMember, m_classData); }
            }
            public uint BlendSourceY
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendSourceY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendSourceY", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamY
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamY", CallKind.ClassMember, m_classData); }
            }
            public uint BlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockBlendOnReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimEventsAndTagsOnMostWeightedOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimEventsAndTagsOnMostWeightedOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimEventsAndTagsOnMostWeightedOnly", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBlendCurve : ClassData
        {
            public CBlendCurve(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlendCurve", "CBlendCurve", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlendCurve(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlendCurve", "CBlendCurve", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlendCurve()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBlendUpdateNode : CAnimUpdateNodeBase
        {
            public CBlendUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlendUpdateNode", "CBlendUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlendUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlendUpdateNode", "CBlendUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlendUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte[] SortedOrder
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "SortedOrder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortedOrder", CallKind.ClassMember, m_classData, value); }
            }
            public float[] TargetValues
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "TargetValues", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetValues", CallKind.ClassMember, m_classData, value); }
            }
            public uint BlendValueSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData, value); }
            }
            public uint LinearRootMotionBlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LinearRootMotionBlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearRootMotionBlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint BlendKeyType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendKeyType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendKeyType", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockBlendOnReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool SyncCycles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SyncCycles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SyncCycles", CallKind.ClassMember, m_classData, value); }
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAngle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAngle", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBlockSelectionMetricEvaluator : CMotionMetricEvaluator
        {
            public CBlockSelectionMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlockSelectionMetricEvaluator", "CBlockSelectionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlockSelectionMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlockSelectionMetricEvaluator", "CBlockSelectionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlockSelectionMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBlood : CPointEntity
        {
            public CBlood(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlood", "CBlood", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlood(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBlood", "CBlood", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBlood()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector SprayAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "SprayAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SprayAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SprayDir
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SprayDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SprayDir", CallKind.ClassMember, m_classData, value); }
            }
            public float Amount
            {
                get { return Invoker.CallNative<float>("SDKClass", "Amount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Amount", CallKind.ClassMember, m_classData, value); }
            }
            public uint Color
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyComponent : CEntityComponent
        {
            public CBodyComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponent", "CBodyComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponent", "CBodyComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] SceneNode
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SceneNode", CallKind.ClassMember, m_classData); }
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyComponentBaseAnimGraph : CBodyComponentSkeletonInstance
        {
            public CBodyComponentBaseAnimGraph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentBaseAnimGraph", "CBodyComponentBaseAnimGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentBaseAnimGraph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentBaseAnimGraph", "CBodyComponentBaseAnimGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentBaseAnimGraph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseAnimGraphController AnimationController
            {
                get { return Invoker.CallNative<CBaseAnimGraphController>("SDKClass", "AnimationController", CallKind.ClassMember, m_classData); }
            }
            public CBodyComponentSkeletonInstance Parent
            {
                get { return Invoker.CallNative<CBodyComponentSkeletonInstance>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyComponentBaseModelEntity : CBodyComponentSkeletonInstance
        {
            public CBodyComponentBaseModelEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentBaseModelEntity", "CBodyComponentBaseModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentBaseModelEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentBaseModelEntity", "CBodyComponentBaseModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentBaseModelEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBodyComponentSkeletonInstance Parent
            {
                get { return Invoker.CallNative<CBodyComponentSkeletonInstance>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyComponentPoint : CBodyComponent
        {
            public CBodyComponentPoint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentPoint", "CBodyComponentPoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentPoint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentPoint", "CBodyComponentPoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentPoint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CGameSceneNode SceneNode
            {
                get { return Invoker.CallNative<CGameSceneNode>("SDKClass", "SceneNode", CallKind.ClassMember, m_classData); }
            }
            public CBodyComponent Parent
            {
                get { return Invoker.CallNative<CBodyComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyComponentSkeletonInstance : CBodyComponent
        {
            public CBodyComponentSkeletonInstance(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentSkeletonInstance", "CBodyComponentSkeletonInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentSkeletonInstance(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyComponentSkeletonInstance", "CBodyComponentSkeletonInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyComponentSkeletonInstance()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSkeletonInstance SkeletonInstance
            {
                get { return Invoker.CallNative<CSkeletonInstance>("SDKClass", "SkeletonInstance", CallKind.ClassMember, m_classData); }
            }
            public CBodyComponent Parent
            {
                get { return Invoker.CallNative<CBodyComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyGroupAnimTag : CAnimTagBase
        {
            public CBodyGroupAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyGroupAnimTag", "CBodyGroupAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyGroupAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyGroupAnimTag", "CBodyGroupAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyGroupAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBodyGroupSetting : ClassData
        {
            public CBodyGroupSetting(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyGroupSetting", "CBodyGroupSetting", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyGroupSetting(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBodyGroupSetting", "CBodyGroupSetting", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBodyGroupSetting()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BodyGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BodyGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public int BodyGroupOption
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyGroupOption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupOption", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CBombTarget : CBaseTrigger
        {
            public CBombTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBombTarget", "CBombTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBombTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBombTarget", "CBombTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBombTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnBombExplode
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombExplode", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBombPlanted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombPlanted", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBombDefused
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombDefused", CallKind.ClassMember, m_classData); }
            }
            public bool IsBombSiteB
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBombSiteB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBombSiteB", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsHeistBombTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHeistBombTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHeistBombTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombPlantedHere
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombPlantedHere", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombPlantedHere", CallKind.ClassMember, m_classData, value); }
            }
            public string MountTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "MountTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MountTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity InstructorHint
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "InstructorHint", CallKind.ClassMember, m_classData); }
            }
            public int BombSiteDesignation
            {
                get { return Invoker.CallNative<int>("SDKClass", "BombSiteDesignation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombSiteDesignation", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneConstraintBase : ClassData
        {
            public CBoneConstraintBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintBase", "CBoneConstraintBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintBase", "CBoneConstraintBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBoneConstraintDotToMorph : CBoneConstraintBase
        {
            public CBoneConstraintDotToMorph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintDotToMorph", "CBoneConstraintDotToMorph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintDotToMorph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintDotToMorph", "CBoneConstraintDotToMorph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintDotToMorph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetBoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetBoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBoneName", CallKind.ClassMember, m_classData, value); }
            }
            public string MorphChannelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MorphChannelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphChannelName", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Remap
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Remap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Remap", CallKind.ClassMember, m_classData, value); }
            }
            public CBoneConstraintBase Parent
            {
                get { return Invoker.CallNative<CBoneConstraintBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneConstraintPoseSpaceBone : CBaseConstraint
        {
            public CBoneConstraintPoseSpaceBone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintPoseSpaceBone", "CBoneConstraintPoseSpaceBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintPoseSpaceBone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintPoseSpaceBone", "CBoneConstraintPoseSpaceBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintPoseSpaceBone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneConstraintPoseSpaceMorph : CBoneConstraintBase
        {
            public CBoneConstraintPoseSpaceMorph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintPoseSpaceMorph", "CBoneConstraintPoseSpaceMorph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintPoseSpaceMorph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintPoseSpaceMorph", "CBoneConstraintPoseSpaceMorph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintPoseSpaceMorph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public string[] OutputMorph
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "OutputMorph", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputMorph", CallKind.ClassMember, m_classData, value); }
            }
            public bool Clamp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Clamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Clamp", CallKind.ClassMember, m_classData, value); }
            }
            public CBoneConstraintBase Parent
            {
                get { return Invoker.CallNative<CBoneConstraintBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneConstraintRbf : CBoneConstraintBase
        {
            public CBoneConstraintRbf(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintRbf", "CBoneConstraintRbf", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintRbf(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneConstraintRbf", "CBoneConstraintRbf", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneConstraintRbf()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBoneConstraintBase Parent
            {
                get { return Invoker.CallNative<CBoneConstraintBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneMaskUpdateNode : CBinaryUpdateNode
        {
            public CBoneMaskUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneMaskUpdateNode", "CBoneMaskUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneMaskUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneMaskUpdateNode", "CBoneMaskUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneMaskUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int WeightListIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float RootMotionBlend
            {
                get { return Invoker.CallNative<float>("SDKClass", "RootMotionBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootMotionBlend", CallKind.ClassMember, m_classData, value); }
            }
            public uint BlendSpace
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendSpace", CallKind.ClassMember, m_classData, value); }
            }
            public uint FootMotionTiming
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseBlendScale
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseBlendScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseBlendScale", CallKind.ClassMember, m_classData, value); }
            }
            public uint BlendValueSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle BlendParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "BlendParameter", CallKind.ClassMember, m_classData); }
            }
            public CBinaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CBinaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBonePositionMetricEvaluator : CMotionMetricEvaluator
        {
            public CBonePositionMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBonePositionMetricEvaluator", "CBonePositionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBonePositionMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBonePositionMetricEvaluator", "CBonePositionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBonePositionMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoneVelocityMetricEvaluator : CMotionMetricEvaluator
        {
            public CBoneVelocityMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneVelocityMetricEvaluator", "CBoneVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneVelocityMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoneVelocityMetricEvaluator", "CBoneVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoneVelocityMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBoolAnimParameter : CConcreteAnimParameter
        {
            public CBoolAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoolAnimParameter", "CBoolAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoolAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBoolAnimParameter", "CBoolAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBoolAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool DefaultValue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData, value); }
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBot : ClassData
        {
            public CBot(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBot", "CBot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBot(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBot", "CBot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBot()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Controller
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Controller", CallKind.ClassMember, m_classData); }
            }
            public int[] Player
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Player", CallKind.ClassMember, m_classData); }
            }
            public bool HasSpawned
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasSpawned", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasSpawned", CallKind.ClassMember, m_classData, value); }
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRunning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRunning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRunning", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsCrouching
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsCrouching", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsCrouching", CallKind.ClassMember, m_classData, value); }
            }
            public float ForwardSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForwardSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float LeftSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "LeftSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LeftSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float VerticalSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "VerticalSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public ulong ButtonFlags
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ButtonFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ButtonFlags", CallKind.ClassMember, m_classData, value); }
            }
            public float JumpTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "JumpTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ViewForward
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ViewForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewForward", CallKind.ClassMember, m_classData, value); }
            }
            public int PostureStackIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "PostureStackIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostureStackIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CBreakable : CBaseModelEntity
        {
            public CBreakable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakable", "CBreakable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakable", "CBreakable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPropDataComponent CPropDataComponent
            {
                get { return Invoker.CallNative<CPropDataComponent>("SDKClass", "CPropDataComponent", CallKind.ClassMember, m_classData); }
            }
            public uint Material
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Material", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Material", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Breaker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Breaker", CallKind.ClassMember, m_classData); }
            }
            public uint Explosion
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Explosion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Explosion", CallKind.ClassMember, m_classData, value); }
            }
            public string SpawnObject
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpawnObject", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnObject", CallKind.ClassMember, m_classData, value); }
            }
            public float PressureDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "PressureDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PressureDelay", CallKind.ClassMember, m_classData, value); }
            }
            public int MinHealthDmg
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinHealthDmg", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHealthDmg", CallKind.ClassMember, m_classData, value); }
            }
            public string PropData
            {
                get { return Invoker.CallNative<string>("SDKClass", "PropData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PropData", CallKind.ClassMember, m_classData, value); }
            }
            public float ImpactEnergyScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData, value); }
            }
            public uint OverrideBlockLOS
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OverrideBlockLOS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideBlockLOS", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBreak
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBreak", CallKind.ClassMember, m_classData); }
            }
            public uint PerformanceMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerformanceMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerformanceMode", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerPawn PhysicsAttacker
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "PhysicsAttacker", CallKind.ClassMember, m_classData); }
            }
            public float LastPhysicsInfluenceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBreakableProp : CBaseProp
        {
            public CBreakableProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakableProp", "CBreakableProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakableProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakableProp", "CBreakableProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakableProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPropDataComponent CPropDataComponent
            {
                get { return Invoker.CallNative<CPropDataComponent>("SDKClass", "CPropDataComponent", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartDeath
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartDeath", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBreak
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBreak", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnTakeDamage
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTakeDamage", CallKind.ClassMember, m_classData); }
            }
            public float ImpactEnergyScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImpactEnergyScale", CallKind.ClassMember, m_classData, value); }
            }
            public int MinHealthDmg
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinHealthDmg", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHealthDmg", CallKind.ClassMember, m_classData, value); }
            }
            public Vector PreferredCarryAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PreferredCarryAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreferredCarryAngles", CallKind.ClassMember, m_classData, value); }
            }
            public float PressureDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "PressureDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PressureDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float DefBurstScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefBurstScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefBurstScale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DefBurstOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DefBurstOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefBurstOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Breaker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Breaker", CallKind.ClassMember, m_classData); }
            }
            public uint PerformanceMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerformanceMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerformanceMode", CallKind.ClassMember, m_classData, value); }
            }
            public float PreventDamageBeforeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreventDamageBeforeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventDamageBeforeTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint BreakableContentsType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BreakableContentsType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakableContentsType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrBreakableContentsPropGroupOverride
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrBreakableContentsPropGroupOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrBreakableContentsPropGroupOverride", CallKind.ClassMember, m_classData, value); }
            }
            public string StrBreakableContentsParticleOverride
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrBreakableContentsParticleOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrBreakableContentsParticleOverride", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasBreakPiecesOrCommands
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBreakPiecesOrCommands", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBreakPiecesOrCommands", CallKind.ClassMember, m_classData, value); }
            }
            public float ExplodeDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExplodeDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeDamage", CallKind.ClassMember, m_classData, value); }
            }
            public float ExplodeRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExplodeRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float ExplosionDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExplosionDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionDelay", CallKind.ClassMember, m_classData, value); }
            }
            public string ExplosionBuildupSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExplosionBuildupSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionBuildupSound", CallKind.ClassMember, m_classData, value); }
            }
            public string ExplosionCustomEffect
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExplosionCustomEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionCustomEffect", CallKind.ClassMember, m_classData, value); }
            }
            public string ExplosionCustomSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExplosionCustomSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionCustomSound", CallKind.ClassMember, m_classData, value); }
            }
            public string ExplosionModifier
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExplosionModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionModifier", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerPawn PhysicsAttacker
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "PhysicsAttacker", CallKind.ClassMember, m_classData); }
            }
            public float LastPhysicsInfluenceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultFadeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultFadeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultFadeScale", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity LastAttacker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "LastAttacker", CallKind.ClassMember, m_classData); }
            }
            public string PuntSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "PuntSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PuntSound", CallKind.ClassMember, m_classData, value); }
            }
            public bool UsePuntSound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UsePuntSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UsePuntSound", CallKind.ClassMember, m_classData, value); }
            }
            public bool OriginalBlockLOS
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OriginalBlockLOS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalBlockLOS", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseProp Parent
            {
                get { return Invoker.CallNative<CBaseProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBreakableStageHelper : ClassData
        {
            public CBreakableStageHelper(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakableStageHelper", "CBreakableStageHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakableStageHelper(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBreakableStageHelper", "CBreakableStageHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBreakableStageHelper()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int CurrentStage
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentStage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentStage", CallKind.ClassMember, m_classData, value); }
            }
            public int StageCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "StageCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StageCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CBtActionAim : CBtNode
        {
            public CBtActionAim(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionAim", "CBtActionAim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionAim(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionAim", "CBtActionAim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionAim()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SensorInputKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "SensorInputKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SensorInputKey", CallKind.ClassMember, m_classData, value); }
            }
            public string AimReadyKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "AimReadyKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimReadyKey", CallKind.ClassMember, m_classData, value); }
            }
            public float ZoomCooldownTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "ZoomCooldownTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZoomCooldownTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public bool DoneAiming
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DoneAiming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DoneAiming", CallKind.ClassMember, m_classData, value); }
            }
            public float LerpStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LerpStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextLookTargetLerpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextLookTargetLerpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextLookTargetLerpTime", CallKind.ClassMember, m_classData, value); }
            }
            public float PenaltyReductionRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "PenaltyReductionRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PenaltyReductionRatio", CallKind.ClassMember, m_classData, value); }
            }
            public Vector NextLookTarget
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "NextLookTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextLookTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer AimTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "AimTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer SniperHoldTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SniperHoldTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer FocusIntervalTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "FocusIntervalTimer", CallKind.ClassMember, m_classData); }
            }
            public bool Acquired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Acquired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Acquired", CallKind.ClassMember, m_classData, value); }
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtActionCombatPositioning : CBtNode
        {
            public CBtActionCombatPositioning(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionCombatPositioning", "CBtActionCombatPositioning", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionCombatPositioning(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionCombatPositioning", "CBtActionCombatPositioning", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionCombatPositioning()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SensorInputKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "SensorInputKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SensorInputKey", CallKind.ClassMember, m_classData, value); }
            }
            public string IsAttackingKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "IsAttackingKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAttackingKey", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer ActionTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ActionTimer", CallKind.ClassMember, m_classData); }
            }
            public bool Crouching
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Crouching", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Crouching", CallKind.ClassMember, m_classData, value); }
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtActionMoveTo : CBtNode
        {
            public CBtActionMoveTo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionMoveTo", "CBtActionMoveTo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionMoveTo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionMoveTo", "CBtActionMoveTo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionMoveTo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string DestinationInputKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "DestinationInputKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestinationInputKey", CallKind.ClassMember, m_classData, value); }
            }
            public string HidingSpotInputKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "HidingSpotInputKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HidingSpotInputKey", CallKind.ClassMember, m_classData, value); }
            }
            public string ThreatInputKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "ThreatInputKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThreatInputKey", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Destination
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Destination", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Destination", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoLookAdjust
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoLookAdjust", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoLookAdjust", CallKind.ClassMember, m_classData, value); }
            }
            public bool ComputePath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ComputePath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputePath", CallKind.ClassMember, m_classData, value); }
            }
            public float DamagingAreasPenaltyCost
            {
                get { return Invoker.CallNative<float>("SDKClass", "DamagingAreasPenaltyCost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamagingAreasPenaltyCost", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer CheckApproximateCornersTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "CheckApproximateCornersTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer CheckHighPriorityItem
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "CheckHighPriorityItem", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer RepathTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RepathTimer", CallKind.ClassMember, m_classData); }
            }
            public float ArrivalEpsilon
            {
                get { return Invoker.CallNative<float>("SDKClass", "ArrivalEpsilon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ArrivalEpsilon", CallKind.ClassMember, m_classData, value); }
            }
            public float HidingSpotCheckDistanceThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "HidingSpotCheckDistanceThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HidingSpotCheckDistanceThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float NearestAreaDistanceThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearestAreaDistanceThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearestAreaDistanceThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtActionParachutePositioning : CBtNode
        {
            public CBtActionParachutePositioning(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionParachutePositioning", "CBtActionParachutePositioning", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionParachutePositioning(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtActionParachutePositioning", "CBtActionParachutePositioning", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtActionParachutePositioning()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CountdownTimer ActionTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ActionTimer", CallKind.ClassMember, m_classData); }
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtNode : ClassData
        {
            public CBtNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNode", "CBtNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNode", "CBtNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CBtNodeComposite : CBtNode
        {
            public CBtNodeComposite(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeComposite", "CBtNodeComposite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeComposite(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeComposite", "CBtNodeComposite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeComposite()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtNodeCondition : CBtNodeDecorator
        {
            public CBtNodeCondition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeCondition", "CBtNodeCondition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeCondition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeCondition", "CBtNodeCondition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeCondition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Negated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Negated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Negated", CallKind.ClassMember, m_classData, value); }
            }
            public CBtNodeDecorator Parent
            {
                get { return Invoker.CallNative<CBtNodeDecorator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtNodeConditionInactive : CBtNodeCondition
        {
            public CBtNodeConditionInactive(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeConditionInactive", "CBtNodeConditionInactive", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeConditionInactive(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeConditionInactive", "CBtNodeConditionInactive", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeConditionInactive()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RoundStartThresholdSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "RoundStartThresholdSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundStartThresholdSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public float SensorInactivityThresholdSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "SensorInactivityThresholdSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SensorInactivityThresholdSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer SensorInactivityTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SensorInactivityTimer", CallKind.ClassMember, m_classData); }
            }
            public CBtNodeCondition Parent
            {
                get { return Invoker.CallNative<CBtNodeCondition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBtNodeDecorator : CBtNode
        {
            public CBtNodeDecorator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeDecorator", "CBtNodeDecorator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeDecorator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBtNodeDecorator", "CBtNodeDecorator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBtNodeDecorator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBtNode Parent
            {
                get { return Invoker.CallNative<CBtNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CBuoyancyHelper : ClassData
        {
            public CBuoyancyHelper(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBuoyancyHelper", "CBuoyancyHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBuoyancyHelper(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBuoyancyHelper", "CBuoyancyHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBuoyancyHelper()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FluidType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FluidType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FluidType", CallKind.ClassMember, m_classData, value); }
            }
            public float FluidDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FluidDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FluidDensity", CallKind.ClassMember, m_classData, value); }
            }
            public float NeutrallyBuoyantGravity
            {
                get { return Invoker.CallNative<float>("SDKClass", "NeutrallyBuoyantGravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeutrallyBuoyantGravity", CallKind.ClassMember, m_classData, value); }
            }
            public float NeutrallyBuoyantLinearDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "NeutrallyBuoyantLinearDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeutrallyBuoyantLinearDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float NeutrallyBuoyantAngularDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "NeutrallyBuoyantAngularDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeutrallyBuoyantAngularDamping", CallKind.ClassMember, m_classData, value); }
            }
            public bool NeutrallyBuoyant
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NeutrallyBuoyant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeutrallyBuoyant", CallKind.ClassMember, m_classData, value); }
            }
            public float[] FractionOfWheelSubmergedForWheelFriction
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "FractionOfWheelSubmergedForWheelFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FractionOfWheelSubmergedForWheelFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float[] WheelFrictionScales
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "WheelFrictionScales", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WheelFrictionScales", CallKind.ClassMember, m_classData, value); }
            }
            public float[] FractionOfWheelSubmergedForWheelDrag
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "FractionOfWheelSubmergedForWheelDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FractionOfWheelSubmergedForWheelDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float[] WheelDrag
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CBuyZone : CBaseTrigger
        {
            public CBuyZone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBuyZone", "CBuyZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBuyZone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CBuyZone", "CBuyZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CBuyZone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int LegacyTeamNum
            {
                get { return Invoker.CallNative<int>("SDKClass", "LegacyTeamNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyTeamNum", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CC4 : CCSWeaponBase
        {
            public CC4(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CC4", "CC4", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CC4(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CC4", "CC4", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CC4()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LastValidPlayerHeldPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastValidPlayerHeldPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastValidPlayerHeldPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastValidDroppedPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastValidDroppedPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastValidDroppedPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool DoValidDroppedPositionCheck
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DoValidDroppedPositionCheck", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DoValidDroppedPositionCheck", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartedArming
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartedArming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartedArming", CallKind.ClassMember, m_classData, value); }
            }
            public float ArmedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ArmedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ArmedTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombPlacedAnimation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombPlacedAnimation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombPlacedAnimation", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlantingViaUse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlantingViaUse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlantingViaUse", CallKind.ClassMember, m_classData, value); }
            }
            public EntitySpottedState_t EntitySpottedState
            {
                get { return Invoker.CallNative<EntitySpottedState_t>("SDKClass", "EntitySpottedState", CallKind.ClassMember, m_classData); }
            }
            public int SpotRules
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotRules", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRules", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] PlayedArmingBeeps
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "PlayedArmingBeeps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayedArmingBeeps", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombPlanted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombPlanted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombPlanted", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCachedPose : ClassData
        {
            public CCachedPose(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCachedPose", "CCachedPose", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCachedPose(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCachedPose", "CCachedPose", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCachedPose()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] MorphWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "MorphWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphWeights", CallKind.ClassMember, m_classData, value); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CChangeLevel : CBaseTrigger
        {
            public CChangeLevel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChangeLevel", "CChangeLevel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChangeLevel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChangeLevel", "CChangeLevel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChangeLevel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapName", CallKind.ClassMember, m_classData, value); }
            }
            public string LandmarkName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LandmarkName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LandmarkName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnChangeLevel
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnChangeLevel", CallKind.ClassMember, m_classData); }
            }
            public bool Touched
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Touched", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Touched", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoTouch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoTouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoTouch", CallKind.ClassMember, m_classData, value); }
            }
            public bool NewChapter
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NewChapter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewChapter", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnChangeLevelFired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnChangeLevelFired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnChangeLevelFired", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CChicken : CDynamicProp
        {
            public CChicken(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChicken", "CChicken", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChicken(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChicken", "CChicken", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChicken()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAttributeContainer AttributeManager
            {
                get { return Invoker.CallNative<CAttributeContainer>("SDKClass", "AttributeManager", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer UpdateTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "UpdateTimer", CallKind.ClassMember, m_classData); }
            }
            public Vector2D StuckAnchor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StuckAnchor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StuckAnchor", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer StuckTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "StuckTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer CollisionStuckTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "CollisionStuckTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsOnGround
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOnGround", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOnGround", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D FallVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FallVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public uint DesiredActivity
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DesiredActivity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredActivity", CallKind.ClassMember, m_classData, value); }
            }
            public uint CurrentActivity
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CurrentActivity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentActivity", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer ActivityTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ActivityTimer", CallKind.ClassMember, m_classData); }
            }
            public float TurnRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnRate", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity FleeFrom
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "FleeFrom", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer MoveRateThrottleTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "MoveRateThrottleTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer StartleTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "StartleTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer VocalizeTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "VocalizeTimer", CallKind.ClassMember, m_classData); }
            }
            public float WhenZombified
            {
                get { return Invoker.CallNative<float>("SDKClass", "WhenZombified", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhenZombified", CallKind.ClassMember, m_classData, value); }
            }
            public bool JumpedThisFrame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JumpedThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpedThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn Leader
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Leader", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer ReuseTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ReuseTimer", CallKind.ClassMember, m_classData); }
            }
            public bool HasBeenUsed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenUsed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenUsed", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer JumpTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "JumpTimer", CallKind.ClassMember, m_classData); }
            }
            public float LastJumpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastJumpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastJumpTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool InJump
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InJump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InJump", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer RepathTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RepathTimer", CallKind.ClassMember, m_classData); }
            }
            public Vector2D PathGoal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PathGoal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathGoal", CallKind.ClassMember, m_classData, value); }
            }
            public float ActiveFollowStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ActiveFollowStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActiveFollowStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer FollowMinuteTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "FollowMinuteTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer BlockDirectionTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "BlockDirectionTimer", CallKind.ClassMember, m_classData); }
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CChoiceUpdateNode : CAnimUpdateNodeBase
        {
            public CChoiceUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChoiceUpdateNode", "CChoiceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChoiceUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChoiceUpdateNode", "CChoiceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChoiceUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Weights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weights", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BlendTimes
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BlendTimes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTimes", CallKind.ClassMember, m_classData, value); }
            }
            public uint ChoiceMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ChoiceMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChoiceMethod", CallKind.ClassMember, m_classData, value); }
            }
            public uint ChoiceChangeMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ChoiceChangeMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChoiceChangeMethod", CallKind.ClassMember, m_classData, value); }
            }
            public uint BlendMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendMethod", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool CrossFade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CrossFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrossFade", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChosen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChosen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChosen", CallKind.ClassMember, m_classData, value); }
            }
            public bool DontResetSameSelection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DontResetSameSelection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontResetSameSelection", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CChoreoUpdateNode : CUnaryUpdateNode
        {
            public CChoreoUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChoreoUpdateNode", "CChoreoUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChoreoUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CChoreoUpdateNode", "CChoreoUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CChoreoUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCitadelSoundOpvarSetOBB : CBaseEntity
        {
            public CCitadelSoundOpvarSetOBB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCitadelSoundOpvarSetOBB", "CCitadelSoundOpvarSetOBB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCitadelSoundOpvarSetOBB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCitadelSoundOpvarSetOBB", "CCitadelSoundOpvarSetOBB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCitadelSoundOpvarSetOBB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StackName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackName", CallKind.ClassMember, m_classData, value); }
            }
            public string OperatorName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OperatorName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OperatorName", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceInnerMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceInnerMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInnerMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceInnerMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceInnerMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInnerMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceOuterMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceOuterMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public int AABBDirection
            {
                get { return Invoker.CallNative<int>("SDKClass", "AABBDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AABBDirection", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CClientAlphaProperty : IClientAlphaProperty
        {
            public CClientAlphaProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CClientAlphaProperty", "CClientAlphaProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CClientAlphaProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CClientAlphaProperty", "CClientAlphaProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CClientAlphaProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte RenderFX
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RenderFX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFX", CallKind.ClassMember, m_classData, value); }
            }
            public byte RenderMode
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RenderMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderMode", CallKind.ClassMember, m_classData, value); }
            }
            public byte Alpha
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Alpha", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Alpha", CallKind.ClassMember, m_classData, value); }
            }
            public ushort DesyncOffset
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "DesyncOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesyncOffset", CallKind.ClassMember, m_classData, value); }
            }
            public ushort DistFadeStart
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "DistFadeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistFadeStart", CallKind.ClassMember, m_classData, value); }
            }
            public ushort DistFadeEnd
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "DistFadeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistFadeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeScale", CallKind.ClassMember, m_classData, value); }
            }
            public float RenderFxStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderFxStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFxStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RenderFxDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderFxDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFxDuration", CallKind.ClassMember, m_classData, value); }
            }
            public IClientAlphaProperty Parent
            {
                get { return Invoker.CallNative<IClientAlphaProperty>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CClothSettingsAnimTag : CAnimTagBase
        {
            public CClothSettingsAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CClothSettingsAnimTag", "CClothSettingsAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CClothSettingsAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CClothSettingsAnimTag", "CClothSettingsAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CClothSettingsAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Stiffness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Stiffness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Stiffness", CallKind.ClassMember, m_classData, value); }
            }
            public float EaseIn
            {
                get { return Invoker.CallNative<float>("SDKClass", "EaseIn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EaseIn", CallKind.ClassMember, m_classData, value); }
            }
            public float EaseOut
            {
                get { return Invoker.CallNative<float>("SDKClass", "EaseOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EaseOut", CallKind.ClassMember, m_classData, value); }
            }
            public string VertexSet
            {
                get { return Invoker.CallNative<string>("SDKClass", "VertexSet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexSet", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCollisionProperty : ClassData
        {
            public CCollisionProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCollisionProperty", "CCollisionProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCollisionProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCollisionProperty", "CCollisionProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCollisionProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public VPhysicsCollisionAttribute_t CollisionAttribute
            {
                get { return Invoker.CallNative<VPhysicsCollisionAttribute_t>("SDKClass", "CollisionAttribute", CallKind.ClassMember, m_classData); }
            }
            public Vector2D Mins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Mins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Maxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Maxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxs", CallKind.ClassMember, m_classData, value); }
            }
            public byte SolidFlags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SolidFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidFlags", CallKind.ClassMember, m_classData, value); }
            }
            public byte SolidType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SolidType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidType", CallKind.ClassMember, m_classData, value); }
            }
            public byte TriggerBloat
            {
                get { return Invoker.CallNative<byte>("SDKClass", "TriggerBloat", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriggerBloat", CallKind.ClassMember, m_classData, value); }
            }
            public byte SurroundType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SurroundType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurroundType", CallKind.ClassMember, m_classData, value); }
            }
            public byte CollisionGroup
            {
                get { return Invoker.CallNative<byte>("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData, value); }
            }
            public byte EnablePhysics
            {
                get { return Invoker.CallNative<byte>("SDKClass", "EnablePhysics", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnablePhysics", CallKind.ClassMember, m_classData, value); }
            }
            public float BoundingRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "BoundingRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundingRadius", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpecifiedSurroundingMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpecifiedSurroundingMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecifiedSurroundingMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpecifiedSurroundingMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpecifiedSurroundingMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecifiedSurroundingMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SurroundingMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SurroundingMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurroundingMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SurroundingMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SurroundingMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurroundingMins", CallKind.ClassMember, m_classData, value); }
            }
            public float CapsuleRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "CapsuleRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CapsuleRadius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CColorCorrection : CBaseEntity
        {
            public CColorCorrection(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CColorCorrection", "CColorCorrection", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CColorCorrection(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CColorCorrection", "CColorCorrection", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CColorCorrection()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeInDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFadeInWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFadeInWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFadeInWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFadeOutWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFadeOutWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFadeOutWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeStartFadeIn
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeStartFadeIn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeStartFadeIn", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeStartFadeOut
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeStartFadeOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeStartFadeOut", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxWeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Master
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Master", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClientSide
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClientSide", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientSide", CallKind.ClassMember, m_classData, value); }
            }
            public bool Exclusive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Exclusive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Exclusive", CallKind.ClassMember, m_classData, value); }
            }
            public float MinFalloff
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinFalloff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinFalloff", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxFalloff
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxFalloff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFalloff", CallKind.ClassMember, m_classData, value); }
            }
            public float CurWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurWeight", CallKind.ClassMember, m_classData, value); }
            }
            public string NetlookupFilename
            {
                get { return Invoker.CallNative<string>("SDKClass", "NetlookupFilename", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetlookupFilename", CallKind.ClassMember, m_classData, value); }
            }
            public string LookupFilename
            {
                get { return Invoker.CallNative<string>("SDKClass", "LookupFilename", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookupFilename", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CColorCorrectionVolume : CBaseTrigger
        {
            public CColorCorrectionVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CColorCorrectionVolume", "CColorCorrectionVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CColorCorrectionVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CColorCorrectionVolume", "CColorCorrectionVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CColorCorrectionVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MaxWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public string LookupFilename
            {
                get { return Invoker.CallNative<string>("SDKClass", "LookupFilename", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookupFilename", CallKind.ClassMember, m_classData, value); }
            }
            public float LastEnterWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastEnterWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastEnterWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float LastEnterTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastEnterTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastEnterTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastExitWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastExitWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastExitWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float LastExitTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastExitTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastExitTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCommentaryAuto : CBaseEntity
        {
            public CCommentaryAuto(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentaryAuto", "CCommentaryAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentaryAuto(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentaryAuto", "CCommentaryAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentaryAuto()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnCommentaryNewGame
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCommentaryNewGame", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCommentaryMidGame
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCommentaryMidGame", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCommentaryMultiplayerSpawn
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCommentaryMultiplayerSpawn", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCommentarySystem : ClassData
        {
            public CCommentarySystem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentarySystem", "CCommentarySystem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentarySystem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentarySystem", "CCommentarySystem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentarySystem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool CommentaryConvarsChanging
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CommentaryConvarsChanging", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CommentaryConvarsChanging", CallKind.ClassMember, m_classData, value); }
            }
            public bool CommentaryEnabledMidGame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CommentaryEnabledMidGame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CommentaryEnabledMidGame", CallKind.ClassMember, m_classData, value); }
            }
            public float NextTeleportTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextTeleportTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextTeleportTime", CallKind.ClassMember, m_classData, value); }
            }
            public int TeleportStage
            {
                get { return Invoker.CallNative<int>("SDKClass", "TeleportStage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeleportStage", CallKind.ClassMember, m_classData, value); }
            }
            public bool CheatState
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CheatState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CheatState", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsFirstSpawnGroupToLoad
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsFirstSpawnGroupToLoad", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsFirstSpawnGroupToLoad", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CCommentaryViewPosition : CSprite
        {
            public CCommentaryViewPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentaryViewPosition", "CCommentaryViewPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentaryViewPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCommentaryViewPosition", "CCommentaryViewPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCommentaryViewPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSprite Parent
            {
                get { return Invoker.CallNative<CSprite>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCompositeMaterialEditorDoc : ClassData
        {
            public CCompositeMaterialEditorDoc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCompositeMaterialEditorDoc", "CCompositeMaterialEditorDoc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCompositeMaterialEditorDoc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCompositeMaterialEditorDoc", "CCompositeMaterialEditorDoc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCompositeMaterialEditorDoc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Version
            {
                get { return Invoker.CallNative<int>("SDKClass", "Version", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Version", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CConcreteAnimParameter : CAnimParameterBase
        {
            public CConcreteAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConcreteAnimParameter", "CConcreteAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConcreteAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConcreteAnimParameter", "CConcreteAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConcreteAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint PreviewButton
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PreviewButton", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviewButton", CallKind.ClassMember, m_classData, value); }
            }
            public uint NetworkSetting
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NetworkSetting", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkSetting", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseMostRecentValue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseMostRecentValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseMostRecentValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool GameWritable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GameWritable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameWritable", CallKind.ClassMember, m_classData, value); }
            }
            public bool GraphWritable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GraphWritable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GraphWritable", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParameterBase Parent
            {
                get { return Invoker.CallNative<CAnimParameterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CConstantForceController : ClassData
        {
            public CConstantForceController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstantForceController", "CConstantForceController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstantForceController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstantForceController", "CConstantForceController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstantForceController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Linear
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Linear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Linear", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Angular
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Angular", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angular", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearSave
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearSave", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearSave", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AngularSave
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AngularSave", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularSave", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CConstraintAnchor : CBaseAnimGraph
        {
            public CConstraintAnchor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintAnchor", "CConstraintAnchor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintAnchor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintAnchor", "CConstraintAnchor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintAnchor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MassScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassScale", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CConstraintSlave : ClassData
        {
            public CConstraintSlave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintSlave", "CConstraintSlave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintSlave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintSlave", "CConstraintSlave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintSlave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D BasePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BasePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BasePosition", CallKind.ClassMember, m_classData, value); }
            }
            public uint BoneHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneHash", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CConstraintTarget : ClassData
        {
            public CConstraintTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintTarget", "CConstraintTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CConstraintTarget", "CConstraintTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CConstraintTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public uint BoneHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneHash", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAttachment
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAttachment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAttachment", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CCopyRecipientFilter : ClassData
        {
            public CCopyRecipientFilter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCopyRecipientFilter", "CCopyRecipientFilter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCopyRecipientFilter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCopyRecipientFilter", "CCopyRecipientFilter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCopyRecipientFilter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Flags
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Recipients
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Recipients", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Recipients", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CCPPScriptComponentUpdater : CAnimComponentUpdater
        {
            public CCPPScriptComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCPPScriptComponentUpdater", "CCPPScriptComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCPPScriptComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCPPScriptComponentUpdater", "CCPPScriptComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCPPScriptComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCredits : CPointEntity
        {
            public CCredits(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCredits", "CCredits", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCredits(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCredits", "CCredits", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCredits()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnCreditsDone
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCreditsDone", CallKind.ClassMember, m_classData); }
            }
            public bool RolledOutroCredits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RolledOutroCredits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RolledOutroCredits", CallKind.ClassMember, m_classData, value); }
            }
            public float LogoLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "LogoLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LogoLength", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCS2ChickenGraphController : CAnimGraphControllerBase
        {
            public CCS2ChickenGraphController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2ChickenGraphController", "CCS2ChickenGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2ChickenGraphController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2ChickenGraphController", "CCS2ChickenGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2ChickenGraphController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool HasActionCompletedEvent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasActionCompletedEvent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasActionCompletedEvent", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitingForCompletedEvent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitingForCompletedEvent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitingForCompletedEvent", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimGraphControllerBase Parent
            {
                get { return Invoker.CallNative<CAnimGraphControllerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCS2UIPawnGraphController : CAnimGraphControllerBase
        {
            public CCS2UIPawnGraphController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2UIPawnGraphController", "CCS2UIPawnGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2UIPawnGraphController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2UIPawnGraphController", "CCS2UIPawnGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2UIPawnGraphController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimGraphControllerBase Parent
            {
                get { return Invoker.CallNative<CAnimGraphControllerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCS2WeaponGraphController : CAnimGraphControllerBase
        {
            public CCS2WeaponGraphController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2WeaponGraphController", "CCS2WeaponGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2WeaponGraphController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCS2WeaponGraphController", "CCS2WeaponGraphController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCS2WeaponGraphController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimGraphControllerBase Parent
            {
                get { return Invoker.CallNative<CAnimGraphControllerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSBot : CBot
        {
            public CCSBot(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSBot", "CCSBot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSBot(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSBot", "CCSBot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSBot()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D EyePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EyePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EyePosition", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public float CombatRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "CombatRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CombatRange", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRogue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRogue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRogue", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer RogueTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RogueTimer", CallKind.ClassMember, m_classData); }
            }
            public bool DiedLastRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DiedLastRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DiedLastRound", CallKind.ClassMember, m_classData, value); }
            }
            public float SafeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SafeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SafeTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasSafe
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasSafe", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasSafe", CallKind.ClassMember, m_classData, value); }
            }
            public bool BlindFire
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BlindFire", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlindFire", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer SurpriseTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SurpriseTimer", CallKind.ClassMember, m_classData); }
            }
            public bool AllowActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowActive", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsFollowing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsFollowing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsFollowing", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn Leader
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Leader", CallKind.ClassMember, m_classData); }
            }
            public float FollowTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "FollowTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float AllowAutoFollowTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AllowAutoFollowTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowAutoFollowTime", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer HurryTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "HurryTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer AlertTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "AlertTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer SneakTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SneakTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer PanicTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "PanicTimer", CallKind.ClassMember, m_classData); }
            }
            public float StateTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "StateTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StateTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAttacking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAttacking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAttacking", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsOpeningDoor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOpeningDoor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOpeningDoor", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity TaskEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TaskEntity", CallKind.ClassMember, m_classData); }
            }
            public Vector2D GoalPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GoalPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalPosition", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity GoalEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "GoalEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Avoid
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Avoid", CallKind.ClassMember, m_classData); }
            }
            public float AvoidTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "AvoidTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvoidTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsStopping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsStopping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsStopping", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasVisitedEnemySpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasVisitedEnemySpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasVisitedEnemySpawn", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer StillTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "StillTimer", CallKind.ClassMember, m_classData); }
            }
            public bool EyeAnglesUnderPathFinderControl
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EyeAnglesUnderPathFinderControl", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EyeAnglesUnderPathFinderControl", CallKind.ClassMember, m_classData, value); }
            }
            public int PathIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "PathIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float AreaEnteredTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "AreaEnteredTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AreaEnteredTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer RepathTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RepathTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer AvoidFriendTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "AvoidFriendTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsFriendInTheWay
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsFriendInTheWay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsFriendInTheWay", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer PoliteTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "PoliteTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsWaitingBehindFriend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsWaitingBehindFriend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsWaitingBehindFriend", CallKind.ClassMember, m_classData, value); }
            }
            public float PathLadderEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "PathLadderEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathLadderEnd", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer MustRunTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "MustRunTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer WaitTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "WaitTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer UpdateTravelDistanceTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "UpdateTravelDistanceTimer", CallKind.ClassMember, m_classData); }
            }
            public float[] PlayerTravelDistance
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PlayerTravelDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerTravelDistance", CallKind.ClassMember, m_classData, value); }
            }
            public byte TravelDistancePhase
            {
                get { return Invoker.CallNative<byte>("SDKClass", "TravelDistancePhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TravelDistancePhase", CallKind.ClassMember, m_classData, value); }
            }
            public byte HostageEscortCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "HostageEscortCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageEscortCount", CallKind.ClassMember, m_classData, value); }
            }
            public float HostageEscortCountTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "HostageEscortCountTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageEscortCountTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public int DesiredTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "DesiredTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredTeam", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasJoined
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasJoined", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasJoined", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsWaitingForHostage
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsWaitingForHostage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsWaitingForHostage", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer InhibitWaitingForHostageTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "InhibitWaitingForHostageTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer WaitForHostageTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "WaitForHostageTimer", CallKind.ClassMember, m_classData); }
            }
            public Vector2D NoisePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "NoisePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoisePosition", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseTravelDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseTravelDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseTravelDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public int[] NoiseSource
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "NoiseSource", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer NoiseBendTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "NoiseBendTimer", CallKind.ClassMember, m_classData); }
            }
            public Vector2D BentNoisePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BentNoisePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BentNoisePosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool BendNoisePositionValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BendNoisePositionValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BendNoisePositionValid", CallKind.ClassMember, m_classData, value); }
            }
            public float LookAroundStateTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookAroundStateTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAroundStateTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float LookAheadAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookAheadAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAheadAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float ForwardAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForwardAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float InhibitLookAroundTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "InhibitLookAroundTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InhibitLookAroundTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LookAtSpot
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LookAtSpot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpot", CallKind.ClassMember, m_classData, value); }
            }
            public float LookAtSpotDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookAtSpotDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpotDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float LookAtSpotTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookAtSpotTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpotTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float LookAtSpotAngleTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookAtSpotAngleTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpotAngleTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public bool LookAtSpotClearIfClose
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LookAtSpotClearIfClose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpotClearIfClose", CallKind.ClassMember, m_classData, value); }
            }
            public bool LookAtSpotAttack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LookAtSpotAttack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtSpotAttack", CallKind.ClassMember, m_classData, value); }
            }
            public string LookAtDesc
            {
                get { return Invoker.CallNative<string>("SDKClass", "LookAtDesc", CallKind.ClassMember, m_classData); }
            }
            public float PeripheralTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "PeripheralTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeripheralTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public byte ApproachPointCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ApproachPointCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApproachPointCount", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ApproachPointViewPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ApproachPointViewPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApproachPointViewPosition", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer ViewSteadyTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "ViewSteadyTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer TossGrenadeTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "TossGrenadeTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer IsAvoidingGrenade
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "IsAvoidingGrenade", CallKind.ClassMember, m_classData); }
            }
            public float SpotCheckTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpotCheckTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotCheckTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public int CheckedHidingSpotCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "CheckedHidingSpotCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CheckedHidingSpotCount", CallKind.ClassMember, m_classData, value); }
            }
            public float LookPitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookPitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookPitch", CallKind.ClassMember, m_classData, value); }
            }
            public float LookPitchVel
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookPitchVel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookPitchVel", CallKind.ClassMember, m_classData, value); }
            }
            public float LookYaw
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookYaw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookYaw", CallKind.ClassMember, m_classData, value); }
            }
            public float LookYawVel
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookYawVel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookYawVel", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TargetSpot
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TargetSpot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpot", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TargetSpotVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TargetSpotVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpotVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TargetSpotPredicted
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TargetSpotPredicted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpotPredicted", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AimError
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AimError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimError", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AimGoal
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AimGoal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimGoal", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetSpotTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetSpotTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpotTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AimFocus
            {
                get { return Invoker.CallNative<float>("SDKClass", "AimFocus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimFocus", CallKind.ClassMember, m_classData, value); }
            }
            public float AimFocusInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "AimFocusInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimFocusInterval", CallKind.ClassMember, m_classData, value); }
            }
            public float AimFocusNextUpdate
            {
                get { return Invoker.CallNative<float>("SDKClass", "AimFocusNextUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimFocusNextUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer IgnoreEnemiesTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "IgnoreEnemiesTimer", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawn Enemy
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Enemy", CallKind.ClassMember, m_classData); }
            }
            public bool IsEnemyVisible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsEnemyVisible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsEnemyVisible", CallKind.ClassMember, m_classData, value); }
            }
            public byte VisibleEnemyParts
            {
                get { return Invoker.CallNative<byte>("SDKClass", "VisibleEnemyParts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisibleEnemyParts", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastEnemyPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastEnemyPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastEnemyPosition", CallKind.ClassMember, m_classData, value); }
            }
            public float LastSawEnemyTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastSawEnemyTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastSawEnemyTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float FirstSawEnemyTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "FirstSawEnemyTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstSawEnemyTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentEnemyAcquireTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentEnemyAcquireTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentEnemyAcquireTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float EnemyDeathTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "EnemyDeathTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyDeathTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float FriendDeathTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "FriendDeathTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FriendDeathTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLastEnemyDead
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLastEnemyDead", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLastEnemyDead", CallKind.ClassMember, m_classData, value); }
            }
            public int NearbyEnemyCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "NearbyEnemyCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearbyEnemyCount", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn Bomber
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Bomber", CallKind.ClassMember, m_classData); }
            }
            public int NearbyFriendCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "NearbyFriendCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearbyFriendCount", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn ClosestVisibleFriend
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "ClosestVisibleFriend", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawn ClosestVisibleHumanFriend
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "ClosestVisibleHumanFriend", CallKind.ClassMember, m_classData); }
            }
            public IntervalTimer AttentionInterval
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "AttentionInterval", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawn Attacker
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Attacker", CallKind.ClassMember, m_classData); }
            }
            public float AttackedTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackedTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackedTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer BurnedByFlamesTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "BurnedByFlamesTimer", CallKind.ClassMember, m_classData); }
            }
            public int LastVictimID
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastVictimID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastVictimID", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAimingAtEnemy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAimingAtEnemy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAimingAtEnemy", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRapidFiring
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRapidFiring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRapidFiring", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer EquipTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "EquipTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer ZoomTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ZoomTimer", CallKind.ClassMember, m_classData); }
            }
            public float FireWeaponTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireWeaponTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireWeaponTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer LookForWeaponsOnGroundTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "LookForWeaponsOnGroundTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsSleeping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsSleeping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsSleeping", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsEnemySniperVisible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsEnemySniperVisible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsEnemySniperVisible", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer SawEnemySniperTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SawEnemySniperTimer", CallKind.ClassMember, m_classData); }
            }
            public byte EnemyQueueIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "EnemyQueueIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyQueueIndex", CallKind.ClassMember, m_classData, value); }
            }
            public byte EnemyQueueCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "EnemyQueueCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyQueueCount", CallKind.ClassMember, m_classData, value); }
            }
            public byte EnemyQueueAttendIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "EnemyQueueAttendIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyQueueAttendIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsStuck
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsStuck", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsStuck", CallKind.ClassMember, m_classData, value); }
            }
            public float StuckTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "StuckTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StuckTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StuckSpot
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StuckSpot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StuckSpot", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer WiggleTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "WiggleTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer StuckJumpTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "StuckJumpTimer", CallKind.ClassMember, m_classData); }
            }
            public float NextCleanupCheckTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextCleanupCheckTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextCleanupCheckTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float[] AvgVel
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "AvgVel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvgVel", CallKind.ClassMember, m_classData, value); }
            }
            public int AvgVelIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "AvgVelIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvgVelIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int AvgVelCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "AvgVelCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvgVelCount", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float LastRadioRecievedTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastRadioRecievedTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastRadioRecievedTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float LastRadioSentTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastRadioSentTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastRadioSentTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn RadioSubject
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "RadioSubject", CallKind.ClassMember, m_classData); }
            }
            public Vector2D RadioPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RadioPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadioPosition", CallKind.ClassMember, m_classData, value); }
            }
            public float VoiceEndTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "VoiceEndTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoiceEndTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public int LastValidReactionQueueFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastValidReactionQueueFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastValidReactionQueueFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CBot Parent
            {
                get { return Invoker.CallNative<CBot>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSClientPointScriptEntity : CCSPointScriptEntity
        {
            public CCSClientPointScriptEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSClientPointScriptEntity", "CCSClientPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSClientPointScriptEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSClientPointScriptEntity", "CCSClientPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSClientPointScriptEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPointScriptEntity Parent
            {
                get { return Invoker.CallNative<CCSPointScriptEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameModeRules : ClassData
        {
            public CCSGameModeRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules", "CCSGameModeRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules", "CCSGameModeRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameModeRules_ArmsRace : CCSGameModeRules
        {
            public CCSGameModeRules_ArmsRace(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_ArmsRace", "CCSGameModeRules_ArmsRace", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_ArmsRace(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_ArmsRace", "CCSGameModeRules_ArmsRace", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_ArmsRace()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] WeaponSequence
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "WeaponSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponSequence", CallKind.ClassMember, m_classData, value); }
            }
            public CCSGameModeRules Parent
            {
                get { return Invoker.CallNative<CCSGameModeRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameModeRules_Deathmatch : CCSGameModeRules
        {
            public CCSGameModeRules_Deathmatch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_Deathmatch", "CCSGameModeRules_Deathmatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_Deathmatch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_Deathmatch", "CCSGameModeRules_Deathmatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_Deathmatch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DMBonusStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DMBonusStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DMBonusStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DMBonusTimeLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "DMBonusTimeLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DMBonusTimeLength", CallKind.ClassMember, m_classData, value); }
            }
            public string DMBonusWeapon
            {
                get { return Invoker.CallNative<string>("SDKClass", "DMBonusWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DMBonusWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public CCSGameModeRules Parent
            {
                get { return Invoker.CallNative<CCSGameModeRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameModeRules_Noop : CCSGameModeRules
        {
            public CCSGameModeRules_Noop(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_Noop", "CCSGameModeRules_Noop", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_Noop(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameModeRules_Noop", "CCSGameModeRules_Noop", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameModeRules_Noop()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGameModeRules Parent
            {
                get { return Invoker.CallNative<CCSGameModeRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameRules : CTeamplayRules
        {
            public CCSGameRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameRules", "CCSGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameRules", "CCSGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool FreezePeriod
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FreezePeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezePeriod", CallKind.ClassMember, m_classData, value); }
            }
            public bool WarmupPeriod
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WarmupPeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarmupPeriod", CallKind.ClassMember, m_classData, value); }
            }
            public float WarmupPeriodEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "WarmupPeriodEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarmupPeriodEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float WarmupPeriodStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "WarmupPeriodStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarmupPeriodStart", CallKind.ClassMember, m_classData, value); }
            }
            public bool TerroristTimeOutActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TerroristTimeOutActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TerroristTimeOutActive", CallKind.ClassMember, m_classData, value); }
            }
            public bool CTTimeOutActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CTTimeOutActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTTimeOutActive", CallKind.ClassMember, m_classData, value); }
            }
            public float TerroristTimeOutRemaining
            {
                get { return Invoker.CallNative<float>("SDKClass", "TerroristTimeOutRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TerroristTimeOutRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public float CTTimeOutRemaining
            {
                get { return Invoker.CallNative<float>("SDKClass", "CTTimeOutRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTTimeOutRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public int TerroristTimeOuts
            {
                get { return Invoker.CallNative<int>("SDKClass", "TerroristTimeOuts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TerroristTimeOuts", CallKind.ClassMember, m_classData, value); }
            }
            public int CTTimeOuts
            {
                get { return Invoker.CallNative<int>("SDKClass", "CTTimeOuts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTTimeOuts", CallKind.ClassMember, m_classData, value); }
            }
            public bool TechnicalTimeOut
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TechnicalTimeOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TechnicalTimeOut", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchWaitingForResume
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchWaitingForResume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchWaitingForResume", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MatchStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MatchStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RoundStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RoundStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RestartRoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RestartRoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RestartRoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool GameRestart
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GameRestart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameRestart", CallKind.ClassMember, m_classData, value); }
            }
            public float GameStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GameStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeUntilNextPhaseStarts
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeUntilNextPhaseStarts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeUntilNextPhaseStarts", CallKind.ClassMember, m_classData, value); }
            }
            public int GamePhase
            {
                get { return Invoker.CallNative<int>("SDKClass", "GamePhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GamePhase", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalRoundsPlayed
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalRoundsPlayed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalRoundsPlayed", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundsPlayedThisPhase
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundsPlayedThisPhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundsPlayedThisPhase", CallKind.ClassMember, m_classData, value); }
            }
            public int OvertimePlaying
            {
                get { return Invoker.CallNative<int>("SDKClass", "OvertimePlaying", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OvertimePlaying", CallKind.ClassMember, m_classData, value); }
            }
            public int HostagesRemaining
            {
                get { return Invoker.CallNative<int>("SDKClass", "HostagesRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostagesRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnyHostageReached
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnyHostageReached", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnyHostageReached", CallKind.ClassMember, m_classData, value); }
            }
            public bool MapHasBombTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MapHasBombTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapHasBombTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool MapHasRescueZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MapHasRescueZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapHasRescueZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool MapHasBuyZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MapHasBuyZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapHasBuyZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsQueuedMatchmaking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsQueuedMatchmaking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsQueuedMatchmaking", CallKind.ClassMember, m_classData, value); }
            }
            public int QueuedMatchmakingMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "QueuedMatchmakingMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueuedMatchmakingMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsValveDS
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsValveDS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsValveDS", CallKind.ClassMember, m_classData, value); }
            }
            public bool LogoMap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LogoMap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LogoMap", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayAllStepSoundsOnServer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayAllStepSoundsOnServer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayAllStepSoundsOnServer", CallKind.ClassMember, m_classData, value); }
            }
            public int SpectatorSlotCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpectatorSlotCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpectatorSlotCount", CallKind.ClassMember, m_classData, value); }
            }
            public int MatchDevice
            {
                get { return Invoker.CallNative<int>("SDKClass", "MatchDevice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchDevice", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasMatchStarted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasMatchStarted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasMatchStarted", CallKind.ClassMember, m_classData, value); }
            }
            public int NextMapInMapgroup
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextMapInMapgroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextMapInMapgroup", CallKind.ClassMember, m_classData, value); }
            }
            public string TournamentEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TournamentEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TournamentEventName", CallKind.ClassMember, m_classData, value); }
            }
            public string TournamentEventStage
            {
                get { return Invoker.CallNative<string>("SDKClass", "TournamentEventStage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TournamentEventStage", CallKind.ClassMember, m_classData, value); }
            }
            public string MatchStatTxt
            {
                get { return Invoker.CallNative<string>("SDKClass", "MatchStatTxt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchStatTxt", CallKind.ClassMember, m_classData, value); }
            }
            public string TournamentPredictionsTxt
            {
                get { return Invoker.CallNative<string>("SDKClass", "TournamentPredictionsTxt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TournamentPredictionsTxt", CallKind.ClassMember, m_classData, value); }
            }
            public int TournamentPredictionsPct
            {
                get { return Invoker.CallNative<int>("SDKClass", "TournamentPredictionsPct", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TournamentPredictionsPct", CallKind.ClassMember, m_classData, value); }
            }
            public float CMMItemDropRevealStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CMMItemDropRevealStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CMMItemDropRevealStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float CMMItemDropRevealEndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CMMItemDropRevealEndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CMMItemDropRevealEndTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsDroppingItems
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsDroppingItems", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsDroppingItems", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsQuestEligible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsQuestEligible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsQuestEligible", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsHltvActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHltvActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHltvActive", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] ProhibitedItemIndices
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "ProhibitedItemIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProhibitedItemIndices", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] TournamentActiveCasterAccounts
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "TournamentActiveCasterAccounts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TournamentActiveCasterAccounts", CallKind.ClassMember, m_classData, value); }
            }
            public int NumBestOfMaps
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumBestOfMaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBestOfMaps", CallKind.ClassMember, m_classData, value); }
            }
            public int HalloweenMaskListSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "HalloweenMaskListSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HalloweenMaskListSeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombDropped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombDropped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombDropped", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombPlanted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombPlanted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombPlanted", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundWinStatus
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundWinStatus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundWinStatus", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundWinReason
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundWinReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundWinReason", CallKind.ClassMember, m_classData, value); }
            }
            public bool TCantBuy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TCantBuy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TCantBuy", CallKind.ClassMember, m_classData, value); }
            }
            public bool CTCantBuy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CTCantBuy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTCantBuy", CallKind.ClassMember, m_classData, value); }
            }
            public int[] MatchStats_RoundResults
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "MatchStats_RoundResults", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchStats_RoundResults", CallKind.ClassMember, m_classData, value); }
            }
            public int[] MatchStats_PlayersAlive_CT
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "MatchStats_PlayersAlive_CT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchStats_PlayersAlive_CT", CallKind.ClassMember, m_classData, value); }
            }
            public int[] MatchStats_PlayersAlive_T
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "MatchStats_PlayersAlive_T", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchStats_PlayersAlive_T", CallKind.ClassMember, m_classData, value); }
            }
            public float[] TeamRespawnWaveTimes
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "TeamRespawnWaveTimes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamRespawnWaveTimes", CallKind.ClassMember, m_classData, value); }
            }
            public float[] NextRespawnWave
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "NextRespawnWave", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextRespawnWave", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MinimapMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinimapMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimapMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MinimapMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinimapMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimapMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public float[] MinimapVerticalSectionHeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "MinimapVerticalSectionHeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimapVerticalSectionHeights", CallKind.ClassMember, m_classData, value); }
            }
            public ulong UllLocalMatchID
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "UllLocalMatchID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UllLocalMatchID", CallKind.ClassMember, m_classData, value); }
            }
            public int[] EndMatchMapGroupVoteTypes
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "EndMatchMapGroupVoteTypes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchMapGroupVoteTypes", CallKind.ClassMember, m_classData, value); }
            }
            public int[] EndMatchMapGroupVoteOptions
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "EndMatchMapGroupVoteOptions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchMapGroupVoteOptions", CallKind.ClassMember, m_classData, value); }
            }
            public int EndMatchMapVoteWinner
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndMatchMapVoteWinner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchMapVoteWinner", CallKind.ClassMember, m_classData, value); }
            }
            public int NumConsecutiveCTLoses
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumConsecutiveCTLoses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumConsecutiveCTLoses", CallKind.ClassMember, m_classData, value); }
            }
            public int NumConsecutiveTerroristLoses
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumConsecutiveTerroristLoses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumConsecutiveTerroristLoses", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasHostageBeenTouched
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasHostageBeenTouched", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasHostageBeenTouched", CallKind.ClassMember, m_classData, value); }
            }
            public float IntermissionStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "IntermissionStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IntermissionStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float IntermissionEndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "IntermissionEndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IntermissionEndTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool LevelInitialized
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LevelInitialized", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LevelInitialized", CallKind.ClassMember, m_classData, value); }
            }
            public int UnBalancedRounds
            {
                get { return Invoker.CallNative<int>("SDKClass", "UnBalancedRounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UnBalancedRounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool EndMatchOnRoundReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EndMatchOnRoundReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchOnRoundReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool EndMatchOnThink
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EndMatchOnThink", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchOnThink", CallKind.ClassMember, m_classData, value); }
            }
            public int FreezeTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "FreezeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTime", CallKind.ClassMember, m_classData, value); }
            }
            public int NumTerrorist
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumTerrorist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumTerrorist", CallKind.ClassMember, m_classData, value); }
            }
            public int NumCT
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumCT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumCT", CallKind.ClassMember, m_classData, value); }
            }
            public int NumSpawnableTerrorist
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumSpawnableTerrorist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpawnableTerrorist", CallKind.ClassMember, m_classData, value); }
            }
            public int NumSpawnableCT
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumSpawnableCT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpawnableCT", CallKind.ClassMember, m_classData, value); }
            }
            public int[] SelectedHostageSpawnIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SelectedHostageSpawnIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SelectedHostageSpawnIndices", CallKind.ClassMember, m_classData, value); }
            }
            public int SpawnPointsRandomSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpawnPointsRandomSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnPointsRandomSeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstConnected
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstConnected", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstConnected", CallKind.ClassMember, m_classData, value); }
            }
            public bool CompleteReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CompleteReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompleteReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool PickNewTeamsOnReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PickNewTeamsOnReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PickNewTeamsOnReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScrambleTeamsOnRestart
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScrambleTeamsOnRestart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScrambleTeamsOnRestart", CallKind.ClassMember, m_classData, value); }
            }
            public bool SwapTeamsOnRestart
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SwapTeamsOnRestart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwapTeamsOnRestart", CallKind.ClassMember, m_classData, value); }
            }
            public int[] EndMatchTiedVotes
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "EndMatchTiedVotes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchTiedVotes", CallKind.ClassMember, m_classData, value); }
            }
            public bool NeedToAskPlayersForContinueVote
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NeedToAskPlayersForContinueVote", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeedToAskPlayersForContinueVote", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumQueuedMatchmakingAccounts
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumQueuedMatchmakingAccounts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumQueuedMatchmakingAccounts", CallKind.ClassMember, m_classData, value); }
            }
            public float AvgPlayerRank
            {
                get { return Invoker.CallNative<float>("SDKClass", "AvgPlayerRank", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvgPlayerRank", CallKind.ClassMember, m_classData, value); }
            }
            public string QueuedMatchmakingReservationString
            {
                get { return Invoker.CallNative<string>("SDKClass", "QueuedMatchmakingReservationString", CallKind.ClassMember, m_classData); }
            }
            public uint NumTotalTournamentDrops
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumTotalTournamentDrops", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumTotalTournamentDrops", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumSpectatorsCountMax
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumSpectatorsCountMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpectatorsCountMax", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumSpectatorsCountMaxTV
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumSpectatorsCountMaxTV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpectatorsCountMaxTV", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumSpectatorsCountMaxLnk
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumSpectatorsCountMaxLnk", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpectatorsCountMaxLnk", CallKind.ClassMember, m_classData, value); }
            }
            public int CTsAliveAtFreezetimeEnd
            {
                get { return Invoker.CallNative<int>("SDKClass", "CTsAliveAtFreezetimeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTsAliveAtFreezetimeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public int TerroristsAliveAtFreezetimeEnd
            {
                get { return Invoker.CallNative<int>("SDKClass", "TerroristsAliveAtFreezetimeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TerroristsAliveAtFreezetimeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceTeamChangeSilent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceTeamChangeSilent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceTeamChangeSilent", CallKind.ClassMember, m_classData, value); }
            }
            public bool LoadingRoundBackupData
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoadingRoundBackupData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoadingRoundBackupData", CallKind.ClassMember, m_classData, value); }
            }
            public int MatchInfoShowType
            {
                get { return Invoker.CallNative<int>("SDKClass", "MatchInfoShowType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchInfoShowType", CallKind.ClassMember, m_classData, value); }
            }
            public float MatchInfoDecidedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MatchInfoDecidedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchInfoDecidedTime", CallKind.ClassMember, m_classData, value); }
            }
            public int MTeamDMLastWinningTeamNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "MTeamDMLastWinningTeamNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MTeamDMLastWinningTeamNumber", CallKind.ClassMember, m_classData, value); }
            }
            public float MTeamDMLastThinkTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MTeamDMLastThinkTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MTeamDMLastThinkTime", CallKind.ClassMember, m_classData, value); }
            }
            public float TeamDMLastAnnouncementTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "TeamDMLastAnnouncementTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamDMLastAnnouncementTime", CallKind.ClassMember, m_classData, value); }
            }
            public int AccountTerrorist
            {
                get { return Invoker.CallNative<int>("SDKClass", "AccountTerrorist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccountTerrorist", CallKind.ClassMember, m_classData, value); }
            }
            public int AccountCT
            {
                get { return Invoker.CallNative<int>("SDKClass", "AccountCT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccountCT", CallKind.ClassMember, m_classData, value); }
            }
            public int SpawnPointCount_Terrorist
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpawnPointCount_Terrorist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnPointCount_Terrorist", CallKind.ClassMember, m_classData, value); }
            }
            public int SpawnPointCount_CT
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpawnPointCount_CT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnPointCount_CT", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxNumTerrorists
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxNumTerrorists", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxNumTerrorists", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxNumCTs
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxNumCTs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxNumCTs", CallKind.ClassMember, m_classData, value); }
            }
            public int LoserBonusMostRecentTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "LoserBonusMostRecentTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoserBonusMostRecentTeam", CallKind.ClassMember, m_classData, value); }
            }
            public float TmNextPeriodicThink
            {
                get { return Invoker.CallNative<float>("SDKClass", "TmNextPeriodicThink", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TmNextPeriodicThink", CallKind.ClassMember, m_classData, value); }
            }
            public bool VoiceWonMatchBragFired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "VoiceWonMatchBragFired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoiceWonMatchBragFired", CallKind.ClassMember, m_classData, value); }
            }
            public float WarmupNextChatNoticeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "WarmupNextChatNoticeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarmupNextChatNoticeTime", CallKind.ClassMember, m_classData, value); }
            }
            public int HostagesRescued
            {
                get { return Invoker.CallNative<int>("SDKClass", "HostagesRescued", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostagesRescued", CallKind.ClassMember, m_classData, value); }
            }
            public int HostagesTouched
            {
                get { return Invoker.CallNative<int>("SDKClass", "HostagesTouched", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostagesTouched", CallKind.ClassMember, m_classData, value); }
            }
            public float NextHostageAnnouncement
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextHostageAnnouncement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextHostageAnnouncement", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoTerroristsKilled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoTerroristsKilled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoTerroristsKilled", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoCTsKilled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoCTsKilled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoCTsKilled", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoEnemiesKilled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoEnemiesKilled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoEnemiesKilled", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanDonateWeapons
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanDonateWeapons", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanDonateWeapons", CallKind.ClassMember, m_classData, value); }
            }
            public float FirstKillTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FirstKillTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstKillTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FirstBloodTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FirstBloodTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstBloodTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool HostageWasInjured
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HostageWasInjured", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageWasInjured", CallKind.ClassMember, m_classData, value); }
            }
            public bool HostageWasKilled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HostageWasKilled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageWasKilled", CallKind.ClassMember, m_classData, value); }
            }
            public bool VoteCalled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "VoteCalled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoteCalled", CallKind.ClassMember, m_classData, value); }
            }
            public bool ServerVoteOnReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ServerVoteOnReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ServerVoteOnReset", CallKind.ClassMember, m_classData, value); }
            }
            public float VoteCheckThrottle
            {
                get { return Invoker.CallNative<float>("SDKClass", "VoteCheckThrottle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoteCheckThrottle", CallKind.ClassMember, m_classData, value); }
            }
            public bool BuyTimeEnded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BuyTimeEnded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuyTimeEnded", CallKind.ClassMember, m_classData, value); }
            }
            public int LastFreezeEndBeep
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastFreezeEndBeep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastFreezeEndBeep", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetBombed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetBombed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBombed", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombDefused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombDefused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombDefused", CallKind.ClassMember, m_classData, value); }
            }
            public bool MapHasBombZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MapHasBombZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapHasBombZone", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MainCTSpawnPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MainCTSpawnPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MainCTSpawnPos", CallKind.ClassMember, m_classData, value); }
            }
            public bool RespawningAllRespawnablePlayers
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RespawningAllRespawnablePlayers", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RespawningAllRespawnablePlayers", CallKind.ClassMember, m_classData, value); }
            }
            public int NextCTSpawnPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextCTSpawnPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextCTSpawnPoint", CallKind.ClassMember, m_classData, value); }
            }
            public float CTSpawnPointUsedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CTSpawnPointUsedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTSpawnPointUsedTime", CallKind.ClassMember, m_classData, value); }
            }
            public int NextTerroristSpawnPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextTerroristSpawnPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextTerroristSpawnPoint", CallKind.ClassMember, m_classData, value); }
            }
            public float TerroristSpawnPointUsedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "TerroristSpawnPointUsedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TerroristSpawnPointUsedTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsUnreservedGameServer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsUnreservedGameServer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsUnreservedGameServer", CallKind.ClassMember, m_classData, value); }
            }
            public float AutobalanceDisplayTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutobalanceDisplayTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutobalanceDisplayTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowWeaponSwitch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowWeaponSwitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowWeaponSwitch", CallKind.ClassMember, m_classData, value); }
            }
            public bool RoundTimeWarningTriggered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RoundTimeWarningTriggered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundTimeWarningTriggered", CallKind.ClassMember, m_classData, value); }
            }
            public float PhaseChangeAnnouncementTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PhaseChangeAnnouncementTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhaseChangeAnnouncementTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextUpdateTeamClanNamesTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextUpdateTeamClanNamesTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextUpdateTeamClanNamesTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastThinkTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastThinkTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastThinkTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AccumulatedRoundOffDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "AccumulatedRoundOffDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccumulatedRoundOffDamage", CallKind.ClassMember, m_classData, value); }
            }
            public int ShorthandedBonusLastEvalRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShorthandedBonusLastEvalRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShorthandedBonusLastEvalRound", CallKind.ClassMember, m_classData, value); }
            }
            public int MatchAbortedEarlyReason
            {
                get { return Invoker.CallNative<int>("SDKClass", "MatchAbortedEarlyReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchAbortedEarlyReason", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasTriggeredRoundStartMusic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasTriggeredRoundStartMusic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasTriggeredRoundStartMusic", CallKind.ClassMember, m_classData, value); }
            }
            public bool SwitchingTeamsAtRoundReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SwitchingTeamsAtRoundReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwitchingTeamsAtRoundReset", CallKind.ClassMember, m_classData, value); }
            }
            public int[] GameModeRules
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "GameModeRules", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity PlayerResource
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "PlayerResource", CallKind.ClassMember, m_classData); }
            }
            public CRetakeGameRules RetakeRules
            {
                get { return Invoker.CallNative<CRetakeGameRules>("SDKClass", "RetakeRules", CallKind.ClassMember, m_classData); }
            }
            public bool[] TeamLastKillUsedUniqueWeaponMatch
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "TeamLastKillUsedUniqueWeaponMatch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamLastKillUsedUniqueWeaponMatch", CallKind.ClassMember, m_classData, value); }
            }
            public byte MatchEndCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MatchEndCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchEndCount", CallKind.ClassMember, m_classData, value); }
            }
            public int TTeamIntroVariant
            {
                get { return Invoker.CallNative<int>("SDKClass", "TTeamIntroVariant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TTeamIntroVariant", CallKind.ClassMember, m_classData, value); }
            }
            public int CTTeamIntroVariant
            {
                get { return Invoker.CallNative<int>("SDKClass", "CTTeamIntroVariant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CTTeamIntroVariant", CallKind.ClassMember, m_classData, value); }
            }
            public bool TeamIntroPeriod
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TeamIntroPeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamIntroPeriod", CallKind.ClassMember, m_classData, value); }
            }
            public float TeamIntroPeriodEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "TeamIntroPeriodEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamIntroPeriodEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayedTeamIntroVO
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayedTeamIntroVO", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayedTeamIntroVO", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndWinnerTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndWinnerTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndWinnerTeam", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndReason
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndReason", CallKind.ClassMember, m_classData, value); }
            }
            public bool RoundEndShowTimerDefend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RoundEndShowTimerDefend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndShowTimerDefend", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndTimerTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndTimerTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndTimerTime", CallKind.ClassMember, m_classData, value); }
            }
            public string RoundEndFunFactToken
            {
                get { return Invoker.CallNative<string>("SDKClass", "RoundEndFunFactToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndFunFactToken", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndFunFactPlayerSlot
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndFunFactPlayerSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndFunFactPlayerSlot", CallKind.ClassMember, m_classData, value); }
            }
            public string RoundEndMessage
            {
                get { return Invoker.CallNative<string>("SDKClass", "RoundEndMessage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndMessage", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndPlayerCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndPlayerCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndPlayerCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool RoundEndNoMusic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RoundEndNoMusic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndNoMusic", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundEndLegacy
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundEndLegacy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndLegacy", CallKind.ClassMember, m_classData, value); }
            }
            public byte RoundEndCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RoundEndCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundEndCount", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundStartRoundNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundStartRoundNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundStartRoundNumber", CallKind.ClassMember, m_classData, value); }
            }
            public byte RoundStartCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "RoundStartCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundStartCount", CallKind.ClassMember, m_classData, value); }
            }
            public double LastPerfSampleTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "LastPerfSampleTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPerfSampleTime", CallKind.ClassMember, m_classData, value); }
            }
            public CTeamplayRules Parent
            {
                get { return Invoker.CallNative<CTeamplayRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGameRulesProxy : CGameRulesProxy
        {
            public CCSGameRulesProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameRulesProxy", "CCSGameRulesProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameRulesProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGameRulesProxy", "CCSGameRulesProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGameRulesProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] GameRules
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "GameRules", CallKind.ClassMember, m_classData); }
            }
            public CGameRulesProxy Parent
            {
                get { return Invoker.CallNative<CGameRulesProxy>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamIntroCharacterPosition : CCSGO_TeamPreviewCharacterPosition
        {
            public CCSGO_TeamIntroCharacterPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroCharacterPosition", "CCSGO_TeamIntroCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroCharacterPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroCharacterPosition", "CCSGO_TeamIntroCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroCharacterPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamPreviewCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamPreviewCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamIntroCounterTerroristPosition : CCSGO_TeamIntroCharacterPosition
        {
            public CCSGO_TeamIntroCounterTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroCounterTerroristPosition", "CCSGO_TeamIntroCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroCounterTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroCounterTerroristPosition", "CCSGO_TeamIntroCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroCounterTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamIntroCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamIntroCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamIntroTerroristPosition : CCSGO_TeamIntroCharacterPosition
        {
            public CCSGO_TeamIntroTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroTerroristPosition", "CCSGO_TeamIntroTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamIntroTerroristPosition", "CCSGO_TeamIntroTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamIntroTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamIntroCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamIntroCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamPreviewCharacterPosition : CBaseEntity
        {
            public CCSGO_TeamPreviewCharacterPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamPreviewCharacterPosition", "CCSGO_TeamPreviewCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamPreviewCharacterPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamPreviewCharacterPosition", "CCSGO_TeamPreviewCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamPreviewCharacterPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Variant
            {
                get { return Invoker.CallNative<int>("SDKClass", "Variant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Variant", CallKind.ClassMember, m_classData, value); }
            }
            public int Random
            {
                get { return Invoker.CallNative<int>("SDKClass", "Random", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Random", CallKind.ClassMember, m_classData, value); }
            }
            public int Ordinal
            {
                get { return Invoker.CallNative<int>("SDKClass", "Ordinal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ordinal", CallKind.ClassMember, m_classData, value); }
            }
            public string WeaponName
            {
                get { return Invoker.CallNative<string>("SDKClass", "WeaponName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponName", CallKind.ClassMember, m_classData, value); }
            }
            public ulong Xuid
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "Xuid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Xuid", CallKind.ClassMember, m_classData, value); }
            }
            public CEconItemView AgentItem
            {
                get { return Invoker.CallNative<CEconItemView>("SDKClass", "AgentItem", CallKind.ClassMember, m_classData); }
            }
            public CEconItemView GlovesItem
            {
                get { return Invoker.CallNative<CEconItemView>("SDKClass", "GlovesItem", CallKind.ClassMember, m_classData); }
            }
            public CEconItemView WeaponItem
            {
                get { return Invoker.CallNative<CEconItemView>("SDKClass", "WeaponItem", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamSelectCharacterPosition : CCSGO_TeamPreviewCharacterPosition
        {
            public CCSGO_TeamSelectCharacterPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectCharacterPosition", "CCSGO_TeamSelectCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectCharacterPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectCharacterPosition", "CCSGO_TeamSelectCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectCharacterPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamPreviewCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamPreviewCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamSelectCounterTerroristPosition : CCSGO_TeamSelectCharacterPosition
        {
            public CCSGO_TeamSelectCounterTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectCounterTerroristPosition", "CCSGO_TeamSelectCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectCounterTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectCounterTerroristPosition", "CCSGO_TeamSelectCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectCounterTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamSelectCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamSelectCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_TeamSelectTerroristPosition : CCSGO_TeamSelectCharacterPosition
        {
            public CCSGO_TeamSelectTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectTerroristPosition", "CCSGO_TeamSelectTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_TeamSelectTerroristPosition", "CCSGO_TeamSelectTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_TeamSelectTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamSelectCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamSelectCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_WingmanIntroCharacterPosition : CCSGO_TeamIntroCharacterPosition
        {
            public CCSGO_WingmanIntroCharacterPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroCharacterPosition", "CCSGO_WingmanIntroCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroCharacterPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroCharacterPosition", "CCSGO_WingmanIntroCharacterPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroCharacterPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_TeamIntroCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_TeamIntroCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_WingmanIntroCounterTerroristPosition : CCSGO_WingmanIntroCharacterPosition
        {
            public CCSGO_WingmanIntroCounterTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroCounterTerroristPosition", "CCSGO_WingmanIntroCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroCounterTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroCounterTerroristPosition", "CCSGO_WingmanIntroCounterTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroCounterTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_WingmanIntroCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_WingmanIntroCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGO_WingmanIntroTerroristPosition : CCSGO_WingmanIntroCharacterPosition
        {
            public CCSGO_WingmanIntroTerroristPosition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroTerroristPosition", "CCSGO_WingmanIntroTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroTerroristPosition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGO_WingmanIntroTerroristPosition", "CCSGO_WingmanIntroTerroristPosition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGO_WingmanIntroTerroristPosition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSGO_WingmanIntroCharacterPosition Parent
            {
                get { return Invoker.CallNative<CCSGO_WingmanIntroCharacterPosition>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSGOPlayerAnimGraphState : ClassData
        {
            public CCSGOPlayerAnimGraphState(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGOPlayerAnimGraphState", "CCSGOPlayerAnimGraphState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGOPlayerAnimGraphState(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSGOPlayerAnimGraphState", "CCSGOPlayerAnimGraphState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSGOPlayerAnimGraphState()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSMinimapBoundary : CBaseEntity
        {
            public CCSMinimapBoundary(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSMinimapBoundary", "CCSMinimapBoundary", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSMinimapBoundary(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSMinimapBoundary", "CCSMinimapBoundary", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSMinimapBoundary()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSObserver_CameraServices : CCSPlayerBase_CameraServices
        {
            public CCSObserver_CameraServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_CameraServices", "CCSObserver_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_CameraServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_CameraServices", "CCSObserver_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_CameraServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerBase_CameraServices Parent
            {
                get { return Invoker.CallNative<CCSPlayerBase_CameraServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSObserver_MovementServices : CPlayer_MovementServices
        {
            public CCSObserver_MovementServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_MovementServices", "CCSObserver_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_MovementServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_MovementServices", "CCSObserver_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_MovementServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayer_MovementServices Parent
            {
                get { return Invoker.CallNative<CPlayer_MovementServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSObserver_ObserverServices : CPlayer_ObserverServices
        {
            public CCSObserver_ObserverServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_ObserverServices", "CCSObserver_ObserverServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_ObserverServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_ObserverServices", "CCSObserver_ObserverServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_ObserverServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayer_ObserverServices Parent
            {
                get { return Invoker.CallNative<CPlayer_ObserverServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSObserver_UseServices : CPlayer_UseServices
        {
            public CCSObserver_UseServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_UseServices", "CCSObserver_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_UseServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserver_UseServices", "CCSObserver_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserver_UseServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayer_UseServices Parent
            {
                get { return Invoker.CallNative<CPlayer_UseServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSObserverPawn : CCSPlayerPawnBase
        {
            public CCSObserverPawn(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserverPawn", "CCSObserverPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserverPawn(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSObserverPawn", "CCSObserverPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSObserverPawn()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerPawnBase Parent
            {
                get { return Invoker.CallNative<CCSPlayerPawnBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPetPlacement : CBaseEntity
        {
            public CCSPetPlacement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPetPlacement", "CCSPetPlacement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPetPlacement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPetPlacement", "CCSPetPlacement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPetPlacement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlace : CServerOnlyModelEntity
        {
            public CCSPlace(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlace", "CCSPlace", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlace(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlace", "CCSPlace", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlace()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public CServerOnlyModelEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_ActionTrackingServices : CPlayerPawnComponent
        {
            public CCSPlayer_ActionTrackingServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_ActionTrackingServices", "CCSPlayer_ActionTrackingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_ActionTrackingServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_ActionTrackingServices", "CCSPlayer_ActionTrackingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_ActionTrackingServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsRescuing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRescuing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRescuing", CallKind.ClassMember, m_classData, value); }
            }
            public WeaponPurchaseTracker_t WeaponPurchasesThisMatch
            {
                get { return Invoker.CallNative<WeaponPurchaseTracker_t>("SDKClass", "WeaponPurchasesThisMatch", CallKind.ClassMember, m_classData); }
            }
            public WeaponPurchaseTracker_t WeaponPurchasesThisRound
            {
                get { return Invoker.CallNative<WeaponPurchaseTracker_t>("SDKClass", "WeaponPurchasesThisRound", CallKind.ClassMember, m_classData); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_BulletServices : CPlayerPawnComponent
        {
            public CCSPlayer_BulletServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_BulletServices", "CCSPlayer_BulletServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_BulletServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_BulletServices", "CCSPlayer_BulletServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_BulletServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TotalHitsOnServer
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalHitsOnServer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalHitsOnServer", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_BuyServices : CPlayerPawnComponent
        {
            public CCSPlayer_BuyServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_BuyServices", "CCSPlayer_BuyServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_BuyServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_BuyServices", "CCSPlayer_BuyServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_BuyServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_CameraServices : CCSPlayerBase_CameraServices
        {
            public CCSPlayer_CameraServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_CameraServices", "CCSPlayer_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_CameraServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_CameraServices", "CCSPlayer_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_CameraServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerBase_CameraServices Parent
            {
                get { return Invoker.CallNative<CCSPlayerBase_CameraServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_DamageReactServices : CPlayerPawnComponent
        {
            public CCSPlayer_DamageReactServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_DamageReactServices", "CCSPlayer_DamageReactServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_DamageReactServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_DamageReactServices", "CCSPlayer_DamageReactServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_DamageReactServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_GlowServices : CPlayerPawnComponent
        {
            public CCSPlayer_GlowServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_GlowServices", "CCSPlayer_GlowServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_GlowServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_GlowServices", "CCSPlayer_GlowServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_GlowServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_HostageServices : CPlayerPawnComponent
        {
            public CCSPlayer_HostageServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_HostageServices", "CCSPlayer_HostageServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_HostageServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_HostageServices", "CCSPlayer_HostageServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_HostageServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity CarriedHostage
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "CarriedHostage", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity CarriedHostageProp
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "CarriedHostageProp", CallKind.ClassMember, m_classData); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_ItemServices : CPlayer_ItemServices
        {
            public CCSPlayer_ItemServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_ItemServices", "CCSPlayer_ItemServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_ItemServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_ItemServices", "CCSPlayer_ItemServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_ItemServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool HasDefuser
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasDefuser", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasDefuser", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasHelmet
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasHelmet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasHelmet", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_ItemServices Parent
            {
                get { return Invoker.CallNative<CPlayer_ItemServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_MovementServices : CPlayer_MovementServices_Humanoid
        {
            public CCSPlayer_MovementServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_MovementServices", "CCSPlayer_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_MovementServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_MovementServices", "CCSPlayer_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_MovementServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LadderNormal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LadderNormal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LadderNormal", CallKind.ClassMember, m_classData, value); }
            }
            public int LadderSurfacePropIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "LadderSurfacePropIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LadderSurfacePropIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float DuckAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "DuckAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float DuckSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DuckSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool DuckOverride
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DuckOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckOverride", CallKind.ClassMember, m_classData, value); }
            }
            public bool DesiresDuck
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DesiresDuck", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiresDuck", CallKind.ClassMember, m_classData, value); }
            }
            public float DuckOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "DuckOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckOffset", CallKind.ClassMember, m_classData, value); }
            }
            public uint DuckTimeMsecs
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DuckTimeMsecs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckTimeMsecs", CallKind.ClassMember, m_classData, value); }
            }
            public uint DuckJumpTimeMsecs
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DuckJumpTimeMsecs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckJumpTimeMsecs", CallKind.ClassMember, m_classData, value); }
            }
            public uint JumpTimeMsecs
            {
                get { return Invoker.CallNative<uint>("SDKClass", "JumpTimeMsecs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpTimeMsecs", CallKind.ClassMember, m_classData, value); }
            }
            public float LastDuckTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastDuckTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastDuckTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D LastPositionAtFullCrouchSpeed
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "LastPositionAtFullCrouchSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPositionAtFullCrouchSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool DuckUntilOnGround
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DuckUntilOnGround", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DuckUntilOnGround", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasWalkMovedSinceLastJump
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasWalkMovedSinceLastJump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasWalkMovedSinceLastJump", CallKind.ClassMember, m_classData, value); }
            }
            public bool InStuckTest
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InStuckTest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InStuckTest", CallKind.ClassMember, m_classData, value); }
            }
            public int TraceCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TraceCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceCount", CallKind.ClassMember, m_classData, value); }
            }
            public int StuckLast
            {
                get { return Invoker.CallNative<int>("SDKClass", "StuckLast", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StuckLast", CallKind.ClassMember, m_classData, value); }
            }
            public bool SpeedCropped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SpeedCropped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedCropped", CallKind.ClassMember, m_classData, value); }
            }
            public float GroundMoveEfficiency
            {
                get { return Invoker.CallNative<float>("SDKClass", "GroundMoveEfficiency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundMoveEfficiency", CallKind.ClassMember, m_classData, value); }
            }
            public int OldWaterLevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "OldWaterLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldWaterLevel", CallKind.ClassMember, m_classData, value); }
            }
            public float WaterEntryTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "WaterEntryTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterEntryTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Forward
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Forward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Forward", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Left
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Left", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Left", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Up
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Up", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Up", CallKind.ClassMember, m_classData, value); }
            }
            public int GameCodeHasMovedPlayerAfterCommand
            {
                get { return Invoker.CallNative<int>("SDKClass", "GameCodeHasMovedPlayerAfterCommand", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameCodeHasMovedPlayerAfterCommand", CallKind.ClassMember, m_classData, value); }
            }
            public bool MadeFootstepNoise
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MadeFootstepNoise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MadeFootstepNoise", CallKind.ClassMember, m_classData, value); }
            }
            public int Footsteps
            {
                get { return Invoker.CallNative<int>("SDKClass", "Footsteps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Footsteps", CallKind.ClassMember, m_classData, value); }
            }
            public bool OldJumpPressed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OldJumpPressed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldJumpPressed", CallKind.ClassMember, m_classData, value); }
            }
            public float JumpPressedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "JumpPressedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpPressedTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StashGrenadeParameterWhen
            {
                get { return Invoker.CallNative<float>("SDKClass", "StashGrenadeParameterWhen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StashGrenadeParameterWhen", CallKind.ClassMember, m_classData, value); }
            }
            public ulong ButtonDownMaskPrev
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ButtonDownMaskPrev", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ButtonDownMaskPrev", CallKind.ClassMember, m_classData, value); }
            }
            public float OffsetTickCompleteTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "OffsetTickCompleteTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OffsetTickCompleteTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OffsetTickStashedSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "OffsetTickStashedSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OffsetTickStashedSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float Stamina
            {
                get { return Invoker.CallNative<float>("SDKClass", "Stamina", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Stamina", CallKind.ClassMember, m_classData, value); }
            }
            public float HeightAtJumpStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeightAtJumpStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightAtJumpStart", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxJumpHeightThisJump
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxJumpHeightThisJump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxJumpHeightThisJump", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxJumpHeightLastJump
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxJumpHeightLastJump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxJumpHeightLastJump", CallKind.ClassMember, m_classData, value); }
            }
            public float StaminaAtJumpStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "StaminaAtJumpStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StaminaAtJumpStart", CallKind.ClassMember, m_classData, value); }
            }
            public float AccumulatedJumpError
            {
                get { return Invoker.CallNative<float>("SDKClass", "AccumulatedJumpError", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccumulatedJumpError", CallKind.ClassMember, m_classData, value); }
            }
            public float TicksSinceLastSurfingDetected
            {
                get { return Invoker.CallNative<float>("SDKClass", "TicksSinceLastSurfingDetected", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TicksSinceLastSurfingDetected", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasSurfing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasSurfing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasSurfing", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_MovementServices_Humanoid Parent
            {
                get { return Invoker.CallNative<CPlayer_MovementServices_Humanoid>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_PingServices : CPlayerPawnComponent
        {
            public CCSPlayer_PingServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_PingServices", "CCSPlayer_PingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_PingServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_PingServices", "CCSPlayer_PingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_PingServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] PlayerPingTokens
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PlayerPingTokens", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerPingTokens", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity PlayerPing
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "PlayerPing", CallKind.ClassMember, m_classData); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_RadioServices : CPlayerPawnComponent
        {
            public CCSPlayer_RadioServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_RadioServices", "CCSPlayer_RadioServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_RadioServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_RadioServices", "CCSPlayer_RadioServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_RadioServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float GotHostageTalkTimer
            {
                get { return Invoker.CallNative<float>("SDKClass", "GotHostageTalkTimer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GotHostageTalkTimer", CallKind.ClassMember, m_classData, value); }
            }
            public float DefusingTalkTimer
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefusingTalkTimer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefusingTalkTimer", CallKind.ClassMember, m_classData, value); }
            }
            public float[] RadioTokenSlots
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "RadioTokenSlots", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadioTokenSlots", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreRadio
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreRadio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreRadio", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_UseServices : CPlayer_UseServices
        {
            public CCSPlayer_UseServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_UseServices", "CCSPlayer_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_UseServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_UseServices", "CCSPlayer_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_UseServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity LastKnownUseEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "LastKnownUseEntity", CallKind.ClassMember, m_classData); }
            }
            public float LastUseTimeStamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastUseTimeStamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastUseTimeStamp", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeLastUsedWindow
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeLastUsedWindow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeLastUsedWindow", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_UseServices Parent
            {
                get { return Invoker.CallNative<CPlayer_UseServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_WaterServices : CPlayer_WaterServices
        {
            public CCSPlayer_WaterServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_WaterServices", "CCSPlayer_WaterServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_WaterServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_WaterServices", "CCSPlayer_WaterServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_WaterServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float NextDrownDamageTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextDrownDamageTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextDrownDamageTime", CallKind.ClassMember, m_classData, value); }
            }
            public int DrownDmgRate
            {
                get { return Invoker.CallNative<int>("SDKClass", "DrownDmgRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrownDmgRate", CallKind.ClassMember, m_classData, value); }
            }
            public float AirFinishedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AirFinishedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AirFinishedTime", CallKind.ClassMember, m_classData, value); }
            }
            public float WaterJumpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "WaterJumpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterJumpTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WaterJumpVel
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WaterJumpVel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterJumpVel", CallKind.ClassMember, m_classData, value); }
            }
            public float SwimSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwimSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwimSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_WaterServices Parent
            {
                get { return Invoker.CallNative<CPlayer_WaterServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayer_WeaponServices : CPlayer_WeaponServices
        {
            public CCSPlayer_WeaponServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_WeaponServices", "CCSPlayer_WeaponServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_WeaponServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayer_WeaponServices", "CCSPlayer_WeaponServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayer_WeaponServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float NextAttack
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextAttack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextAttack", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLookingAtWeapon
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLookingAtWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLookingAtWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsHoldingLookAtWeapon
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHoldingLookAtWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHoldingLookAtWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerWeapon SavedWeapon
            {
                get { return Invoker.CallNative<CBasePlayerWeapon>("SDKClass", "SavedWeapon", CallKind.ClassMember, m_classData); }
            }
            public int TimeToMelee
            {
                get { return Invoker.CallNative<int>("SDKClass", "TimeToMelee", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToMelee", CallKind.ClassMember, m_classData, value); }
            }
            public int TimeToSecondary
            {
                get { return Invoker.CallNative<int>("SDKClass", "TimeToSecondary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToSecondary", CallKind.ClassMember, m_classData, value); }
            }
            public int TimeToPrimary
            {
                get { return Invoker.CallNative<int>("SDKClass", "TimeToPrimary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToPrimary", CallKind.ClassMember, m_classData, value); }
            }
            public int TimeToSniperRifle
            {
                get { return Invoker.CallNative<int>("SDKClass", "TimeToSniperRifle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToSniperRifle", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsBeingGivenItem
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBeingGivenItem", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBeingGivenItem", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPickingUpItemWithUse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPickingUpItemWithUse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPickingUpItemWithUse", CallKind.ClassMember, m_classData, value); }
            }
            public bool PickedUpWeapon
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PickedUpWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PickedUpWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableAutoDeploy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableAutoDeploy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableAutoDeploy", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPickingUpGroundWeapon
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPickingUpGroundWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPickingUpGroundWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] NetworkAnimTiming
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "NetworkAnimTiming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkAnimTiming", CallKind.ClassMember, m_classData, value); }
            }
            public bool BlockInspectUntilNextGraphUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BlockInspectUntilNextGraphUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockInspectUntilNextGraphUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_WeaponServices Parent
            {
                get { return Invoker.CallNative<CPlayer_WeaponServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerBase_CameraServices : CPlayer_CameraServices
        {
            public CCSPlayerBase_CameraServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerBase_CameraServices", "CCSPlayerBase_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerBase_CameraServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerBase_CameraServices", "CCSPlayerBase_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerBase_CameraServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FOV
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOV", CallKind.ClassMember, m_classData, value); }
            }
            public uint FOVStart
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FOVStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOVStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FOVTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FOVTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOVTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FOVRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "FOVRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOVRate", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity ZoomOwner
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "ZoomOwner", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity LastFogTrigger
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "LastFogTrigger", CallKind.ClassMember, m_classData); }
            }
            public CPlayer_CameraServices Parent
            {
                get { return Invoker.CallNative<CPlayer_CameraServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerController : CBasePlayerController
        {
            public CCSPlayerController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController", "CCSPlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController", "CCSPlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] InGameMoneyServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "InGameMoneyServices", CallKind.ClassMember, m_classData); }
            }
            public int[] InventoryServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "InventoryServices", CallKind.ClassMember, m_classData); }
            }
            public int[] ActionTrackingServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ActionTrackingServices", CallKind.ClassMember, m_classData); }
            }
            public int[] DamageServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "DamageServices", CallKind.ClassMember, m_classData); }
            }
            public uint Ping
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Ping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ping", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasCommunicationAbuseMute
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasCommunicationAbuseMute", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasCommunicationAbuseMute", CallKind.ClassMember, m_classData, value); }
            }
            public uint UiCommunicationMuteFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "UiCommunicationMuteFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UiCommunicationMuteFlags", CallKind.ClassMember, m_classData, value); }
            }
            public string CrosshairCodes
            {
                get { return Invoker.CallNative<string>("SDKClass", "CrosshairCodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrosshairCodes", CallKind.ClassMember, m_classData, value); }
            }
            public byte PendingTeamNum
            {
                get { return Invoker.CallNative<byte>("SDKClass", "PendingTeamNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PendingTeamNum", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceTeamTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceTeamTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceTeamTime", CallKind.ClassMember, m_classData, value); }
            }
            public int CompTeammateColor
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompTeammateColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompTeammateColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool EverPlayedOnTeam
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EverPlayedOnTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EverPlayedOnTeam", CallKind.ClassMember, m_classData, value); }
            }
            public bool AttemptedToGetColor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AttemptedToGetColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttemptedToGetColor", CallKind.ClassMember, m_classData, value); }
            }
            public int TeammatePreferredColor
            {
                get { return Invoker.CallNative<int>("SDKClass", "TeammatePreferredColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeammatePreferredColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool TeamChanged
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TeamChanged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamChanged", CallKind.ClassMember, m_classData, value); }
            }
            public bool InSwitchTeam
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InSwitchTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InSwitchTeam", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasSeenJoinGame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasSeenJoinGame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasSeenJoinGame", CallKind.ClassMember, m_classData, value); }
            }
            public bool JustBecameSpectator
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JustBecameSpectator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JustBecameSpectator", CallKind.ClassMember, m_classData, value); }
            }
            public bool SwitchTeamsOnNextRoundReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SwitchTeamsOnNextRoundReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwitchTeamsOnNextRoundReset", CallKind.ClassMember, m_classData, value); }
            }
            public bool RemoveAllItemsOnNextRoundReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RemoveAllItemsOnNextRoundReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemoveAllItemsOnNextRoundReset", CallKind.ClassMember, m_classData, value); }
            }
            public float LastJoinTeamTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastJoinTeamTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastJoinTeamTime", CallKind.ClassMember, m_classData, value); }
            }
            public string Clan
            {
                get { return Invoker.CallNative<string>("SDKClass", "Clan", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Clan", CallKind.ClassMember, m_classData, value); }
            }
            public string ClanName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ClanName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClanName", CallKind.ClassMember, m_classData, value); }
            }
            public int CoachingTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "CoachingTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CoachingTeam", CallKind.ClassMember, m_classData, value); }
            }
            public ulong PlayerDominated
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "PlayerDominated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDominated", CallKind.ClassMember, m_classData, value); }
            }
            public ulong PlayerDominatingMe
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "PlayerDominatingMe", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDominatingMe", CallKind.ClassMember, m_classData, value); }
            }
            public int CompetitiveRanking
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompetitiveRanking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveRanking", CallKind.ClassMember, m_classData, value); }
            }
            public int CompetitiveWins
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompetitiveWins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveWins", CallKind.ClassMember, m_classData, value); }
            }
            public char CompetitiveRankType
            {
                get { return Invoker.CallNative<char>("SDKClass", "CompetitiveRankType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveRankType", CallKind.ClassMember, m_classData, value); }
            }
            public int CompetitiveRankingPredicted_Win
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompetitiveRankingPredicted_Win", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveRankingPredicted_Win", CallKind.ClassMember, m_classData, value); }
            }
            public int CompetitiveRankingPredicted_Loss
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompetitiveRankingPredicted_Loss", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveRankingPredicted_Loss", CallKind.ClassMember, m_classData, value); }
            }
            public int CompetitiveRankingPredicted_Tie
            {
                get { return Invoker.CallNative<int>("SDKClass", "CompetitiveRankingPredicted_Tie", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompetitiveRankingPredicted_Tie", CallKind.ClassMember, m_classData, value); }
            }
            public int EndMatchNextMapVote
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndMatchNextMapVote", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchNextMapVote", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ActiveQuestId
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ActiveQuestId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActiveQuestId", CallKind.ClassMember, m_classData, value); }
            }
            public uint RtActiveMissionPeriod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RtActiveMissionPeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RtActiveMissionPeriod", CallKind.ClassMember, m_classData, value); }
            }
            public uint PlayerTvControlFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PlayerTvControlFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerTvControlFlags", CallKind.ClassMember, m_classData, value); }
            }
            public int DraftIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DraftIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DraftIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint MsQueuedModeDisconnectionTimestamp
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MsQueuedModeDisconnectionTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MsQueuedModeDisconnectionTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public uint UiAbandonRecordedReason
            {
                get { return Invoker.CallNative<uint>("SDKClass", "UiAbandonRecordedReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UiAbandonRecordedReason", CallKind.ClassMember, m_classData, value); }
            }
            public uint NetworkDisconnectionReason
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NetworkDisconnectionReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkDisconnectionReason", CallKind.ClassMember, m_classData, value); }
            }
            public bool CannotBeKicked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CannotBeKicked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CannotBeKicked", CallKind.ClassMember, m_classData, value); }
            }
            public bool EverFullyConnected
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EverFullyConnected", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EverFullyConnected", CallKind.ClassMember, m_classData, value); }
            }
            public bool AbandonAllowsSurrender
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AbandonAllowsSurrender", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbandonAllowsSurrender", CallKind.ClassMember, m_classData, value); }
            }
            public bool AbandonOffersInstantSurrender
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AbandonOffersInstantSurrender", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbandonOffersInstantSurrender", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScoreReported
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScoreReported", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScoreReported", CallKind.ClassMember, m_classData, value); }
            }
            public int DisconnectionTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "DisconnectionTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisconnectionTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool ControllingBot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ControllingBot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControllingBot", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasControlledBotThisRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasControlledBotThisRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasControlledBotThisRound", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasBeenControlledByPlayerThisRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenControlledByPlayerThisRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenControlledByPlayerThisRound", CallKind.ClassMember, m_classData, value); }
            }
            public int BotsControlledThisRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "BotsControlledThisRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BotsControlledThisRound", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanControlObservedBot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanControlObservedBot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanControlObservedBot", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn PlayerPawn
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "PlayerPawn", CallKind.ClassMember, m_classData); }
            }
            public CCSObserverPawn ObserverPawn
            {
                get { return Invoker.CallNative<CCSObserverPawn>("SDKClass", "ObserverPawn", CallKind.ClassMember, m_classData); }
            }
            public int DesiredObserverMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "DesiredObserverMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredObserverMode", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance DesiredObserverTarget
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "DesiredObserverTarget", CallKind.ClassMember, m_classData); }
            }
            public bool PawnIsAlive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PawnIsAlive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnIsAlive", CallKind.ClassMember, m_classData, value); }
            }
            public uint PawnHealth
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PawnHealth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnHealth", CallKind.ClassMember, m_classData, value); }
            }
            public int PawnArmor
            {
                get { return Invoker.CallNative<int>("SDKClass", "PawnArmor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnArmor", CallKind.ClassMember, m_classData, value); }
            }
            public bool PawnHasDefuser
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PawnHasDefuser", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnHasDefuser", CallKind.ClassMember, m_classData, value); }
            }
            public bool PawnHasHelmet
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PawnHasHelmet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnHasHelmet", CallKind.ClassMember, m_classData, value); }
            }
            public ushort PawnCharacterDefIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "PawnCharacterDefIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnCharacterDefIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int PawnLifetimeStart
            {
                get { return Invoker.CallNative<int>("SDKClass", "PawnLifetimeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnLifetimeStart", CallKind.ClassMember, m_classData, value); }
            }
            public int PawnLifetimeEnd
            {
                get { return Invoker.CallNative<int>("SDKClass", "PawnLifetimeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnLifetimeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public int PawnBotDifficulty
            {
                get { return Invoker.CallNative<int>("SDKClass", "PawnBotDifficulty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PawnBotDifficulty", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerController OriginalControllerOfCurrentPawn
            {
                get { return Invoker.CallNative<CCSPlayerController>("SDKClass", "OriginalControllerOfCurrentPawn", CallKind.ClassMember, m_classData); }
            }
            public int Score
            {
                get { return Invoker.CallNative<int>("SDKClass", "Score", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Score", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundScore
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundScore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundScore", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundsWon
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundsWon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundsWon", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] RecentKillQueue
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "RecentKillQueue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecentKillQueue", CallKind.ClassMember, m_classData, value); }
            }
            public byte FirstKill
            {
                get { return Invoker.CallNative<byte>("SDKClass", "FirstKill", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstKill", CallKind.ClassMember, m_classData, value); }
            }
            public byte KillCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "KillCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KillCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool MvpNoMusic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MvpNoMusic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MvpNoMusic", CallKind.ClassMember, m_classData, value); }
            }
            public int MvpReason
            {
                get { return Invoker.CallNative<int>("SDKClass", "MvpReason", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MvpReason", CallKind.ClassMember, m_classData, value); }
            }
            public int MusicKitID
            {
                get { return Invoker.CallNative<int>("SDKClass", "MusicKitID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MusicKitID", CallKind.ClassMember, m_classData, value); }
            }
            public int MusicKitMVPs
            {
                get { return Invoker.CallNative<int>("SDKClass", "MusicKitMVPs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MusicKitMVPs", CallKind.ClassMember, m_classData, value); }
            }
            public int MVPs
            {
                get { return Invoker.CallNative<int>("SDKClass", "MVPs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MVPs", CallKind.ClassMember, m_classData, value); }
            }
            public int UpdateCounter
            {
                get { return Invoker.CallNative<int>("SDKClass", "UpdateCounter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdateCounter", CallKind.ClassMember, m_classData, value); }
            }
            public float SmoothedPing
            {
                get { return Invoker.CallNative<float>("SDKClass", "SmoothedPing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothedPing", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer LastHeldVoteTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "LastHeldVoteTimer", CallKind.ClassMember, m_classData); }
            }
            public bool ShowHints
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShowHints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShowHints", CallKind.ClassMember, m_classData, value); }
            }
            public int NextTimeCheck
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextTimeCheck", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextTimeCheck", CallKind.ClassMember, m_classData, value); }
            }
            public bool JustDidTeamKill
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JustDidTeamKill", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JustDidTeamKill", CallKind.ClassMember, m_classData, value); }
            }
            public bool PunishForTeamKill
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PunishForTeamKill", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PunishForTeamKill", CallKind.ClassMember, m_classData, value); }
            }
            public bool GaveTeamDamageWarning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GaveTeamDamageWarning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GaveTeamDamageWarning", CallKind.ClassMember, m_classData, value); }
            }
            public bool GaveTeamDamageWarningThisRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GaveTeamDamageWarningThisRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GaveTeamDamageWarningThisRound", CallKind.ClassMember, m_classData, value); }
            }
            public double DblLastReceivedPacketPlatFloatTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "DblLastReceivedPacketPlatFloatTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DblLastReceivedPacketPlatFloatTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTeamDamageWarningTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTeamDamageWarningTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTeamDamageWarningTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTimePlayerWasDisconnectedForPawnsRemove
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTimePlayerWasDisconnectedForPawnsRemove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTimePlayerWasDisconnectedForPawnsRemove", CallKind.ClassMember, m_classData, value); }
            }
            public uint SuspiciousHitCount
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SuspiciousHitCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuspiciousHitCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint NonSuspiciousHitStreak
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NonSuspiciousHitStreak", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NonSuspiciousHitStreak", CallKind.ClassMember, m_classData, value); }
            }
            public bool FireBulletsSeedSynchronized
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FireBulletsSeedSynchronized", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireBulletsSeedSynchronized", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerController Parent
            {
                get { return Invoker.CallNative<CBasePlayerController>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerController_ActionTrackingServices : CPlayerControllerComponent
        {
            public CCSPlayerController_ActionTrackingServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_ActionTrackingServices", "CCSPlayerController_ActionTrackingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_ActionTrackingServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_ActionTrackingServices", "CCSPlayerController_ActionTrackingServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_ActionTrackingServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSMatchStats_t MatchStats
            {
                get { return Invoker.CallNative<CSMatchStats_t>("SDKClass", "MatchStats", CallKind.ClassMember, m_classData); }
            }
            public int NumRoundKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumRoundKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumRoundKills", CallKind.ClassMember, m_classData, value); }
            }
            public int NumRoundKillsHeadshots
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumRoundKillsHeadshots", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumRoundKillsHeadshots", CallKind.ClassMember, m_classData, value); }
            }
            public uint TotalRoundDamageDealt
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TotalRoundDamageDealt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalRoundDamageDealt", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerControllerComponent Parent
            {
                get { return Invoker.CallNative<CPlayerControllerComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerController_DamageServices : CPlayerControllerComponent
        {
            public CCSPlayerController_DamageServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_DamageServices", "CCSPlayerController_DamageServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_DamageServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_DamageServices", "CCSPlayerController_DamageServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_DamageServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SendUpdate
            {
                get { return Invoker.CallNative<int>("SDKClass", "SendUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SendUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerControllerComponent Parent
            {
                get { return Invoker.CallNative<CPlayerControllerComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerController_InGameMoneyServices : CPlayerControllerComponent
        {
            public CCSPlayerController_InGameMoneyServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_InGameMoneyServices", "CCSPlayerController_InGameMoneyServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_InGameMoneyServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_InGameMoneyServices", "CCSPlayerController_InGameMoneyServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_InGameMoneyServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ReceivesMoneyNextRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ReceivesMoneyNextRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReceivesMoneyNextRound", CallKind.ClassMember, m_classData, value); }
            }
            public int MoneyEarnedForNextRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "MoneyEarnedForNextRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoneyEarnedForNextRound", CallKind.ClassMember, m_classData, value); }
            }
            public int Account
            {
                get { return Invoker.CallNative<int>("SDKClass", "Account", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Account", CallKind.ClassMember, m_classData, value); }
            }
            public int StartAccount
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartAccount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartAccount", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalCashSpent
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalCashSpent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalCashSpent", CallKind.ClassMember, m_classData, value); }
            }
            public int CashSpentThisRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "CashSpentThisRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CashSpentThisRound", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerControllerComponent Parent
            {
                get { return Invoker.CallNative<CPlayerControllerComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerController_InventoryServices : CPlayerControllerComponent
        {
            public CCSPlayerController_InventoryServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_InventoryServices", "CCSPlayerController_InventoryServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_InventoryServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerController_InventoryServices", "CCSPlayerController_InventoryServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerController_InventoryServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort MusicID
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "MusicID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MusicID", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] Rank
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Rank", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rank", CallKind.ClassMember, m_classData, value); }
            }
            public int PersonaDataPublicLevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "PersonaDataPublicLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersonaDataPublicLevel", CallKind.ClassMember, m_classData, value); }
            }
            public int PersonaDataPublicCommendsLeader
            {
                get { return Invoker.CallNative<int>("SDKClass", "PersonaDataPublicCommendsLeader", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersonaDataPublicCommendsLeader", CallKind.ClassMember, m_classData, value); }
            }
            public int PersonaDataPublicCommendsTeacher
            {
                get { return Invoker.CallNative<int>("SDKClass", "PersonaDataPublicCommendsTeacher", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersonaDataPublicCommendsTeacher", CallKind.ClassMember, m_classData, value); }
            }
            public int PersonaDataPublicCommendsFriendly
            {
                get { return Invoker.CallNative<int>("SDKClass", "PersonaDataPublicCommendsFriendly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersonaDataPublicCommendsFriendly", CallKind.ClassMember, m_classData, value); }
            }
            public int PersonaDataXpTrailLevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "PersonaDataXpTrailLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersonaDataXpTrailLevel", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] EquippedPlayerSprayIDs
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "EquippedPlayerSprayIDs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EquippedPlayerSprayIDs", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerControllerComponent Parent
            {
                get { return Invoker.CallNative<CPlayerControllerComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerPawn : CCSPlayerPawnBase
        {
            public CCSPlayerPawn(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerPawn", "CCSPlayerPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerPawn(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerPawn", "CCSPlayerPawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerPawn()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] BulletServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BulletServices", CallKind.ClassMember, m_classData); }
            }
            public int[] HostageServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "HostageServices", CallKind.ClassMember, m_classData); }
            }
            public int[] BuyServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BuyServices", CallKind.ClassMember, m_classData); }
            }
            public int[] ActionTrackingServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ActionTrackingServices", CallKind.ClassMember, m_classData); }
            }
            public int[] RadioServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "RadioServices", CallKind.ClassMember, m_classData); }
            }
            public int[] DamageReactServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "DamageReactServices", CallKind.ClassMember, m_classData); }
            }
            public ushort CharacterDefIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CharacterDefIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CharacterDefIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasFemaleVoice
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasFemaleVoice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasFemaleVoice", CallKind.ClassMember, m_classData, value); }
            }
            public string StrVOPrefix
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrVOPrefix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrVOPrefix", CallKind.ClassMember, m_classData, value); }
            }
            public string LastPlaceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LastPlaceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPlaceName", CallKind.ClassMember, m_classData, value); }
            }
            public bool InHostageResetZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InHostageResetZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InHostageResetZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool InBuyZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InBuyZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InBuyZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasInBuyZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasInBuyZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasInBuyZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool InHostageRescueZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InHostageRescueZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InHostageRescueZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool InBombZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InBombZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InBombZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasInHostageRescueZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasInHostageRescueZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasInHostageRescueZone", CallKind.ClassMember, m_classData, value); }
            }
            public int RetakesOffering
            {
                get { return Invoker.CallNative<int>("SDKClass", "RetakesOffering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesOffering", CallKind.ClassMember, m_classData, value); }
            }
            public int RetakesOfferingCard
            {
                get { return Invoker.CallNative<int>("SDKClass", "RetakesOfferingCard", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesOfferingCard", CallKind.ClassMember, m_classData, value); }
            }
            public bool RetakesHasDefuseKit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RetakesHasDefuseKit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesHasDefuseKit", CallKind.ClassMember, m_classData, value); }
            }
            public bool RetakesMVPLastRound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RetakesMVPLastRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesMVPLastRound", CallKind.ClassMember, m_classData, value); }
            }
            public int RetakesMVPBoostItem
            {
                get { return Invoker.CallNative<int>("SDKClass", "RetakesMVPBoostItem", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesMVPBoostItem", CallKind.ClassMember, m_classData, value); }
            }
            public uint RetakesMVPBoostExtraUtility
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RetakesMVPBoostExtraUtility", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetakesMVPBoostExtraUtility", CallKind.ClassMember, m_classData, value); }
            }
            public float HealthShotBoostExpirationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "HealthShotBoostExpirationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthShotBoostExpirationTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LandingTimeSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "LandingTimeSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LandingTimeSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AimPunchAngle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AimPunchAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimPunchAngle", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AimPunchAngleVel
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AimPunchAngleVel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimPunchAngleVel", CallKind.ClassMember, m_classData, value); }
            }
            public int AimPunchTickBase
            {
                get { return Invoker.CallNative<int>("SDKClass", "AimPunchTickBase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimPunchTickBase", CallKind.ClassMember, m_classData, value); }
            }
            public float AimPunchTickFraction
            {
                get { return Invoker.CallNative<float>("SDKClass", "AimPunchTickFraction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimPunchTickFraction", CallKind.ClassMember, m_classData, value); }
            }
            public Color[] AimPunchCache
            {
                get { return Invoker.CallNative<Color[]>("SDKClass", "AimPunchCache", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimPunchCache", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsBuyMenuOpen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBuyMenuOpen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBuyMenuOpen", CallKind.ClassMember, m_classData, value); }
            }
            public bool LastHeadBoneTransformIsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LastHeadBoneTransformIsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHeadBoneTransformIsValid", CallKind.ClassMember, m_classData, value); }
            }
            public float LastLandTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastLandTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastLandTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnGroundLastTick
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnGroundLastTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnGroundLastTick", CallKind.ClassMember, m_classData, value); }
            }
            public int PlayerLocked
            {
                get { return Invoker.CallNative<int>("SDKClass", "PlayerLocked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerLocked", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeOfLastInjury
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeOfLastInjury", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeOfLastInjury", CallKind.ClassMember, m_classData, value); }
            }
            public float NextSprayDecalTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextSprayDecalTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSprayDecalTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool NextSprayDecalTimeExpedited
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NextSprayDecalTimeExpedited", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSprayDecalTimeExpedited", CallKind.ClassMember, m_classData, value); }
            }
            public int RagdollDamageBone
            {
                get { return Invoker.CallNative<int>("SDKClass", "RagdollDamageBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollDamageBone", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RagdollDamageForce
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RagdollDamageForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollDamageForce", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RagdollDamagePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RagdollDamagePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollDamagePosition", CallKind.ClassMember, m_classData, value); }
            }
            public string RagdollDamageWeaponName
            {
                get { return Invoker.CallNative<string>("SDKClass", "RagdollDamageWeaponName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollDamageWeaponName", CallKind.ClassMember, m_classData, value); }
            }
            public bool RagdollDamageHeadshot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RagdollDamageHeadshot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollDamageHeadshot", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RagdollServerOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RagdollServerOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollServerOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public CEconItemView EconGloves
            {
                get { return Invoker.CallNative<CEconItemView>("SDKClass", "EconGloves", CallKind.ClassMember, m_classData); }
            }
            public byte EconGlovesChanged
            {
                get { return Invoker.CallNative<byte>("SDKClass", "EconGlovesChanged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EconGlovesChanged", CallKind.ClassMember, m_classData, value); }
            }
            public Vector DeathEyeAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "DeathEyeAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathEyeAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkipOneHeadConstraintUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkipOneHeadConstraintUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkipOneHeadConstraintUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public bool LeftHanded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LeftHanded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LeftHanded", CallKind.ClassMember, m_classData, value); }
            }
            public float SwitchedHandednessTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwitchedHandednessTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwitchedHandednessTime", CallKind.ClassMember, m_classData, value); }
            }
            public float ViewmodelOffsetX
            {
                get { return Invoker.CallNative<float>("SDKClass", "ViewmodelOffsetX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewmodelOffsetX", CallKind.ClassMember, m_classData, value); }
            }
            public float ViewmodelOffsetY
            {
                get { return Invoker.CallNative<float>("SDKClass", "ViewmodelOffsetY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewmodelOffsetY", CallKind.ClassMember, m_classData, value); }
            }
            public float ViewmodelOffsetZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "ViewmodelOffsetZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewmodelOffsetZ", CallKind.ClassMember, m_classData, value); }
            }
            public float ViewmodelFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "ViewmodelFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewmodelFOV", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsWalking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsWalking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsWalking", CallKind.ClassMember, m_classData, value); }
            }
            public float LastGivenDefuserTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastGivenDefuserTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastGivenDefuserTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastGivenBombTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastGivenBombTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastGivenBombTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DealtDamageToEnemyMostRecentTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "DealtDamageToEnemyMostRecentTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DealtDamageToEnemyMostRecentTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public uint DisplayHistoryBits
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DisplayHistoryBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisplayHistoryBits", CallKind.ClassMember, m_classData, value); }
            }
            public float LastAttackedTeammate
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastAttackedTeammate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAttackedTeammate", CallKind.ClassMember, m_classData, value); }
            }
            public float AllowAutoFollowTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AllowAutoFollowTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowAutoFollowTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetArmorNextSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetArmorNextSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetArmorNextSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public int LastKillerIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastKillerIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastKillerIndex", CallKind.ClassMember, m_classData, value); }
            }
            public EntitySpottedState_t EntitySpottedState
            {
                get { return Invoker.CallNative<EntitySpottedState_t>("SDKClass", "EntitySpottedState", CallKind.ClassMember, m_classData); }
            }
            public int SpotRules
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotRules", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRules", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsScoped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsScoped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsScoped", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResumeZoom
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResumeZoom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResumeZoom", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsDefusing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsDefusing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsDefusing", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsGrabbingHostage
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsGrabbingHostage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsGrabbingHostage", CallKind.ClassMember, m_classData, value); }
            }
            public uint BlockingUseActionInProgress
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlockingUseActionInProgress", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockingUseActionInProgress", CallKind.ClassMember, m_classData, value); }
            }
            public float EmitSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "EmitSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EmitSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool InNoDefuseArea
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InNoDefuseArea", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InNoDefuseArea", CallKind.ClassMember, m_classData, value); }
            }
            public int BombSiteIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BombSiteIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombSiteIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int WhichBombZone
            {
                get { return Invoker.CallNative<int>("SDKClass", "WhichBombZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhichBombZone", CallKind.ClassMember, m_classData, value); }
            }
            public bool InBombZoneTrigger
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InBombZoneTrigger", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InBombZoneTrigger", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasInBombZoneTrigger
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasInBombZoneTrigger", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasInBombZoneTrigger", CallKind.ClassMember, m_classData, value); }
            }
            public int ShotsFired
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShotsFired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShotsFired", CallKind.ClassMember, m_classData, value); }
            }
            public float FlinchStack
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlinchStack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlinchStack", CallKind.ClassMember, m_classData, value); }
            }
            public float VelocityModifier
            {
                get { return Invoker.CallNative<float>("SDKClass", "VelocityModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VelocityModifier", CallKind.ClassMember, m_classData, value); }
            }
            public float HitHeading
            {
                get { return Invoker.CallNative<float>("SDKClass", "HitHeading", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitHeading", CallKind.ClassMember, m_classData, value); }
            }
            public int HitBodyPart
            {
                get { return Invoker.CallNative<int>("SDKClass", "HitBodyPart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitBodyPart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TotalBulletForce
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TotalBulletForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalBulletForce", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitForNoAttack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitForNoAttack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitForNoAttack", CallKind.ClassMember, m_classData, value); }
            }
            public float IgnoreLadderJumpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "IgnoreLadderJumpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreLadderJumpTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool KilledByHeadshot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "KilledByHeadshot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KilledByHeadshot", CallKind.ClassMember, m_classData, value); }
            }
            public int LastHitBox
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastHitBox", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHitBox", CallKind.ClassMember, m_classData, value); }
            }
            public int LastHealth
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastHealth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHealth", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Bot
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Bot", CallKind.ClassMember, m_classData); }
            }
            public bool BotAllowActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BotAllowActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BotAllowActive", CallKind.ClassMember, m_classData, value); }
            }
            public Vector ThirdPersonHeading
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "ThirdPersonHeading", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThirdPersonHeading", CallKind.ClassMember, m_classData, value); }
            }
            public float SlopeDropOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "SlopeDropOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlopeDropOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float SlopeDropHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "SlopeDropHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlopeDropHeight", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HeadConstraintOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HeadConstraintOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeadConstraintOffset", CallKind.ClassMember, m_classData, value); }
            }
            public int LastPickupPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastPickupPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPickupPriority", CallKind.ClassMember, m_classData, value); }
            }
            public float LastPickupPriorityTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastPickupPriorityTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPickupPriorityTime", CallKind.ClassMember, m_classData, value); }
            }
            public int ArmorValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "ArmorValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ArmorValue", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CurrentEquipmentValue
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CurrentEquipmentValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentEquipmentValue", CallKind.ClassMember, m_classData, value); }
            }
            public ushort RoundStartEquipmentValue
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RoundStartEquipmentValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundStartEquipmentValue", CallKind.ClassMember, m_classData, value); }
            }
            public ushort FreezetimeEndEquipmentValue
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "FreezetimeEndEquipmentValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezetimeEndEquipmentValue", CallKind.ClassMember, m_classData, value); }
            }
            public int LastWeaponFireUsercmd
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastWeaponFireUsercmd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastWeaponFireUsercmd", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsSpawning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsSpawning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsSpawning", CallKind.ClassMember, m_classData, value); }
            }
            public int DeathFlags
            {
                get { return Invoker.CallNative<int>("SDKClass", "DeathFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathFlags", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasDeathInfo
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasDeathInfo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasDeathInfo", CallKind.ClassMember, m_classData, value); }
            }
            public float DeathInfoTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DeathInfoTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathInfoTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DeathInfoOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DeathInfoOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeathInfoOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] PlayerPatchEconIndices
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "PlayerPatchEconIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerPatchEconIndices", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle GunGameImmunityColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "GunGameImmunityColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GunGameImmunityColor", CallKind.ClassMember, m_classData, value); }
            }
            public float GrenadeParameterStashTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GrenadeParameterStashTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrenadeParameterStashTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool GrenadeParametersStashed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GrenadeParametersStashed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrenadeParametersStashed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector StashedShootAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "StashedShootAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StashedShootAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StashedGrenadeThrowPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StashedGrenadeThrowPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StashedGrenadeThrowPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StashedVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StashedVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StashedVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] ShootAngleHistory
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "ShootAngleHistory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShootAngleHistory", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] ThrowPositionHistory
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "ThrowPositionHistory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrowPositionHistory", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] VelocityHistory
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "VelocityHistory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VelocityHistory", CallKind.ClassMember, m_classData, value); }
            }
            public int HighestAppliedDamageTagTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "HighestAppliedDamageTagTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HighestAppliedDamageTagTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool CommittingSuicideOnTeamChange
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CommittingSuicideOnTeamChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CommittingSuicideOnTeamChange", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasNotKilledNaturally
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasNotKilledNaturally", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasNotKilledNaturally", CallKind.ClassMember, m_classData, value); }
            }
            public float ImmuneToGunGameDamageTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ImmuneToGunGameDamageTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImmuneToGunGameDamageTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool GunGameImmunity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GunGameImmunity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GunGameImmunity", CallKind.ClassMember, m_classData, value); }
            }
            public float MolotovDamageTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MolotovDamageTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MolotovDamageTime", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawnBase Parent
            {
                get { return Invoker.CallNative<CCSPlayerPawnBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerPawnBase : CBasePlayerPawn
        {
            public CCSPlayerPawnBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerPawnBase", "CCSPlayerPawnBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerPawnBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerPawnBase", "CCSPlayerPawnBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerPawnBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CTouchExpansionComponent CTouchExpansionComponent
            {
                get { return Invoker.CallNative<CTouchExpansionComponent>("SDKClass", "CTouchExpansionComponent", CallKind.ClassMember, m_classData); }
            }
            public int[] PingServices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PingServices", CallKind.ClassMember, m_classData); }
            }
            public float BlindUntilTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlindUntilTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlindUntilTime", CallKind.ClassMember, m_classData, value); }
            }
            public float BlindStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlindStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlindStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint PlayerState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PlayerState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerState", CallKind.ClassMember, m_classData, value); }
            }
            public bool Respawning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Respawning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Respawning", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasMovedSinceSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasMovedSinceSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasMovedSinceSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public int NumSpawns
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumSpawns", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSpawns", CallKind.ClassMember, m_classData, value); }
            }
            public float IdleTimeSinceLastAction
            {
                get { return Invoker.CallNative<float>("SDKClass", "IdleTimeSinceLastAction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdleTimeSinceLastAction", CallKind.ClassMember, m_classData, value); }
            }
            public float NextRadarUpdateTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextRadarUpdateTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextRadarUpdateTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FlashDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlashDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlashDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float FlashMaxAlpha
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlashMaxAlpha", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlashMaxAlpha", CallKind.ClassMember, m_classData, value); }
            }
            public float ProgressBarStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProgressBarStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProgressBarStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public int ProgressBarDuration
            {
                get { return Invoker.CallNative<int>("SDKClass", "ProgressBarDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProgressBarDuration", CallKind.ClassMember, m_classData, value); }
            }
            public Vector EyeAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "EyeAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EyeAngles", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerController OriginalController
            {
                get { return Invoker.CallNative<CCSPlayerController>("SDKClass", "OriginalController", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerPawn Parent
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPlayerResource : CBaseEntity
        {
            public CCSPlayerResource(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerResource", "CCSPlayerResource", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerResource(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPlayerResource", "CCSPlayerResource", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPlayerResource()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool[] HostageAlive
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "HostageAlive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageAlive", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] IsHostageFollowingSomeone
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "IsHostageFollowingSomeone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHostageFollowingSomeone", CallKind.ClassMember, m_classData, value); }
            }
            public int[] HostageEntityIDs
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "HostageEntityIDs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageEntityIDs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BombsiteCenterA
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BombsiteCenterA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombsiteCenterA", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BombsiteCenterB
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BombsiteCenterB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombsiteCenterB", CallKind.ClassMember, m_classData, value); }
            }
            public int[] HostageRescueX
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "HostageRescueX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageRescueX", CallKind.ClassMember, m_classData, value); }
            }
            public int[] HostageRescueY
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "HostageRescueY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageRescueY", CallKind.ClassMember, m_classData, value); }
            }
            public int[] HostageRescueZ
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "HostageRescueZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageRescueZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool EndMatchNextMapAllVoted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EndMatchNextMapAllVoted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndMatchNextMapAllVoted", CallKind.ClassMember, m_classData, value); }
            }
            public bool FoundGoalPositions
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FoundGoalPositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FoundGoalPositions", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPointScriptEntity : CBaseEntity
        {
            public CCSPointScriptEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptEntity", "CCSPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptEntity", "CCSPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSPointScriptExtensions_CCSWeaponBaseVData : ClassData
        {
            public CCSPointScriptExtensions_CCSWeaponBaseVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_CCSWeaponBaseVData", "CCSPointScriptExtensions_CCSWeaponBaseVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_CCSWeaponBaseVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_CCSWeaponBaseVData", "CCSPointScriptExtensions_CCSWeaponBaseVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_CCSWeaponBaseVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSPointScriptExtensions_entity : ClassData
        {
            public CCSPointScriptExtensions_entity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_entity", "CCSPointScriptExtensions_entity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_entity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_entity", "CCSPointScriptExtensions_entity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_entity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSPointScriptExtensions_observer : ClassData
        {
            public CCSPointScriptExtensions_observer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_observer", "CCSPointScriptExtensions_observer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_observer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_observer", "CCSPointScriptExtensions_observer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_observer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSPointScriptExtensions_player : ClassData
        {
            public CCSPointScriptExtensions_player(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_player", "CCSPointScriptExtensions_player", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_player(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_player", "CCSPointScriptExtensions_player", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_player()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSPointScriptExtensions_player_controller : ClassData
        {
            public CCSPointScriptExtensions_player_controller(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_player_controller", "CCSPointScriptExtensions_player_controller", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_player_controller(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_player_controller", "CCSPointScriptExtensions_player_controller", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_player_controller()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSPointScriptExtensions_weapon_cs_base : ClassData
        {
            public CCSPointScriptExtensions_weapon_cs_base(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_weapon_cs_base", "CCSPointScriptExtensions_weapon_cs_base", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_weapon_cs_base(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSPointScriptExtensions_weapon_cs_base", "CCSPointScriptExtensions_weapon_cs_base", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSPointScriptExtensions_weapon_cs_base()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CCSServerPointScriptEntity : CCSPointScriptEntity
        {
            public CCSServerPointScriptEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSServerPointScriptEntity", "CCSServerPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSServerPointScriptEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSServerPointScriptEntity", "CCSServerPointScriptEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSServerPointScriptEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPointScriptEntity Parent
            {
                get { return Invoker.CallNative<CCSPointScriptEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSSprite : CSprite
        {
            public CCSSprite(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSSprite", "CCSSprite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSSprite(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSSprite", "CCSSprite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSSprite()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSprite Parent
            {
                get { return Invoker.CallNative<CSprite>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSTeam : CTeam
        {
            public CCSTeam(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSTeam", "CCSTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSTeam(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSTeam", "CCSTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSTeam()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int LastRecievedShorthandedRoundBonus
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastRecievedShorthandedRoundBonus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastRecievedShorthandedRoundBonus", CallKind.ClassMember, m_classData, value); }
            }
            public int ShorthandedRoundBonusStartRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShorthandedRoundBonusStartRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShorthandedRoundBonusStartRound", CallKind.ClassMember, m_classData, value); }
            }
            public bool Surrendered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Surrendered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Surrendered", CallKind.ClassMember, m_classData, value); }
            }
            public string TeamMatchStat
            {
                get { return Invoker.CallNative<string>("SDKClass", "TeamMatchStat", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamMatchStat", CallKind.ClassMember, m_classData, value); }
            }
            public int NumMapVictories
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumMapVictories", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumMapVictories", CallKind.ClassMember, m_classData, value); }
            }
            public int ScoreFirstHalf
            {
                get { return Invoker.CallNative<int>("SDKClass", "ScoreFirstHalf", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScoreFirstHalf", CallKind.ClassMember, m_classData, value); }
            }
            public int ScoreSecondHalf
            {
                get { return Invoker.CallNative<int>("SDKClass", "ScoreSecondHalf", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScoreSecondHalf", CallKind.ClassMember, m_classData, value); }
            }
            public int ScoreOvertime
            {
                get { return Invoker.CallNative<int>("SDKClass", "ScoreOvertime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScoreOvertime", CallKind.ClassMember, m_classData, value); }
            }
            public string ClanTeamname
            {
                get { return Invoker.CallNative<string>("SDKClass", "ClanTeamname", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClanTeamname", CallKind.ClassMember, m_classData, value); }
            }
            public uint ClanID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ClanID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClanID", CallKind.ClassMember, m_classData, value); }
            }
            public string TeamFlagImage
            {
                get { return Invoker.CallNative<string>("SDKClass", "TeamFlagImage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamFlagImage", CallKind.ClassMember, m_classData, value); }
            }
            public string TeamLogoImage
            {
                get { return Invoker.CallNative<string>("SDKClass", "TeamLogoImage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamLogoImage", CallKind.ClassMember, m_classData, value); }
            }
            public float NextResourceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextResourceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextResourceTime", CallKind.ClassMember, m_classData, value); }
            }
            public int LastUpdateSentAt
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastUpdateSentAt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastUpdateSentAt", CallKind.ClassMember, m_classData, value); }
            }
            public CTeam Parent
            {
                get { return Invoker.CallNative<CTeam>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSWeaponBase : CBasePlayerWeapon
        {
            public CCSWeaponBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBase", "CCSWeaponBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBase", "CCSWeaponBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Removeable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Removeable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Removeable", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ThirdPersonFireSequences
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ThirdPersonFireSequences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThirdPersonFireSequences", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentThirdPersonSequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentThirdPersonSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentThirdPersonSequence", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ThirdPersonSequences
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ThirdPersonSequences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThirdPersonSequences", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayerAmmoStockOnPickup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayerAmmoStockOnPickup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerAmmoStockOnPickup", CallKind.ClassMember, m_classData, value); }
            }
            public bool RequireUseToTouch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RequireUseToTouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RequireUseToTouch", CallKind.ClassMember, m_classData, value); }
            }
            public ushort WeaponGameplayAnimState
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "WeaponGameplayAnimState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponGameplayAnimState", CallKind.ClassMember, m_classData, value); }
            }
            public float WeaponGameplayAnimStateTimestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "WeaponGameplayAnimStateTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponGameplayAnimStateTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float InspectCancelCompleteTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "InspectCancelCompleteTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InspectCancelCompleteTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool InspectPending
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InspectPending", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InspectPending", CallKind.ClassMember, m_classData, value); }
            }
            public bool InspectShouldLoop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InspectShouldLoop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InspectShouldLoop", CallKind.ClassMember, m_classData, value); }
            }
            public int LastEmptySoundCmdNum
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastEmptySoundCmdNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastEmptySoundCmdNum", CallKind.ClassMember, m_classData, value); }
            }
            public bool FireOnEmpty
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FireOnEmpty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireOnEmpty", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPlayerPickup
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerPickup", CallKind.ClassMember, m_classData); }
            }
            public uint WeaponMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WeaponMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponMode", CallKind.ClassMember, m_classData, value); }
            }
            public float TurningInaccuracyDelta
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurningInaccuracyDelta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurningInaccuracyDelta", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TurningInaccuracyEyeDirLast
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TurningInaccuracyEyeDirLast", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurningInaccuracyEyeDirLast", CallKind.ClassMember, m_classData, value); }
            }
            public float TurningInaccuracy
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurningInaccuracy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurningInaccuracy", CallKind.ClassMember, m_classData, value); }
            }
            public float AccuracyPenalty
            {
                get { return Invoker.CallNative<float>("SDKClass", "AccuracyPenalty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccuracyPenalty", CallKind.ClassMember, m_classData, value); }
            }
            public float LastAccuracyUpdateTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastAccuracyUpdateTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAccuracyUpdateTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AccuracySmoothedForZoom
            {
                get { return Invoker.CallNative<float>("SDKClass", "AccuracySmoothedForZoom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccuracySmoothedForZoom", CallKind.ClassMember, m_classData, value); }
            }
            public int RecoilIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "RecoilIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoilIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool BurstMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BurstMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BurstMode", CallKind.ClassMember, m_classData, value); }
            }
            public int PostponeFireReadyTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "PostponeFireReadyTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostponeFireReadyTicks", CallKind.ClassMember, m_classData, value); }
            }
            public float PostponeFireReadyFrac
            {
                get { return Invoker.CallNative<float>("SDKClass", "PostponeFireReadyFrac", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostponeFireReadyFrac", CallKind.ClassMember, m_classData, value); }
            }
            public bool InReload
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InReload", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InReload", CallKind.ClassMember, m_classData, value); }
            }
            public float DisallowAttackAfterReloadStartUntilTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DisallowAttackAfterReloadStartUntilTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisallowAttackAfterReloadStartUntilTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DroppedAtTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DroppedAtTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DroppedAtTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsHauledBack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsHauledBack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsHauledBack", CallKind.ClassMember, m_classData, value); }
            }
            public bool SilencerOn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SilencerOn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SilencerOn", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeSilencerSwitchComplete
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeSilencerSwitchComplete", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeSilencerSwitchComplete", CallKind.ClassMember, m_classData, value); }
            }
            public int OriginalTeamNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "OriginalTeamNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalTeamNumber", CallKind.ClassMember, m_classData, value); }
            }
            public int MostRecentTeamNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "MostRecentTeamNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MostRecentTeamNumber", CallKind.ClassMember, m_classData, value); }
            }
            public bool DroppedNearBuyZone
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DroppedNearBuyZone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DroppedNearBuyZone", CallKind.ClassMember, m_classData, value); }
            }
            public float NextAttackRenderTimeOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextAttackRenderTimeOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextAttackRenderTimeOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanBePickedUp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanBePickedUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanBePickedUp", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseCanOverrideNextOwnerTouchTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseCanOverrideNextOwnerTouchTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCanOverrideNextOwnerTouchTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextOwnerTouchTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextOwnerTouchTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextOwnerTouchTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextPrevOwnerTouchTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextPrevOwnerTouchTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextPrevOwnerTouchTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextPrevOwnerUseTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextPrevOwnerUseTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextPrevOwnerUseTime", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn PrevOwner
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "PrevOwner", CallKind.ClassMember, m_classData); }
            }
            public int DropTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "DropTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DropTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasActiveWeaponWhenDropped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasActiveWeaponWhenDropped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasActiveWeaponWhenDropped", CallKind.ClassMember, m_classData, value); }
            }
            public bool Donated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Donated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Donated", CallKind.ClassMember, m_classData, value); }
            }
            public float LastShotTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastShotTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastShotTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasOwnedByCT
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasOwnedByCT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasOwnedByCT", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasOwnedByTerrorist
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasOwnedByTerrorist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasOwnedByTerrorist", CallKind.ClassMember, m_classData, value); }
            }
            public int NumRemoveUnownedWeaponThink
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumRemoveUnownedWeaponThink", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumRemoveUnownedWeaponThink", CallKind.ClassMember, m_classData, value); }
            }
            public CIronSightController IronSightController
            {
                get { return Invoker.CallNative<CIronSightController>("SDKClass", "IronSightController", CallKind.ClassMember, m_classData); }
            }
            public int IronSightMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "IronSightMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightMode", CallKind.ClassMember, m_classData, value); }
            }
            public float LastLOSTraceFailureTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastLOSTraceFailureTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastLOSTraceFailureTime", CallKind.ClassMember, m_classData, value); }
            }
            public float WatTickOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "WatTickOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WatTickOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerWeapon Parent
            {
                get { return Invoker.CallNative<CBasePlayerWeapon>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSWeaponBaseGun : CCSWeaponBase
        {
            public CCSWeaponBaseGun(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBaseGun", "CCSWeaponBaseGun", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBaseGun(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBaseGun", "CCSWeaponBaseGun", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBaseGun()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ZoomLevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "ZoomLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZoomLevel", CallKind.ClassMember, m_classData, value); }
            }
            public int BurstShotsRemaining
            {
                get { return Invoker.CallNative<int>("SDKClass", "BurstShotsRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BurstShotsRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public int SilencedModelIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SilencedModelIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SilencedModelIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool InPrecache
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InPrecache", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InPrecache", CallKind.ClassMember, m_classData, value); }
            }
            public bool NeedsBoltAction
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NeedsBoltAction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeedsBoltAction", CallKind.ClassMember, m_classData, value); }
            }
            public int RevolverCylinderIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "RevolverCylinderIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RevolverCylinderIdx", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkillReloadAvailable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkillReloadAvailable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkillReloadAvailable", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkillReloadLiftedReloadKey
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkillReloadLiftedReloadKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkillReloadLiftedReloadKey", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkillBoltInterruptAvailable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkillBoltInterruptAvailable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkillBoltInterruptAvailable", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkillBoltLiftedFireKey
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkillBoltLiftedFireKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkillBoltLiftedFireKey", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCSWeaponBaseVData : CBasePlayerWeaponVData
        {
            public CCSWeaponBaseVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBaseVData", "CCSWeaponBaseVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBaseVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCSWeaponBaseVData", "CCSWeaponBaseVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCSWeaponBaseVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint WeaponType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WeaponType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponType", CallKind.ClassMember, m_classData, value); }
            }
            public uint WeaponCategory
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WeaponCategory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponCategory", CallKind.ClassMember, m_classData, value); }
            }
            public uint GearSlot
            {
                get { return Invoker.CallNative<uint>("SDKClass", "GearSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GearSlot", CallKind.ClassMember, m_classData, value); }
            }
            public int GearSlotPosition
            {
                get { return Invoker.CallNative<int>("SDKClass", "GearSlotPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GearSlotPosition", CallKind.ClassMember, m_classData, value); }
            }
            public uint DefaultLoadoutSlot
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DefaultLoadoutSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultLoadoutSlot", CallKind.ClassMember, m_classData, value); }
            }
            public int Price
            {
                get { return Invoker.CallNative<int>("SDKClass", "Price", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Price", CallKind.ClassMember, m_classData, value); }
            }
            public int KillAward
            {
                get { return Invoker.CallNative<int>("SDKClass", "KillAward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KillAward", CallKind.ClassMember, m_classData, value); }
            }
            public int PrimaryReserveAmmoMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "PrimaryReserveAmmoMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrimaryReserveAmmoMax", CallKind.ClassMember, m_classData, value); }
            }
            public int SecondaryReserveAmmoMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "SecondaryReserveAmmoMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SecondaryReserveAmmoMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool MeleeWeapon
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MeleeWeapon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeleeWeapon", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasBurstMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBurstMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBurstMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRevolver
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRevolver", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRevolver", CallKind.ClassMember, m_classData, value); }
            }
            public bool CannotShootUnderwater
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CannotShootUnderwater", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CannotShootUnderwater", CallKind.ClassMember, m_classData, value); }
            }
            public uint SilencerType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SilencerType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SilencerType", CallKind.ClassMember, m_classData, value); }
            }
            public int CrosshairMinDistance
            {
                get { return Invoker.CallNative<int>("SDKClass", "CrosshairMinDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrosshairMinDistance", CallKind.ClassMember, m_classData, value); }
            }
            public int CrosshairDeltaDistance
            {
                get { return Invoker.CallNative<int>("SDKClass", "CrosshairDeltaDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrosshairDeltaDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsFullAuto
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsFullAuto", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsFullAuto", CallKind.ClassMember, m_classData, value); }
            }
            public int NumBullets
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumBullets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBullets", CallKind.ClassMember, m_classData, value); }
            }
            public bool ReloadsSingleShells
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ReloadsSingleShells", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReloadsSingleShells", CallKind.ClassMember, m_classData, value); }
            }
            public CFiringModeFloat CycleTime
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "CycleTime", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat MaxSpeed
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "MaxSpeed", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat Spread
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "Spread", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyCrouch
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyCrouch", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyStand
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyStand", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyJump
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyJump", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyLand
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyLand", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyLadder
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyLadder", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyFire
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyFire", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat InaccuracyMove
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "InaccuracyMove", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat RecoilAngle
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "RecoilAngle", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat RecoilAngleVariance
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "RecoilAngleVariance", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat RecoilMagnitude
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "RecoilMagnitude", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeFloat RecoilMagnitudeVariance
            {
                get { return Invoker.CallNative<CFiringModeFloat>("SDKClass", "RecoilMagnitudeVariance", CallKind.ClassMember, m_classData); }
            }
            public CFiringModeInt TracerFrequency
            {
                get { return Invoker.CallNative<CFiringModeInt>("SDKClass", "TracerFrequency", CallKind.ClassMember, m_classData); }
            }
            public float InaccuracyJumpInitial
            {
                get { return Invoker.CallNative<float>("SDKClass", "InaccuracyJumpInitial", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InaccuracyJumpInitial", CallKind.ClassMember, m_classData, value); }
            }
            public float InaccuracyJumpApex
            {
                get { return Invoker.CallNative<float>("SDKClass", "InaccuracyJumpApex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InaccuracyJumpApex", CallKind.ClassMember, m_classData, value); }
            }
            public float InaccuracyReload
            {
                get { return Invoker.CallNative<float>("SDKClass", "InaccuracyReload", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InaccuracyReload", CallKind.ClassMember, m_classData, value); }
            }
            public float DeployDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "DeployDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeployDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float DisallowAttackAfterReloadStartDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "DisallowAttackAfterReloadStartDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisallowAttackAfterReloadStartDuration", CallKind.ClassMember, m_classData, value); }
            }
            public int RecoilSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "RecoilSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoilSeed", CallKind.ClassMember, m_classData, value); }
            }
            public int SpreadSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpreadSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpreadSeed", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackMovespeedFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackMovespeedFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackMovespeedFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float InaccuracyPitchShift
            {
                get { return Invoker.CallNative<float>("SDKClass", "InaccuracyPitchShift", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InaccuracyPitchShift", CallKind.ClassMember, m_classData, value); }
            }
            public float InaccuracyAltSoundThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "InaccuracyAltSoundThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InaccuracyAltSoundThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public string UseRadioSubtitle
            {
                get { return Invoker.CallNative<string>("SDKClass", "UseRadioSubtitle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseRadioSubtitle", CallKind.ClassMember, m_classData, value); }
            }
            public bool UnzoomsAfterShot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UnzoomsAfterShot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UnzoomsAfterShot", CallKind.ClassMember, m_classData, value); }
            }
            public bool HideViewModelWhenZoomed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HideViewModelWhenZoomed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HideViewModelWhenZoomed", CallKind.ClassMember, m_classData, value); }
            }
            public int ZoomLevels
            {
                get { return Invoker.CallNative<int>("SDKClass", "ZoomLevels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZoomLevels", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightPullUpSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightPullUpSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightPullUpSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightPutDownSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightPutDownSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightPutDownSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightFOV", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightPivotForward
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightPivotForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightPivotForward", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightLooseness
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightLooseness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightLooseness", CallKind.ClassMember, m_classData, value); }
            }
            public int Damage
            {
                get { return Invoker.CallNative<int>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public float HeadshotMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeadshotMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeadshotMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float ArmorRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "ArmorRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ArmorRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float Penetration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Penetration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Penetration", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public float RangeModifier
            {
                get { return Invoker.CallNative<float>("SDKClass", "RangeModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RangeModifier", CallKind.ClassMember, m_classData, value); }
            }
            public float FlinchVelocityModifierLarge
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlinchVelocityModifierLarge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlinchVelocityModifierLarge", CallKind.ClassMember, m_classData, value); }
            }
            public float FlinchVelocityModifierSmall
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlinchVelocityModifierSmall", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlinchVelocityModifierSmall", CallKind.ClassMember, m_classData, value); }
            }
            public float RecoveryTimeCrouch
            {
                get { return Invoker.CallNative<float>("SDKClass", "RecoveryTimeCrouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTimeCrouch", CallKind.ClassMember, m_classData, value); }
            }
            public float RecoveryTimeStand
            {
                get { return Invoker.CallNative<float>("SDKClass", "RecoveryTimeStand", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTimeStand", CallKind.ClassMember, m_classData, value); }
            }
            public float RecoveryTimeCrouchFinal
            {
                get { return Invoker.CallNative<float>("SDKClass", "RecoveryTimeCrouchFinal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTimeCrouchFinal", CallKind.ClassMember, m_classData, value); }
            }
            public float RecoveryTimeStandFinal
            {
                get { return Invoker.CallNative<float>("SDKClass", "RecoveryTimeStandFinal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTimeStandFinal", CallKind.ClassMember, m_classData, value); }
            }
            public int RecoveryTransitionStartBullet
            {
                get { return Invoker.CallNative<int>("SDKClass", "RecoveryTransitionStartBullet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTransitionStartBullet", CallKind.ClassMember, m_classData, value); }
            }
            public int RecoveryTransitionEndBullet
            {
                get { return Invoker.CallNative<int>("SDKClass", "RecoveryTransitionEndBullet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecoveryTransitionEndBullet", CallKind.ClassMember, m_classData, value); }
            }
            public float ThrowVelocity
            {
                get { return Invoker.CallNative<float>("SDKClass", "ThrowVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrowVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SmokeColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SmokeColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmokeColor", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerWeaponVData Parent
            {
                get { return Invoker.CallNative<CBasePlayerWeaponVData>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCurrentRotationVelocityMetricEvaluator : CMotionMetricEvaluator
        {
            public CCurrentRotationVelocityMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCurrentRotationVelocityMetricEvaluator", "CCurrentRotationVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCurrentRotationVelocityMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCurrentRotationVelocityMetricEvaluator", "CCurrentRotationVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCurrentRotationVelocityMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCurrentVelocityMetricEvaluator : CMotionMetricEvaluator
        {
            public CCurrentVelocityMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCurrentVelocityMetricEvaluator", "CCurrentVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCurrentVelocityMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCurrentVelocityMetricEvaluator", "CCurrentVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCurrentVelocityMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCycleBase : ClassData
        {
            public CCycleBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleBase", "CCycleBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleBase", "CCycleBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CCycleControlClipUpdateNode : CLeafUpdateNode
        {
            public CCycleControlClipUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleControlClipUpdateNode", "CCycleControlClipUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleControlClipUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleControlClipUpdateNode", "CCycleControlClipUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleControlClipUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public uint ValueSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ValueSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueSource", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CCycleControlUpdateNode : CUnaryUpdateNode
        {
            public CCycleControlUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleControlUpdateNode", "CCycleControlUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleControlUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CCycleControlUpdateNode", "CCycleControlUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CCycleControlUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ValueSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ValueSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueSource", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDamageRecord : ClassData
        {
            public CDamageRecord(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDamageRecord", "CDamageRecord", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDamageRecord(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDamageRecord", "CDamageRecord", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDamageRecord()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerPawn PlayerDamager
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "PlayerDamager", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawn PlayerRecipient
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "PlayerRecipient", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerController PlayerControllerDamager
            {
                get { return Invoker.CallNative<CCSPlayerController>("SDKClass", "PlayerControllerDamager", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerController PlayerControllerRecipient
            {
                get { return Invoker.CallNative<CCSPlayerController>("SDKClass", "PlayerControllerRecipient", CallKind.ClassMember, m_classData); }
            }
            public string PlayerDamagerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PlayerDamagerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDamagerName", CallKind.ClassMember, m_classData, value); }
            }
            public string PlayerRecipientName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PlayerRecipientName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerRecipientName", CallKind.ClassMember, m_classData, value); }
            }
            public ulong DamagerXuid
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "DamagerXuid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamagerXuid", CallKind.ClassMember, m_classData, value); }
            }
            public ulong RecipientXuid
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "RecipientXuid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecipientXuid", CallKind.ClassMember, m_classData, value); }
            }
            public int BulletsDamage
            {
                get { return Invoker.CallNative<int>("SDKClass", "BulletsDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BulletsDamage", CallKind.ClassMember, m_classData, value); }
            }
            public int Damage
            {
                get { return Invoker.CallNative<int>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public int ActualHealthRemoved
            {
                get { return Invoker.CallNative<int>("SDKClass", "ActualHealthRemoved", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActualHealthRemoved", CallKind.ClassMember, m_classData, value); }
            }
            public int NumHits
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumHits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumHits", CallKind.ClassMember, m_classData, value); }
            }
            public int LastBulletUpdate
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastBulletUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastBulletUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsOtherEnemy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOtherEnemy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOtherEnemy", CallKind.ClassMember, m_classData, value); }
            }
            public byte KillType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "KillType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KillType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDampedPathAnimMotorUpdater : CPathAnimMotorUpdaterBase
        {
            public CDampedPathAnimMotorUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedPathAnimMotorUpdater", "CDampedPathAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedPathAnimMotorUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedPathAnimMotorUpdater", "CDampedPathAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedPathAnimMotorUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AnticipationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnticipationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnticipationTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MinSpeedScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinSpeedScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinSpeedScale", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle AnticipationPosParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "AnticipationPosParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle AnticipationHeadingParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "AnticipationHeadingParam", CallKind.ClassMember, m_classData); }
            }
            public float SpringConstant
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData, value); }
            }
            public float MinSpringTension
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinSpringTension", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinSpringTension", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSpringTension
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSpringTension", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSpringTension", CallKind.ClassMember, m_classData, value); }
            }
            public CPathAnimMotorUpdaterBase Parent
            {
                get { return Invoker.CallNative<CPathAnimMotorUpdaterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDampedValueComponentUpdater : CAnimComponentUpdater
        {
            public CDampedValueComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedValueComponentUpdater", "CDampedValueComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedValueComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedValueComponentUpdater", "CDampedValueComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedValueComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDampedValueUpdateItem : ClassData
        {
            public CDampedValueUpdateItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedValueUpdateItem", "CDampedValueUpdateItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedValueUpdateItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDampedValueUpdateItem", "CDampedValueUpdateItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDampedValueUpdateItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParamIn
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIn", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParamOut
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamOut", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDEagle : CCSWeaponBaseGun
        {
            public CDEagle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDEagle", "CDEagle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDEagle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDEagle", "CDEagle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDEagle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDebugHistory : CBaseEntity
        {
            public CDebugHistory(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDebugHistory", "CDebugHistory", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDebugHistory(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDebugHistory", "CDebugHistory", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDebugHistory()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NpcEvents
            {
                get { return Invoker.CallNative<int>("SDKClass", "NpcEvents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NpcEvents", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDecalInfo : ClassData
        {
            public CDecalInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecalInfo", "CDecalInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecalInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecalInfo", "CDecalInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecalInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AnimationScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimationScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationScale", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimationLifeSpan
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimationLifeSpan", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationLifeSpan", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaceTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData, value); }
            }
            public int VBSlot
            {
                get { return Invoker.CallNative<int>("SDKClass", "VBSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VBSlot", CallKind.ClassMember, m_classData, value); }
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public float BoundingRadiusSqr
            {
                get { return Invoker.CallNative<float>("SDKClass", "BoundingRadiusSqr", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundingRadiusSqr", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
            public int[] Prev
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Prev", CallKind.ClassMember, m_classData); }
            }
            public int DecalMaterialIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DecalMaterialIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecalMaterialIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDecoyGrenade : CBaseCSGrenade
        {
            public CDecoyGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecoyGrenade", "CDecoyGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecoyGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecoyGrenade", "CDecoyGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecoyGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenade Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDecoyProjectile : CBaseCSGrenadeProjectile
        {
            public CDecoyProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecoyProjectile", "CDecoyProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecoyProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDecoyProjectile", "CDecoyProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDecoyProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DecoyShotTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "DecoyShotTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecoyShotTick", CallKind.ClassMember, m_classData, value); }
            }
            public int ShotsRemaining
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShotsRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShotsRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public float ExpireTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExpireTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExpireTime", CallKind.ClassMember, m_classData, value); }
            }
            public ushort DecoyWeaponDefIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "DecoyWeaponDefIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecoyWeaponDefIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseCSGrenadeProjectile Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenadeProjectile>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDemoSettingsComponentUpdater : CAnimComponentUpdater
        {
            public CDemoSettingsComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDemoSettingsComponentUpdater", "CDemoSettingsComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDemoSettingsComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDemoSettingsComponentUpdater", "CDemoSettingsComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDemoSettingsComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimDemoCaptureSettings Settings
            {
                get { return Invoker.CallNative<CAnimDemoCaptureSettings>("SDKClass", "Settings", CallKind.ClassMember, m_classData); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDestructiblePartsSystemComponent : ClassData
        {
            public CDestructiblePartsSystemComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemComponent", "CDestructiblePartsSystemComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemComponent", "CDestructiblePartsSystemComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
            public ushort[] DamageLevelTakenByHitGroup
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "DamageLevelTakenByHitGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageLevelTakenByHitGroup", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Owner
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public int LastHitDamageLevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastHitDamageLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastHitDamageLevel", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDestructiblePartsSystemData : ClassData
        {
            public CDestructiblePartsSystemData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData", "CDestructiblePartsSystemData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData", "CDestructiblePartsSystemData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRangeInt MinMaxNumberHitGroupsToDestroyWhenGibbing
            {
                get { return Invoker.CallNative<CRangeInt>("SDKClass", "MinMaxNumberHitGroupsToDestroyWhenGibbing", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDestructiblePartsSystemData_DamageLevel : ClassData
        {
            public CDestructiblePartsSystemData_DamageLevel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData_DamageLevel", "CDestructiblePartsSystemData_DamageLevel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData_DamageLevel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData_DamageLevel", "CDestructiblePartsSystemData_DamageLevel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData_DamageLevel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public int BodyGroupValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyGroupValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupValue", CallKind.ClassMember, m_classData, value); }
            }
            public CSkillInt Health
            {
                get { return Invoker.CallNative<CSkillInt>("SDKClass", "Health", CallKind.ClassMember, m_classData); }
            }
            public uint DamagePassthroughType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DamagePassthroughType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamagePassthroughType", CallKind.ClassMember, m_classData, value); }
            }
            public uint DestructionDeathBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DestructionDeathBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestructionDeathBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDestroyOnDeath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDestroyOnDeath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDestroyOnDeath", CallKind.ClassMember, m_classData, value); }
            }
            public CRangeFloat DeathDestroyTime
            {
                get { return Invoker.CallNative<CRangeFloat>("SDKClass", "DeathDestroyTime", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels : ClassData
        {
            public CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels", "CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels", "CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDestructiblePartsSystemData_HitGroupInfoAndDamageLevels()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint HitGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HitGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitGroup", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableHitGroupWhenDestroyed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableHitGroupWhenDestroyed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableHitGroupWhenDestroyed", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] OtherHitgroupsToDestroyWhenFullyDestructed
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "OtherHitgroupsToDestroyWhenFullyDestructed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OtherHitgroupsToDestroyWhenFullyDestructed", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyDestroyWhenGibbing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyDestroyWhenGibbing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyDestroyWhenGibbing", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDirectionalBlendUpdateNode : CLeafUpdateNode
        {
            public CDirectionalBlendUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectionalBlendUpdateNode", "CDirectionalBlendUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectionalBlendUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectionalBlendUpdateNode", "CDirectionalBlendUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectionalBlendUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Sequences
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Sequences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequences", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint BlendValueSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendValueSource", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public float PlaybackSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockBlendOnReset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBlendOnReset", CallKind.ClassMember, m_classData, value); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDirectPlaybackTagData : ClassData
        {
            public CDirectPlaybackTagData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectPlaybackTagData", "CDirectPlaybackTagData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectPlaybackTagData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectPlaybackTagData", "CDirectPlaybackTagData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectPlaybackTagData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SequenceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SequenceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDirectPlaybackUpdateNode : CUnaryUpdateNode
        {
            public CDirectPlaybackUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectPlaybackUpdateNode", "CDirectPlaybackUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectPlaybackUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDirectPlaybackUpdateNode", "CDirectPlaybackUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDirectPlaybackUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool FinishEarly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FinishEarly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FinishEarly", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetOnFinish
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetOnFinish", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetOnFinish", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDistanceRemainingMetricEvaluator : CMotionMetricEvaluator
        {
            public CDistanceRemainingMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDistanceRemainingMetricEvaluator", "CDistanceRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDistanceRemainingMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDistanceRemainingMetricEvaluator", "CDistanceRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDistanceRemainingMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MaxDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float MinDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float StartGoalFilterDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartGoalFilterDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartGoalFilterDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxGoalOvershootScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxGoalOvershootScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxGoalOvershootScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool FilterFixedMinDistance
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FilterFixedMinDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterFixedMinDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool FilterGoalDistance
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FilterGoalDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterGoalDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool FilterGoalOvershoot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FilterGoalOvershoot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterGoalOvershoot", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDrawCullingData : ClassData
        {
            public CDrawCullingData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDrawCullingData", "CDrawCullingData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDrawCullingData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDrawCullingData", "CDrawCullingData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDrawCullingData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short[] ConeAxis
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "ConeAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConeAxis", CallKind.ClassMember, m_classData, value); }
            }
            public char ConeCutoff
            {
                get { return Invoker.CallNative<char>("SDKClass", "ConeCutoff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConeCutoff", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDSPMixgroupModifier : ClassData
        {
            public CDSPMixgroupModifier(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDSPMixgroupModifier", "CDSPMixgroupModifier", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDSPMixgroupModifier(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDSPMixgroupModifier", "CDSPMixgroupModifier", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDSPMixgroupModifier()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Mixgroup
            {
                get { return Invoker.CallNative<string>("SDKClass", "Mixgroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mixgroup", CallKind.ClassMember, m_classData, value); }
            }
            public float Modifier
            {
                get { return Invoker.CallNative<float>("SDKClass", "Modifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Modifier", CallKind.ClassMember, m_classData, value); }
            }
            public float ModifierMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModifierMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModifierMin", CallKind.ClassMember, m_classData, value); }
            }
            public float SourceModifier
            {
                get { return Invoker.CallNative<float>("SDKClass", "SourceModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceModifier", CallKind.ClassMember, m_classData, value); }
            }
            public float SourceModifierMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "SourceModifierMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceModifierMin", CallKind.ClassMember, m_classData, value); }
            }
            public float ListenerReverbModifierWhenSourceReverbIsActive
            {
                get { return Invoker.CallNative<float>("SDKClass", "ListenerReverbModifierWhenSourceReverbIsActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ListenerReverbModifierWhenSourceReverbIsActive", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDSPPresetMixgroupModifierTable : ClassData
        {
            public CDSPPresetMixgroupModifierTable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDSPPresetMixgroupModifierTable", "CDSPPresetMixgroupModifierTable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDSPPresetMixgroupModifierTable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDSPPresetMixgroupModifierTable", "CDSPPresetMixgroupModifierTable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDSPPresetMixgroupModifierTable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CDspPresetModifierList : ClassData
        {
            public CDspPresetModifierList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDspPresetModifierList", "CDspPresetModifierList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDspPresetModifierList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDspPresetModifierList", "CDspPresetModifierList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDspPresetModifierList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string DspName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DspName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DspName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CDynamicLight : CBaseModelEntity
        {
            public CDynamicLight(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicLight", "CDynamicLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicLight(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicLight", "CDynamicLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicLight()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte ActualFlags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ActualFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActualFlags", CallKind.ClassMember, m_classData, value); }
            }
            public byte Flags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public byte LightStyle
            {
                get { return Invoker.CallNative<byte>("SDKClass", "LightStyle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightStyle", CallKind.ClassMember, m_classData, value); }
            }
            public bool On
            {
                get { return Invoker.CallNative<bool>("SDKClass", "On", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "On", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public int Exponent
            {
                get { return Invoker.CallNative<int>("SDKClass", "Exponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Exponent", CallKind.ClassMember, m_classData, value); }
            }
            public float InnerAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float OuterAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "OuterAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float SpotRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpotRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRadius", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDynamicNavConnectionsVolume : CTriggerMultiple
        {
            public CDynamicNavConnectionsVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicNavConnectionsVolume", "CDynamicNavConnectionsVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicNavConnectionsVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicNavConnectionsVolume", "CDynamicNavConnectionsVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicNavConnectionsVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ConnectionTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "ConnectionTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConnectionTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConnectionsEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConnectionsEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConnectionsEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetAreaSearchRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetAreaSearchRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetAreaSearchRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float UpdateDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "UpdateDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdateDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxConnectionDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxConnectionDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxConnectionDistance", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerMultiple Parent
            {
                get { return Invoker.CallNative<CTriggerMultiple>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDynamicProp : CBreakableProp
        {
            public CDynamicProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicProp", "CDynamicProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicProp", "CDynamicProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool CreateNavObstacle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData, value); }
            }
            public bool NavObstacleUpdatesOverridden
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NavObstacleUpdatesOverridden", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NavObstacleUpdatesOverridden", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseHitboxesForRenderBox
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseHitboxesForRenderBox", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseHitboxesForRenderBox", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseAnimGraph
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAnimGraph", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAnimGraph", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OutputAnimBegun
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputAnimBegun", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OutputAnimOver
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputAnimOver", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OutputAnimLoopCycleOver
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputAnimLoopCycleOver", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAnimReachedStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAnimReachedStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAnimReachedEnd
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAnimReachedEnd", CallKind.ClassMember, m_classData); }
            }
            public string IdleAnim
            {
                get { return Invoker.CallNative<string>("SDKClass", "IdleAnim", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdleAnim", CallKind.ClassMember, m_classData, value); }
            }
            public uint IdleAnimLoopMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "IdleAnimLoopMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdleAnimLoopMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool RandomizeCycle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RandomizeCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomizeCycle", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool FiredStartEndOutput
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FiredStartEndOutput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FiredStartEndOutput", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceNpcExclude
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateNonSolid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateNonSolid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateNonSolid", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsOverrideProp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOverrideProp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOverrideProp", CallKind.ClassMember, m_classData, value); }
            }
            public int InitialGlowState
            {
                get { return Invoker.CallNative<int>("SDKClass", "InitialGlowState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialGlowState", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRange
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRange", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRangeMin
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle GlowColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "GlowColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowColor", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowTeam", CallKind.ClassMember, m_classData, value); }
            }
            public CBreakableProp Parent
            {
                get { return Invoker.CallNative<CBreakableProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDynamicPropAlias_cable_dynamic : CDynamicProp
        {
            public CDynamicPropAlias_cable_dynamic(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_cable_dynamic", "CDynamicPropAlias_cable_dynamic", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_cable_dynamic(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_cable_dynamic", "CDynamicPropAlias_cable_dynamic", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_cable_dynamic()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDynamicPropAlias_dynamic_prop : CDynamicProp
        {
            public CDynamicPropAlias_dynamic_prop(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_dynamic_prop", "CDynamicPropAlias_dynamic_prop", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_dynamic_prop(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_dynamic_prop", "CDynamicPropAlias_dynamic_prop", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_dynamic_prop()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CDynamicPropAlias_prop_dynamic_override : CDynamicProp
        {
            public CDynamicPropAlias_prop_dynamic_override(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_prop_dynamic_override", "CDynamicPropAlias_prop_dynamic_override", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_prop_dynamic_override(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CDynamicPropAlias_prop_dynamic_override", "CDynamicPropAlias_prop_dynamic_override", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CDynamicPropAlias_prop_dynamic_override()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEconEntity : CBaseFlex
        {
            public CEconEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconEntity", "CEconEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconEntity", "CEconEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAttributeContainer AttributeManager
            {
                get { return Invoker.CallNative<CAttributeContainer>("SDKClass", "AttributeManager", CallKind.ClassMember, m_classData); }
            }
            public uint OriginalOwnerXuidLow
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OriginalOwnerXuidLow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalOwnerXuidLow", CallKind.ClassMember, m_classData, value); }
            }
            public uint OriginalOwnerXuidHigh
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OriginalOwnerXuidHigh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalOwnerXuidHigh", CallKind.ClassMember, m_classData, value); }
            }
            public int FallbackPaintKit
            {
                get { return Invoker.CallNative<int>("SDKClass", "FallbackPaintKit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallbackPaintKit", CallKind.ClassMember, m_classData, value); }
            }
            public int FallbackSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "FallbackSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallbackSeed", CallKind.ClassMember, m_classData, value); }
            }
            public float FallbackWear
            {
                get { return Invoker.CallNative<float>("SDKClass", "FallbackWear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallbackWear", CallKind.ClassMember, m_classData, value); }
            }
            public int FallbackStatTrak
            {
                get { return Invoker.CallNative<int>("SDKClass", "FallbackStatTrak", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallbackStatTrak", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity OldProvidee
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "OldProvidee", CallKind.ClassMember, m_classData); }
            }
            public int OldOwnerClass
            {
                get { return Invoker.CallNative<int>("SDKClass", "OldOwnerClass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldOwnerClass", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFlex Parent
            {
                get { return Invoker.CallNative<CBaseFlex>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEconItemAttribute : ClassData
        {
            public CEconItemAttribute(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconItemAttribute", "CEconItemAttribute", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconItemAttribute(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconItemAttribute", "CEconItemAttribute", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconItemAttribute()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort AttributeDefinitionIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "AttributeDefinitionIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeDefinitionIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public float InitialValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitialValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialValue", CallKind.ClassMember, m_classData, value); }
            }
            public int RefundableCurrency
            {
                get { return Invoker.CallNative<int>("SDKClass", "RefundableCurrency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefundableCurrency", CallKind.ClassMember, m_classData, value); }
            }
            public bool SetBonus
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SetBonus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SetBonus", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CEconItemView : IEconItemInterface
        {
            public CEconItemView(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconItemView", "CEconItemView", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconItemView(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconItemView", "CEconItemView", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconItemView()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort ItemDefinitionIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ItemDefinitionIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemDefinitionIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int EntityQuality
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntityQuality", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityQuality", CallKind.ClassMember, m_classData, value); }
            }
            public uint EntityLevel
            {
                get { return Invoker.CallNative<uint>("SDKClass", "EntityLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityLevel", CallKind.ClassMember, m_classData, value); }
            }
            public ulong ItemID
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ItemID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemID", CallKind.ClassMember, m_classData, value); }
            }
            public uint ItemIDHigh
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ItemIDHigh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemIDHigh", CallKind.ClassMember, m_classData, value); }
            }
            public uint ItemIDLow
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ItemIDLow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemIDLow", CallKind.ClassMember, m_classData, value); }
            }
            public uint AccountID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AccountID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccountID", CallKind.ClassMember, m_classData, value); }
            }
            public uint InventoryPosition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "InventoryPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InventoryPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool Initialized
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Initialized", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Initialized", CallKind.ClassMember, m_classData, value); }
            }
            public CAttributeList AttributeList
            {
                get { return Invoker.CallNative<CAttributeList>("SDKClass", "AttributeList", CallKind.ClassMember, m_classData); }
            }
            public CAttributeList NetworkedDynamicAttributes
            {
                get { return Invoker.CallNative<CAttributeList>("SDKClass", "NetworkedDynamicAttributes", CallKind.ClassMember, m_classData); }
            }
            public string CustomName
            {
                get { return Invoker.CallNative<string>("SDKClass", "CustomName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomName", CallKind.ClassMember, m_classData, value); }
            }
            public string CustomNameOverride
            {
                get { return Invoker.CallNative<string>("SDKClass", "CustomNameOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomNameOverride", CallKind.ClassMember, m_classData, value); }
            }
            public IEconItemInterface Parent
            {
                get { return Invoker.CallNative<IEconItemInterface>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEconWearable : CEconEntity
        {
            public CEconWearable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconWearable", "CEconWearable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconWearable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEconWearable", "CEconWearable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEconWearable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ForceSkin
            {
                get { return Invoker.CallNative<int>("SDKClass", "ForceSkin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceSkin", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlwaysAllow
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysAllow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysAllow", CallKind.ClassMember, m_classData, value); }
            }
            public CEconEntity Parent
            {
                get { return Invoker.CallNative<CEconEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEditableMotionGraph : CMotionGraph
        {
            public CEditableMotionGraph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEditableMotionGraph", "CEditableMotionGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEditableMotionGraph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEditableMotionGraph", "CEditableMotionGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEditableMotionGraph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionGraph Parent
            {
                get { return Invoker.CallNative<CMotionGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEffectData : ClassData
        {
            public CEffectData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEffectData", "CEffectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEffectData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEffectData", "CEffectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEffectData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Origin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Origin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Start
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Normal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Normal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Normal", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angles", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Entity
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public CEntityInstance OtherEntity
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "OtherEntity", CallKind.ClassMember, m_classData); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public float Magnitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public uint SurfaceProp
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SurfaceProp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceProp", CallKind.ClassMember, m_classData, value); }
            }
            public uint DamageType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageType", CallKind.ClassMember, m_classData, value); }
            }
            public byte Penetrate
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Penetrate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Penetrate", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Material
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Material", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Material", CallKind.ClassMember, m_classData, value); }
            }
            public ushort HitBox
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "HitBox", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitBox", CallKind.ClassMember, m_classData, value); }
            }
            public byte Color
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public byte Flags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachmentName
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public ushort EffectName
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "EffectName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectName", CallKind.ClassMember, m_classData, value); }
            }
            public byte ExplosionType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ExplosionType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplosionType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CEmitTagActionUpdater : CAnimActionUpdater
        {
            public CEmitTagActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEmitTagActionUpdater", "CEmitTagActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEmitTagActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEmitTagActionUpdater", "CEmitTagActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEmitTagActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsZeroDuration
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsZeroDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsZeroDuration", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimActionUpdater Parent
            {
                get { return Invoker.CallNative<CAnimActionUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEmptyEntityInstance : ClassData
        {
            public CEmptyEntityInstance(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEmptyEntityInstance", "CEmptyEntityInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEmptyEntityInstance(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEmptyEntityInstance", "CEmptyEntityInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEmptyEntityInstance()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CEnableMotionFixup : CBaseEntity
        {
            public CEnableMotionFixup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnableMotionFixup", "CEnableMotionFixup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnableMotionFixup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnableMotionFixup", "CEnableMotionFixup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnableMotionFixup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityBlocker : CBaseModelEntity
        {
            public CEntityBlocker(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityBlocker", "CEntityBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityBlocker(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityBlocker", "CEntityBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityBlocker()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityComponent : ClassData
        {
            public CEntityComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityComponent", "CEntityComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityComponent", "CEntityComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CEntityComponentHelper : ClassData
        {
            public CEntityComponentHelper(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityComponentHelper", "CEntityComponentHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityComponentHelper(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityComponentHelper", "CEntityComponentHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityComponentHelper()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Info
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Info", CallKind.ClassMember, m_classData); }
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityDissolve : CBaseModelEntity
        {
            public CEntityDissolve(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityDissolve", "CEntityDissolve", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityDissolve(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityDissolve", "CEntityDissolve", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityDissolve()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeInStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeInLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInLength", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutModelStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutModelStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutModelStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutModelLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutModelLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutModelLength", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutLength", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint DissolveType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DissolveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DissolveType", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DissolverOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DissolverOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DissolverOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public uint Magnitude
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityFlame : CBaseEntity
        {
            public CEntityFlame(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityFlame", "CEntityFlame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityFlame(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityFlame", "CEntityFlame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityFlame()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity EntAttached
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EntAttached", CallKind.ClassMember, m_classData); }
            }
            public bool CheapEffect
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CheapEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CheapEffect", CallKind.ClassMember, m_classData, value); }
            }
            public float Size
            {
                get { return Invoker.CallNative<float>("SDKClass", "Size", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Size", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseHitboxes
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseHitboxes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseHitboxes", CallKind.ClassMember, m_classData, value); }
            }
            public int NumHitboxFires
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumHitboxFires", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumHitboxFires", CallKind.ClassMember, m_classData, value); }
            }
            public float HitboxFireScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HitboxFireScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitboxFireScale", CallKind.ClassMember, m_classData, value); }
            }
            public float Lifetime
            {
                get { return Invoker.CallNative<float>("SDKClass", "Lifetime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lifetime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Attacker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Attacker", CallKind.ClassMember, m_classData); }
            }
            public float DirectDamagePerSecond
            {
                get { return Invoker.CallNative<float>("SDKClass", "DirectDamagePerSecond", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectDamagePerSecond", CallKind.ClassMember, m_classData, value); }
            }
            public int CustomDamageType
            {
                get { return Invoker.CallNative<int>("SDKClass", "CustomDamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomDamageType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityIdentity : ClassData
        {
            public CEntityIdentity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityIdentity", "CEntityIdentity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityIdentity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityIdentity", "CEntityIdentity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityIdentity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NameStringableIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "NameStringableIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameStringableIndex", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string DesignerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DesignerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesignerName", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public uint WorldGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData, value); }
            }
            public uint DataObjectTypes
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DataObjectTypes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DataObjectTypes", CallKind.ClassMember, m_classData, value); }
            }
            public ChangeAccessorFieldPathIndex_t PathIndex
            {
                get { return Invoker.CallNative<ChangeAccessorFieldPathIndex_t>("SDKClass", "PathIndex", CallKind.ClassMember, m_classData); }
            }
            public int[] Prev
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Prev", CallKind.ClassMember, m_classData); }
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
            public int[] PrevByClass
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PrevByClass", CallKind.ClassMember, m_classData); }
            }
            public int[] NextByClass
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "NextByClass", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityInstance : ClassData
        {
            public CEntityInstance(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityInstance", "CEntityInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityInstance(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityInstance", "CEntityInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityInstance()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string PrivateVScripts
            {
                get { return Invoker.CallNative<string>("SDKClass", "PrivateVScripts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrivateVScripts", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Entity
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public int[] CScriptComponent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CScriptComponent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEntityIOOutput : ClassData
        {
            public CEntityIOOutput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityIOOutput", "CEntityIOOutput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityIOOutput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntityIOOutput", "CEntityIOOutput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntityIOOutput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CEntitySubclassVDataBase : ClassData
        {
            public CEntitySubclassVDataBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntitySubclassVDataBase", "CEntitySubclassVDataBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntitySubclassVDataBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEntitySubclassVDataBase", "CEntitySubclassVDataBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEntitySubclassVDataBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CEnumAnimParameter : CConcreteAnimParameter
        {
            public CEnumAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnumAnimParameter", "CEnumAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnumAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnumAnimParameter", "CEnumAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnumAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte DefaultValue
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData, value); }
            }
            public string[] EnumOptions
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "EnumOptions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnumOptions", CallKind.ClassMember, m_classData, value); }
            }
            public ulong[] EnumReferenced
            {
                get { return Invoker.CallNative<ulong[]>("SDKClass", "EnumReferenced", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnumReferenced", CallKind.ClassMember, m_classData, value); }
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvBeam : CBeam
        {
            public CEnvBeam(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvBeam", "CEnvBeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvBeam(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvBeam", "CEnvBeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvBeam()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Active
            {
                get { return Invoker.CallNative<int>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public string StartEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "StartEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartEntity", CallKind.ClassMember, m_classData, value); }
            }
            public string EndEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "EndEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndEntity", CallKind.ClassMember, m_classData, value); }
            }
            public float Life
            {
                get { return Invoker.CallNative<float>("SDKClass", "Life", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Life", CallKind.ClassMember, m_classData, value); }
            }
            public float BoltWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "BoltWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoltWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseAmplitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseAmplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseAmplitude", CallKind.ClassMember, m_classData, value); }
            }
            public int Speed
            {
                get { return Invoker.CallNative<int>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Speed", CallKind.ClassMember, m_classData, value); }
            }
            public float Restrike
            {
                get { return Invoker.CallNative<float>("SDKClass", "Restrike", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Restrike", CallKind.ClassMember, m_classData, value); }
            }
            public string SpriteName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpriteName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteName", CallKind.ClassMember, m_classData, value); }
            }
            public int FrameStart
            {
                get { return Invoker.CallNative<int>("SDKClass", "FrameStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameStart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EndPointWorld
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EndPointWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndPointWorld", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EndPointRelative
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EndPointRelative", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndPointRelative", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public uint TouchType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TouchType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TouchType", CallKind.ClassMember, m_classData, value); }
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Filter
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public string Decal
            {
                get { return Invoker.CallNative<string>("SDKClass", "Decal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Decal", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnTouchedByEntity
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTouchedByEntity", CallKind.ClassMember, m_classData); }
            }
            public CBeam Parent
            {
                get { return Invoker.CallNative<CBeam>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvBeverage : CBaseEntity
        {
            public CEnvBeverage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvBeverage", "CEnvBeverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvBeverage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvBeverage", "CEnvBeverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvBeverage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool CanInDispenser
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanInDispenser", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanInDispenser", CallKind.ClassMember, m_classData, value); }
            }
            public int BeverageType
            {
                get { return Invoker.CallNative<int>("SDKClass", "BeverageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeverageType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvCombinedLightProbeVolume : CBaseEntity
        {
            public CEnvCombinedLightProbeVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCombinedLightProbeVolume", "CEnvCombinedLightProbeVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCombinedLightProbeVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCombinedLightProbeVolume", "CEnvCombinedLightProbeVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCombinedLightProbeVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public QAngle Entity_Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Entity_Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_Color", CallKind.ClassMember, m_classData, value); }
            }
            public float Entity_flBrightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Entity_flBrightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_flBrightness", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bCustomCubemapTexture
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bCustomCubemapTexture", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bCustomCubemapTexture", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vBoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vBoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bMoveable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nEnvCubeMapArrayIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nEnvCubeMapArrayIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nEnvCubeMapArrayIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bStartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public float Entity_flEdgeFadeDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "Entity_flEdgeFadeDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_flEdgeFadeDist", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vEdgeFadeDists
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vEdgeFadeDists", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vEdgeFadeDists", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeX
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeX", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeY
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeY", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeZ", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasX
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasX", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasY
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasY", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume : CEnvCombinedLightProbeVolume
        {
            public CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume", "CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume", "CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvCombinedLightProbeVolume Parent
            {
                get { return Invoker.CallNative<CEnvCombinedLightProbeVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvCubemap : CBaseEntity
        {
            public CEnvCubemap(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemap", "CEnvCubemap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemap(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemap", "CEnvCubemap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemap()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Entity_bCustomCubemapTexture
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bCustomCubemapTexture", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bCustomCubemapTexture", CallKind.ClassMember, m_classData, value); }
            }
            public float Entity_flInfluenceRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Entity_flInfluenceRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_flInfluenceRadius", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vBoxProjectMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxProjectMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxProjectMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vBoxProjectMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxProjectMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxProjectMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bMoveable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nEnvCubeMapArrayIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nEnvCubeMapArrayIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nEnvCubeMapArrayIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData, value); }
            }
            public float Entity_flEdgeFadeDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "Entity_flEdgeFadeDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_flEdgeFadeDist", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vEdgeFadeDists
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vEdgeFadeDists", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vEdgeFadeDists", CallKind.ClassMember, m_classData, value); }
            }
            public float Entity_flDiffuseScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Entity_flDiffuseScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_flDiffuseScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bStartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bDefaultEnvMap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bDefaultEnvMap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bDefaultEnvMap", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bDefaultSpecEnvMap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bDefaultSpecEnvMap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bDefaultSpecEnvMap", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bIndoorCubeMap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bIndoorCubeMap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bIndoorCubeMap", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bCopyDiffuseFromDefaultCubemap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bCopyDiffuseFromDefaultCubemap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bCopyDiffuseFromDefaultCubemap", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvCubemapBox : CEnvCubemap
        {
            public CEnvCubemapBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemapBox", "CEnvCubemapBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemapBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemapBox", "CEnvCubemapBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemapBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvCubemap Parent
            {
                get { return Invoker.CallNative<CEnvCubemap>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvCubemapFog : CBaseEntity
        {
            public CEnvCubemapFog(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemapFog", "CEnvCubemapFog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemapFog(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvCubemapFog", "CEnvCubemapFog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvCubemapFog()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float EndDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float StartDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FogFalloffExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogFalloffExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogFalloffExponent", CallKind.ClassMember, m_classData, value); }
            }
            public bool HeightFogEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HeightFogEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightFogEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float FogHeightWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogHeightWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogHeightWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float FogHeightEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogHeightEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogHeightEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float FogHeightStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogHeightStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogHeightStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FogHeightExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogHeightExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogHeightExponent", CallKind.ClassMember, m_classData, value); }
            }
            public float LODBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "LODBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LODBias", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxOpacity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxOpacity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxOpacity", CallKind.ClassMember, m_classData, value); }
            }
            public int CubemapSourceType
            {
                get { return Invoker.CallNative<int>("SDKClass", "CubemapSourceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CubemapSourceType", CallKind.ClassMember, m_classData, value); }
            }
            public string SkyEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "SkyEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyEntity", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasHeightFogEnd
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasHeightFogEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasHeightFogEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvDecal : CBaseModelEntity
        {
            public CEnvDecal(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvDecal", "CEnvDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvDecal(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvDecal", "CEnvDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvDecal()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float Depth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public uint RenderOrder
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RenderOrder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOrder", CallKind.ClassMember, m_classData, value); }
            }
            public bool ProjectOnWorld
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ProjectOnWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectOnWorld", CallKind.ClassMember, m_classData, value); }
            }
            public bool ProjectOnCharacters
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ProjectOnCharacters", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectOnCharacters", CallKind.ClassMember, m_classData, value); }
            }
            public bool ProjectOnWater
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ProjectOnWater", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectOnWater", CallKind.ClassMember, m_classData, value); }
            }
            public float DepthSortBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "DepthSortBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepthSortBias", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvDetailController : CBaseEntity
        {
            public CEnvDetailController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvDetailController", "CEnvDetailController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvDetailController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvDetailController", "CEnvDetailController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvDetailController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeStartDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeStartDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeStartDist", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeEndDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeEndDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeEndDist", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvEntityIgniter : CBaseEntity
        {
            public CEnvEntityIgniter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvEntityIgniter", "CEnvEntityIgniter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvEntityIgniter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvEntityIgniter", "CEnvEntityIgniter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvEntityIgniter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Lifetime
            {
                get { return Invoker.CallNative<float>("SDKClass", "Lifetime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lifetime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvEntityMaker : CPointEntity
        {
            public CEnvEntityMaker(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvEntityMaker", "CEnvEntityMaker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvEntityMaker(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvEntityMaker", "CEnvEntityMaker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvEntityMaker()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D EntityMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EntityMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EntityMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EntityMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity CurrentInstance
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "CurrentInstance", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity CurrentBlocker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "CurrentBlocker", CallKind.ClassMember, m_classData); }
            }
            public Vector2D BlockerOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BlockerOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockerOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector PostSpawnDirection
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PostSpawnDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostSpawnDirection", CallKind.ClassMember, m_classData, value); }
            }
            public float PostSpawnDirectionVariance
            {
                get { return Invoker.CallNative<float>("SDKClass", "PostSpawnDirectionVariance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostSpawnDirectionVariance", CallKind.ClassMember, m_classData, value); }
            }
            public float PostSpawnSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PostSpawnSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostSpawnSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool PostSpawnUseAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PostSpawnUseAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostSpawnUseAngles", CallKind.ClassMember, m_classData, value); }
            }
            public string Template
            {
                get { return Invoker.CallNative<string>("SDKClass", "Template", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Template", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OutputOnSpawned
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputOnSpawned", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OutputOnFailedSpawn
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputOnFailedSpawn", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvExplosion : CModelPointEntity
        {
            public CEnvExplosion(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvExplosion", "CEnvExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvExplosion(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvExplosion", "CEnvExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvExplosion()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Magnitude
            {
                get { return Invoker.CallNative<int>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public float PlayerDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlayerDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDamage", CallKind.ClassMember, m_classData, value); }
            }
            public int RadiusOverride
            {
                get { return Invoker.CallNative<int>("SDKClass", "RadiusOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusOverride", CallKind.ClassMember, m_classData, value); }
            }
            public float InnerRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float DamageForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "DamageForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageForce", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Inflictor
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Inflictor", CallKind.ClassMember, m_classData); }
            }
            public uint CustomDamageType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CustomDamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomDamageType", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateDebris
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateDebris", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateDebris", CallKind.ClassMember, m_classData, value); }
            }
            public string CustomEffectName
            {
                get { return Invoker.CallNative<string>("SDKClass", "CustomEffectName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomEffectName", CallKind.ClassMember, m_classData, value); }
            }
            public string CustomSoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "CustomSoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomSoundName", CallKind.ClassMember, m_classData, value); }
            }
            public bool SuppressParticleImpulse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SuppressParticleImpulse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuppressParticleImpulse", CallKind.ClassMember, m_classData, value); }
            }
            public uint ClassIgnore
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ClassIgnore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClassIgnore", CallKind.ClassMember, m_classData, value); }
            }
            public string EntityIgnoreName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityIgnoreName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityIgnoreName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity EntityIgnore
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EntityIgnore", CallKind.ClassMember, m_classData); }
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvFade : CLogicalEntity
        {
            public CEnvFade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvFade", "CEnvFade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvFade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvFade", "CEnvFade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvFade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public QAngle FadeColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "FadeColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float HoldDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "HoldDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoldDuration", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBeginFade
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBeginFade", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvGlobal : CLogicalEntity
        {
            public CEnvGlobal(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvGlobal", "CEnvGlobal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvGlobal(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvGlobal", "CEnvGlobal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvGlobal()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Globalstate
            {
                get { return Invoker.CallNative<string>("SDKClass", "Globalstate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Globalstate", CallKind.ClassMember, m_classData, value); }
            }
            public int Triggermode
            {
                get { return Invoker.CallNative<int>("SDKClass", "Triggermode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Triggermode", CallKind.ClassMember, m_classData, value); }
            }
            public int Initialstate
            {
                get { return Invoker.CallNative<int>("SDKClass", "Initialstate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Initialstate", CallKind.ClassMember, m_classData, value); }
            }
            public int Counter
            {
                get { return Invoker.CallNative<int>("SDKClass", "Counter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Counter", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvHudHint : CPointEntity
        {
            public CEnvHudHint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvHudHint", "CEnvHudHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvHudHint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvHudHint", "CEnvHudHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvHudHint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Message
            {
                get { return Invoker.CallNative<string>("SDKClass", "Message", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Message", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvInstructorHint : CPointEntity
        {
            public CEnvInstructorHint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvInstructorHint", "CEnvInstructorHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvInstructorHint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvInstructorHint", "CEnvInstructorHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvInstructorHint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string Replace_Key
            {
                get { return Invoker.CallNative<string>("SDKClass", "Replace_Key", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Replace_Key", CallKind.ClassMember, m_classData, value); }
            }
            public string HintTargetEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData, value); }
            }
            public int Timeout
            {
                get { return Invoker.CallNative<int>("SDKClass", "Timeout", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timeout", CallKind.ClassMember, m_classData, value); }
            }
            public int DisplayLimit
            {
                get { return Invoker.CallNative<int>("SDKClass", "DisplayLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisplayLimit", CallKind.ClassMember, m_classData, value); }
            }
            public string Icon_Onscreen
            {
                get { return Invoker.CallNative<string>("SDKClass", "Icon_Onscreen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Icon_Onscreen", CallKind.ClassMember, m_classData, value); }
            }
            public string Icon_Offscreen
            {
                get { return Invoker.CallNative<string>("SDKClass", "Icon_Offscreen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Icon_Offscreen", CallKind.ClassMember, m_classData, value); }
            }
            public string Caption
            {
                get { return Invoker.CallNative<string>("SDKClass", "Caption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Caption", CallKind.ClassMember, m_classData, value); }
            }
            public string ActivatorCaption
            {
                get { return Invoker.CallNative<string>("SDKClass", "ActivatorCaption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActivatorCaption", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public float IconOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "IconOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IconOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public byte PulseOption
            {
                get { return Invoker.CallNative<byte>("SDKClass", "PulseOption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PulseOption", CallKind.ClassMember, m_classData, value); }
            }
            public byte AlphaOption
            {
                get { return Invoker.CallNative<byte>("SDKClass", "AlphaOption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlphaOption", CallKind.ClassMember, m_classData, value); }
            }
            public byte ShakeOption
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ShakeOption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShakeOption", CallKind.ClassMember, m_classData, value); }
            }
            public bool Static
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Static", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Static", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoOffscreen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoOffscreen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoOffscreen", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceCaption
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceCaption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceCaption", CallKind.ClassMember, m_classData, value); }
            }
            public int InstanceType
            {
                get { return Invoker.CallNative<int>("SDKClass", "InstanceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceType", CallKind.ClassMember, m_classData, value); }
            }
            public bool SuppressRest
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SuppressRest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuppressRest", CallKind.ClassMember, m_classData, value); }
            }
            public string Binding
            {
                get { return Invoker.CallNative<string>("SDKClass", "Binding", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Binding", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowNoDrawTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowNoDrawTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowNoDrawTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoStart
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoStart", CallKind.ClassMember, m_classData, value); }
            }
            public bool LocalPlayerOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LocalPlayerOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalPlayerOnly", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvInstructorVRHint : CPointEntity
        {
            public CEnvInstructorVRHint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvInstructorVRHint", "CEnvInstructorVRHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvInstructorVRHint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvInstructorVRHint", "CEnvInstructorVRHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvInstructorVRHint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string HintTargetEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData, value); }
            }
            public int Timeout
            {
                get { return Invoker.CallNative<int>("SDKClass", "Timeout", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timeout", CallKind.ClassMember, m_classData, value); }
            }
            public string Caption
            {
                get { return Invoker.CallNative<string>("SDKClass", "Caption", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Caption", CallKind.ClassMember, m_classData, value); }
            }
            public string StartSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "StartSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartSound", CallKind.ClassMember, m_classData, value); }
            }
            public int LayoutFileType
            {
                get { return Invoker.CallNative<int>("SDKClass", "LayoutFileType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayoutFileType", CallKind.ClassMember, m_classData, value); }
            }
            public string CustomLayoutFile
            {
                get { return Invoker.CallNative<string>("SDKClass", "CustomLayoutFile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomLayoutFile", CallKind.ClassMember, m_classData, value); }
            }
            public int AttachType
            {
                get { return Invoker.CallNative<int>("SDKClass", "AttachType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachType", CallKind.ClassMember, m_classData, value); }
            }
            public float HeightOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeightOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvLaser : CBeam
        {
            public CEnvLaser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvLaser", "CEnvLaser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvLaser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvLaser", "CEnvLaser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvLaser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string LaserTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "LaserTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LaserTarget", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Sprite
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Sprite", CallKind.ClassMember, m_classData); }
            }
            public string SpriteName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpriteName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D FirePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FirePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirePosition", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CBeam Parent
            {
                get { return Invoker.CallNative<CBeam>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvLightProbeVolume : CBaseEntity
        {
            public CEnvLightProbeVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvLightProbeVolume", "CEnvLightProbeVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvLightProbeVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvLightProbeVolume", "CEnvLightProbeVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvLightProbeVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Entity_vBoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Entity_vBoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Entity_vBoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_vBoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bMoveable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bMoveable", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nHandshake", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nPriority", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bStartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bStartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeX
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeX", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeY
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeY", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeSizeZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeSizeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeSizeZ", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasX
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasX", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasY
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasY", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity_nLightProbeAtlasZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity_nLightProbeAtlasZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_nLightProbeAtlasZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool Entity_bEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity_bEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvMuzzleFlash : CPointEntity
        {
            public CEnvMuzzleFlash(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvMuzzleFlash", "CEnvMuzzleFlash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvMuzzleFlash(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvMuzzleFlash", "CEnvMuzzleFlash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvMuzzleFlash()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public string ParentAttachment
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParentAttachment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentAttachment", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvParticleGlow : CParticleSystem
        {
            public CEnvParticleGlow(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvParticleGlow", "CEnvParticleGlow", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvParticleGlow(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvParticleGlow", "CEnvParticleGlow", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvParticleGlow()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AlphaScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlphaScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlphaScale", CallKind.ClassMember, m_classData, value); }
            }
            public float RadiusScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "RadiusScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusScale", CallKind.ClassMember, m_classData, value); }
            }
            public float SelfIllumScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "SelfIllumScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SelfIllumScale", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorTint
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorTint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTint", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleSystem Parent
            {
                get { return Invoker.CallNative<CParticleSystem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvProjectedTexture : CModelPointEntity
        {
            public CEnvProjectedTexture(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvProjectedTexture", "CEnvProjectedTexture", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvProjectedTexture(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvProjectedTexture", "CEnvProjectedTexture", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvProjectedTexture()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public bool State
            {
                get { return Invoker.CallNative<bool>("SDKClass", "State", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "State", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlwaysUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public float LightFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightFOV", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData, value); }
            }
            public bool SimpleProjection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SimpleProjection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimpleProjection", CallKind.ClassMember, m_classData, value); }
            }
            public bool LightOnlyTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LightOnlyTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightOnlyTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool LightWorld
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LightWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightWorld", CallKind.ClassMember, m_classData, value); }
            }
            public bool CameraSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CameraSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CameraSpace", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle LightColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "LightColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Intensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Intensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Intensity", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearAttenuation
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearAttenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearAttenuation", CallKind.ClassMember, m_classData, value); }
            }
            public float QuadraticAttenuation
            {
                get { return Invoker.CallNative<float>("SDKClass", "QuadraticAttenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuadraticAttenuation", CallKind.ClassMember, m_classData, value); }
            }
            public bool Volumetric
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Volumetric", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volumetric", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float FlashlightTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlashlightTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlashlightTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumPlanes
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumPlanes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumPlanes", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaneOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaneOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaneOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumetricIntensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumetricIntensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumetricIntensity", CallKind.ClassMember, m_classData, value); }
            }
            public float ColorTransitionTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ColorTransitionTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTransitionTime", CallKind.ClassMember, m_classData, value); }
            }
            public float Ambient
            {
                get { return Invoker.CallNative<float>("SDKClass", "Ambient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ambient", CallKind.ClassMember, m_classData, value); }
            }
            public string SpotlightTextureName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpotlightTextureName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightTextureName", CallKind.ClassMember, m_classData, value); }
            }
            public int SpotlightTextureFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotlightTextureFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightTextureFrame", CallKind.ClassMember, m_classData, value); }
            }
            public uint ShadowQuality
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ShadowQuality", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowQuality", CallKind.ClassMember, m_classData, value); }
            }
            public float NearZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearZ", CallKind.ClassMember, m_classData, value); }
            }
            public float FarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarZ", CallKind.ClassMember, m_classData, value); }
            }
            public float ProjectionSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProjectionSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectionSize", CallKind.ClassMember, m_classData, value); }
            }
            public float Rotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "Rotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rotation", CallKind.ClassMember, m_classData, value); }
            }
            public bool FlipHorizontal
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FlipHorizontal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlipHorizontal", CallKind.ClassMember, m_classData, value); }
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvShake : CPointEntity
        {
            public CEnvShake(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvShake", "CEnvShake", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvShake(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvShake", "CEnvShake", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvShake()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string LimitToEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "LimitToEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LimitToEntity", CallKind.ClassMember, m_classData, value); }
            }
            public float Amplitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Amplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Amplitude", CallKind.ClassMember, m_classData, value); }
            }
            public float Frequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frequency", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float StopTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StopTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NextShake
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextShake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextShake", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentAmp
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentAmp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentAmp", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxForce
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxForce", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysicsShake ShakeCallback
            {
                get { return Invoker.CallNative<CPhysicsShake>("SDKClass", "ShakeCallback", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSky : CBaseModelEntity
        {
            public CEnvSky(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSky", "CEnvSky", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSky(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSky", "CEnvSky", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSky()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle TintColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "TintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColor", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle TintColorLightingOnly
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "TintColorLightingOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColorLightingOnly", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData, value); }
            }
            public int FogType
            {
                get { return Invoker.CallNative<int>("SDKClass", "FogType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogType", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMinStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMinStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMinStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMinEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMinEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMinEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscape : CBaseEntity
        {
            public CEnvSoundscape(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscape", "CEnvSoundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscape(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscape", "CEnvSoundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscape()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnPlay
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlay", CallKind.ClassMember, m_classData); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundEventName", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideWithEvent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideWithEvent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideWithEvent", CallKind.ClassMember, m_classData, value); }
            }
            public int SoundscapeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundscapeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int SoundscapeEntityListId
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundscapeEntityListId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeEntityListId", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] PositionNames
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "PositionNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PositionNames", CallKind.ClassMember, m_classData, value); }
            }
            public CEnvSoundscape ProxySoundscape
            {
                get { return Invoker.CallNative<CEnvSoundscape>("SDKClass", "ProxySoundscape", CallKind.ClassMember, m_classData); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundscapeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundscapeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeName", CallKind.ClassMember, m_classData, value); }
            }
            public uint SoundEventHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SoundEventHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundEventHash", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscapeAlias_snd_soundscape : CEnvSoundscape
        {
            public CEnvSoundscapeAlias_snd_soundscape(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeAlias_snd_soundscape", "CEnvSoundscapeAlias_snd_soundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeAlias_snd_soundscape(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeAlias_snd_soundscape", "CEnvSoundscapeAlias_snd_soundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeAlias_snd_soundscape()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvSoundscape Parent
            {
                get { return Invoker.CallNative<CEnvSoundscape>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscapeProxy : CEnvSoundscape
        {
            public CEnvSoundscapeProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeProxy", "CEnvSoundscapeProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeProxy", "CEnvSoundscapeProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MainSoundscapeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MainSoundscapeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MainSoundscapeName", CallKind.ClassMember, m_classData, value); }
            }
            public CEnvSoundscape Parent
            {
                get { return Invoker.CallNative<CEnvSoundscape>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscapeProxyAlias_snd_soundscape_proxy : CEnvSoundscapeProxy
        {
            public CEnvSoundscapeProxyAlias_snd_soundscape_proxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeProxyAlias_snd_soundscape_proxy", "CEnvSoundscapeProxyAlias_snd_soundscape_proxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeProxyAlias_snd_soundscape_proxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeProxyAlias_snd_soundscape_proxy", "CEnvSoundscapeProxyAlias_snd_soundscape_proxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeProxyAlias_snd_soundscape_proxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvSoundscapeProxy Parent
            {
                get { return Invoker.CallNative<CEnvSoundscapeProxy>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscapeTriggerable : CEnvSoundscape
        {
            public CEnvSoundscapeTriggerable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeTriggerable", "CEnvSoundscapeTriggerable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeTriggerable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeTriggerable", "CEnvSoundscapeTriggerable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeTriggerable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvSoundscape Parent
            {
                get { return Invoker.CallNative<CEnvSoundscape>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable : CEnvSoundscapeTriggerable
        {
            public CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable", "CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable", "CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvSoundscapeTriggerable Parent
            {
                get { return Invoker.CallNative<CEnvSoundscapeTriggerable>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSpark : CPointEntity
        {
            public CEnvSpark(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSpark", "CEnvSpark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSpark(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSpark", "CEnvSpark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSpark()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public int Magnitude
            {
                get { return Invoker.CallNative<int>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public int TrailLength
            {
                get { return Invoker.CallNative<int>("SDKClass", "TrailLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TrailLength", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnSpark
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSpark", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvSplash : CPointEntity
        {
            public CEnvSplash(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSplash", "CEnvSplash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSplash(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvSplash", "CEnvSplash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvSplash()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvTilt : CPointEntity
        {
            public CEnvTilt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvTilt", "CEnvTilt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvTilt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvTilt", "CEnvTilt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvTilt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float TiltTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "TiltTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TiltTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StopTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StopTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopTime", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvViewPunch : CPointEntity
        {
            public CEnvViewPunch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvViewPunch", "CEnvViewPunch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvViewPunch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvViewPunch", "CEnvViewPunch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvViewPunch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public Vector ViewPunch
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "ViewPunch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewPunch", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvVolumetricFogController : CBaseEntity
        {
            public CEnvVolumetricFogController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvVolumetricFogController", "CEnvVolumetricFogController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvVolumetricFogController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvVolumetricFogController", "CEnvVolumetricFogController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvVolumetricFogController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Scattering
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scattering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scattering", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle TintColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "TintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Anisotropy
            {
                get { return Invoker.CallNative<float>("SDKClass", "Anisotropy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Anisotropy", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float DrawDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "DrawDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeInStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeInEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float IndirectStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "IndirectStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectStrength", CallKind.ClassMember, m_classData, value); }
            }
            public int VolumeDepth
            {
                get { return Invoker.CallNative<int>("SDKClass", "VolumeDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float FirstVolumeSliceThickness
            {
                get { return Invoker.CallNative<float>("SDKClass", "FirstVolumeSliceThickness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstVolumeSliceThickness", CallKind.ClassMember, m_classData, value); }
            }
            public int IndirectTextureDimX
            {
                get { return Invoker.CallNative<int>("SDKClass", "IndirectTextureDimX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectTextureDimX", CallKind.ClassMember, m_classData, value); }
            }
            public int IndirectTextureDimY
            {
                get { return Invoker.CallNative<int>("SDKClass", "IndirectTextureDimY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectTextureDimY", CallKind.ClassMember, m_classData, value); }
            }
            public int IndirectTextureDimZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "IndirectTextureDimZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectTextureDimZ", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public float StartAnisoTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartAnisoTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartAnisoTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartScatterTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartScatterTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartScatterTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartDrawDistanceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartDrawDistanceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDrawDistanceTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartAnisotropy
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartAnisotropy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartAnisotropy", CallKind.ClassMember, m_classData, value); }
            }
            public float StartScattering
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartScattering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartScattering", CallKind.ClassMember, m_classData, value); }
            }
            public float StartDrawDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartDrawDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDrawDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultAnisotropy
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultAnisotropy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultAnisotropy", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultScattering
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultScattering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultScattering", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultDrawDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultDrawDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultDrawDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableIndirect
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableIndirect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableIndirect", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsMaster
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsMaster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsMaster", CallKind.ClassMember, m_classData, value); }
            }
            public int ForceRefreshCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "ForceRefreshCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceRefreshCount", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D NoiseScale
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "NoiseScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseScale", CallKind.ClassMember, m_classData, value); }
            }
            public float WindSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WindDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WindDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindDirection", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvVolumetricFogVolume : CBaseEntity
        {
            public CEnvVolumetricFogVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvVolumetricFogVolume", "CEnvVolumetricFogVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvVolumetricFogVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvVolumetricFogVolume", "CEnvVolumetricFogVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvVolumetricFogVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IndirectUseLPVs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IndirectUseLPVs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectUseLPVs", CallKind.ClassMember, m_classData, value); }
            }
            public float Strength
            {
                get { return Invoker.CallNative<float>("SDKClass", "Strength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strength", CallKind.ClassMember, m_classData, value); }
            }
            public int FalloffShape
            {
                get { return Invoker.CallNative<int>("SDKClass", "FalloffShape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FalloffShape", CallKind.ClassMember, m_classData, value); }
            }
            public float FalloffExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "FalloffExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FalloffExponent", CallKind.ClassMember, m_classData, value); }
            }
            public float HeightFogDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeightFogDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightFogDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float HeightFogEdgeWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeightFogEdgeWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightFogEdgeWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float IndirectLightStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "IndirectLightStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectLightStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float SunLightStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SunLightStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SunLightStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle TintColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "TintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideTintColor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideTintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideTintColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideIndirectLightStrength
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideIndirectLightStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideIndirectLightStrength", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideSunLightStrength
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideSunLightStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideSunLightStrength", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideNoiseStrength
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideNoiseStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideNoiseStrength", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvWind : CBaseEntity
        {
            public CEnvWind(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWind", "CEnvWind", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWind(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWind", "CEnvWind", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWind()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvWindShared EnvWindShared
            {
                get { return Invoker.CallNative<CEnvWindShared>("SDKClass", "EnvWindShared", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvWindController : CBaseEntity
        {
            public CEnvWindController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindController", "CEnvWindController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindController", "CEnvWindController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvWindShared EnvWindShared
            {
                get { return Invoker.CallNative<CEnvWindShared>("SDKClass", "EnvWindShared", CallKind.ClassMember, m_classData); }
            }
            public float DirectionVariation
            {
                get { return Invoker.CallNative<float>("SDKClass", "DirectionVariation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectionVariation", CallKind.ClassMember, m_classData, value); }
            }
            public float SpeedVariation
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpeedVariation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedVariation", CallKind.ClassMember, m_classData, value); }
            }
            public float Turbulence
            {
                get { return Invoker.CallNative<float>("SDKClass", "Turbulence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Turbulence", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumeHalfExtentXY
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumeHalfExtentXY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeHalfExtentXY", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumeHalfExtentZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumeHalfExtentZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeHalfExtentZ", CallKind.ClassMember, m_classData, value); }
            }
            public int VolumeResolutionXY
            {
                get { return Invoker.CallNative<int>("SDKClass", "VolumeResolutionXY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeResolutionXY", CallKind.ClassMember, m_classData, value); }
            }
            public int VolumeResolutionZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "VolumeResolutionZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeResolutionZ", CallKind.ClassMember, m_classData, value); }
            }
            public int ClipmapLevels
            {
                get { return Invoker.CallNative<int>("SDKClass", "ClipmapLevels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClipmapLevels", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsMaster
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsMaster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsMaster", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvWindShared : ClassData
        {
            public CEnvWindShared(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindShared", "CEnvWindShared", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindShared(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindShared", "CEnvWindShared", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindShared()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint WindSeed
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WindSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindSeed", CallKind.ClassMember, m_classData, value); }
            }
            public ushort MinWind
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "MinWind", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinWind", CallKind.ClassMember, m_classData, value); }
            }
            public ushort MaxWind
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "MaxWind", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxWind", CallKind.ClassMember, m_classData, value); }
            }
            public int WindRadius
            {
                get { return Invoker.CallNative<int>("SDKClass", "WindRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindRadius", CallKind.ClassMember, m_classData, value); }
            }
            public ushort MinGust
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "MinGust", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinGust", CallKind.ClassMember, m_classData, value); }
            }
            public ushort MaxGust
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "MaxGust", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxGust", CallKind.ClassMember, m_classData, value); }
            }
            public float MinGustDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinGustDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinGustDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxGustDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxGustDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxGustDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float GustDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "GustDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GustDuration", CallKind.ClassMember, m_classData, value); }
            }
            public ushort GustDirChange
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "GustDirChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GustDirChange", CallKind.ClassMember, m_classData, value); }
            }
            public ushort InitialWindDir
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "InitialWindDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialWindDir", CallKind.ClassMember, m_classData, value); }
            }
            public float InitialWindSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitialWindSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialWindSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Location
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Location", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Location", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnGustStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnGustStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnGustEnd
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnGustEnd", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity EntOwner
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EntOwner", CallKind.ClassMember, m_classData); }
            }
        }
        public class CEnvWindVolume : CBaseEntity
        {
            public CEnvWindVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindVolume", "CEnvWindVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CEnvWindVolume", "CEnvWindVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CEnvWindVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public int Shape
            {
                get { return Invoker.CallNative<int>("SDKClass", "Shape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Shape", CallKind.ClassMember, m_classData, value); }
            }
            public float WindSpeedMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindSpeedMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindSpeedMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float WindTurbulenceMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindTurbulenceMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindTurbulenceMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float WindSpeedVariationMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindSpeedVariationMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindSpeedVariationMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float WindDirectionVariationMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindDirectionVariationMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindDirectionVariationMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CExampleSchemaVData_Monomorphic : ClassData
        {
            public CExampleSchemaVData_Monomorphic(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_Monomorphic", "CExampleSchemaVData_Monomorphic", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_Monomorphic(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_Monomorphic", "CExampleSchemaVData_Monomorphic", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_Monomorphic()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CExampleSchemaVData_PolymorphicBase : ClassData
        {
            public CExampleSchemaVData_PolymorphicBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicBase", "CExampleSchemaVData_PolymorphicBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicBase", "CExampleSchemaVData_PolymorphicBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Base
            {
                get { return Invoker.CallNative<int>("SDKClass", "Base", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Base", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CExampleSchemaVData_PolymorphicDerivedA : CExampleSchemaVData_PolymorphicBase
        {
            public CExampleSchemaVData_PolymorphicDerivedA(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicDerivedA", "CExampleSchemaVData_PolymorphicDerivedA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicDerivedA(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicDerivedA", "CExampleSchemaVData_PolymorphicDerivedA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicDerivedA()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DerivedA
            {
                get { return Invoker.CallNative<int>("SDKClass", "DerivedA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DerivedA", CallKind.ClassMember, m_classData, value); }
            }
            public CExampleSchemaVData_PolymorphicBase Parent
            {
                get { return Invoker.CallNative<CExampleSchemaVData_PolymorphicBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CExampleSchemaVData_PolymorphicDerivedB : CExampleSchemaVData_PolymorphicBase
        {
            public CExampleSchemaVData_PolymorphicDerivedB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicDerivedB", "CExampleSchemaVData_PolymorphicDerivedB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicDerivedB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExampleSchemaVData_PolymorphicDerivedB", "CExampleSchemaVData_PolymorphicDerivedB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExampleSchemaVData_PolymorphicDerivedB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DerivedB
            {
                get { return Invoker.CallNative<int>("SDKClass", "DerivedB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DerivedB", CallKind.ClassMember, m_classData, value); }
            }
            public CExampleSchemaVData_PolymorphicBase Parent
            {
                get { return Invoker.CallNative<CExampleSchemaVData_PolymorphicBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CExpressionActionUpdater : CAnimActionUpdater
        {
            public CExpressionActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExpressionActionUpdater", "CExpressionActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExpressionActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CExpressionActionUpdater", "CExpressionActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CExpressionActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle Param
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Param", CallKind.ClassMember, m_classData); }
            }
            public byte ParamType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ParamType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamType", CallKind.ClassMember, m_classData, value); }
            }
            public AnimScriptHandle Script
            {
                get { return Invoker.CallNative<AnimScriptHandle>("SDKClass", "Script", CallKind.ClassMember, m_classData); }
            }
            public CAnimActionUpdater Parent
            {
                get { return Invoker.CallNative<CAnimActionUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFeIndexedJiggleBone : ClassData
        {
            public CFeIndexedJiggleBone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeIndexedJiggleBone", "CFeIndexedJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeIndexedJiggleBone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeIndexedJiggleBone", "CFeIndexedJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeIndexedJiggleBone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Node
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public uint JiggleParent
            {
                get { return Invoker.CallNative<uint>("SDKClass", "JiggleParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JiggleParent", CallKind.ClassMember, m_classData, value); }
            }
            public CFeJiggleBone JiggleBone
            {
                get { return Invoker.CallNative<CFeJiggleBone>("SDKClass", "JiggleBone", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFeJiggleBone : ClassData
        {
            public CFeJiggleBone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeJiggleBone", "CFeJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeJiggleBone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeJiggleBone", "CFeJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeJiggleBone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float Length
            {
                get { return Invoker.CallNative<float>("SDKClass", "Length", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Length", CallKind.ClassMember, m_classData, value); }
            }
            public float TipMass
            {
                get { return Invoker.CallNative<float>("SDKClass", "TipMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TipMass", CallKind.ClassMember, m_classData, value); }
            }
            public float YawStiffness
            {
                get { return Invoker.CallNative<float>("SDKClass", "YawStiffness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YawStiffness", CallKind.ClassMember, m_classData, value); }
            }
            public float YawDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "YawDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YawDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchStiffness
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchStiffness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchStiffness", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AlongStiffness
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlongStiffness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlongStiffness", CallKind.ClassMember, m_classData, value); }
            }
            public float AlongDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlongDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlongDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinYaw
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinYaw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinYaw", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxYaw
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxYaw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxYaw", CallKind.ClassMember, m_classData, value); }
            }
            public float YawFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "YawFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YawFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float YawBounce
            {
                get { return Invoker.CallNative<float>("SDKClass", "YawBounce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YawBounce", CallKind.ClassMember, m_classData, value); }
            }
            public float MinPitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinPitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinPitch", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxPitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxPitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxPitch", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchBounce
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchBounce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchBounce", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMass
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMass", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseStiffness
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseStiffness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseStiffness", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMinLeft
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMinLeft", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMinLeft", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMaxLeft
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMaxLeft", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMaxLeft", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseLeftFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseLeftFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseLeftFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMinUp
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMinUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMinUp", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMaxUp
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMaxUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMaxUp", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseUpFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseUpFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseUpFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMinForward
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMinForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMinForward", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseMaxForward
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseMaxForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseMaxForward", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseForwardFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseForwardFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseForwardFriction", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFeMorphLayer : ClassData
        {
            public CFeMorphLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeMorphLayer", "CFeMorphLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeMorphLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeMorphLayer", "CFeMorphLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeMorphLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Nodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Nodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Nodes", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] InitPos
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "InitPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitPos", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Gravity
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Gravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Gravity", CallKind.ClassMember, m_classData, value); }
            }
            public float[] GoalStrength
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "GoalStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float[] GoalDamping
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "GoalDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalDamping", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFeNamedJiggleBone : ClassData
        {
            public CFeNamedJiggleBone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeNamedJiggleBone", "CFeNamedJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeNamedJiggleBone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeNamedJiggleBone", "CFeNamedJiggleBone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeNamedJiggleBone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrParentBone
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrParentBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrParentBone", CallKind.ClassMember, m_classData, value); }
            }
            public uint JiggleParent
            {
                get { return Invoker.CallNative<uint>("SDKClass", "JiggleParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JiggleParent", CallKind.ClassMember, m_classData, value); }
            }
            public CFeJiggleBone JiggleBone
            {
                get { return Invoker.CallNative<CFeJiggleBone>("SDKClass", "JiggleBone", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFeVertexMapBuildArray : ClassData
        {
            public CFeVertexMapBuildArray(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeVertexMapBuildArray", "CFeVertexMapBuildArray", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeVertexMapBuildArray(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFeVertexMapBuildArray", "CFeVertexMapBuildArray", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFeVertexMapBuildArray()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFilterAttributeInt : CBaseFilter
        {
            public CFilterAttributeInt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterAttributeInt", "CFilterAttributeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterAttributeInt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterAttributeInt", "CFilterAttributeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterAttributeInt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AttributeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttributeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterClass : CBaseFilter
        {
            public CFilterClass(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterClass", "CFilterClass", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterClass(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterClass", "CFilterClass", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterClass()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FilterClass
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterClass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterClass", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterContext : CBaseFilter
        {
            public CFilterContext(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterContext", "CFilterContext", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterContext(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterContext", "CFilterContext", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterContext()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FilterContext
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterContext", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterContext", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterEnemy : CBaseFilter
        {
            public CFilterEnemy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterEnemy", "CFilterEnemy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterEnemy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterEnemy", "CFilterEnemy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterEnemy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string EnemyName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EnemyName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyName", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float OuterRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "OuterRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterRadius", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxSquadmatesPerEnemy
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxSquadmatesPerEnemy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSquadmatesPerEnemy", CallKind.ClassMember, m_classData, value); }
            }
            public string PlayerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PlayerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterLOS : CBaseFilter
        {
            public CFilterLOS(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterLOS", "CFilterLOS", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterLOS(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterLOS", "CFilterLOS", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterLOS()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterMassGreater : CBaseFilter
        {
            public CFilterMassGreater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMassGreater", "CFilterMassGreater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMassGreater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMassGreater", "CFilterMassGreater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMassGreater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FilterMass
            {
                get { return Invoker.CallNative<float>("SDKClass", "FilterMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterMass", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterModel : CBaseFilter
        {
            public CFilterModel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterModel", "CFilterModel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterModel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterModel", "CFilterModel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterModel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FilterModel
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterModel", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterMultiple : CBaseFilter
        {
            public CFilterMultiple(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMultiple", "CFilterMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMultiple(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMultiple", "CFilterMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMultiple()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FilterType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FilterType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterType", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] FilterName
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterMultipleAPI : ClassData
        {
            public CFilterMultipleAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMultipleAPI", "CFilterMultipleAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMultipleAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterMultipleAPI", "CFilterMultipleAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterMultipleAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFilterName : CBaseFilter
        {
            public CFilterName(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterName", "CFilterName", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterName(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterName", "CFilterName", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterName()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterProximity : CBaseFilter
        {
            public CFilterProximity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterProximity", "CFilterProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterProximity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterProximity", "CFilterProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterProximity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFilterTeam : CBaseFilter
        {
            public CFilterTeam(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterTeam", "CFilterTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterTeam(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFilterTeam", "CFilterTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFilterTeam()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int FilterTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "FilterTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterTeam", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFireCrackerBlast : CInferno
        {
            public CFireCrackerBlast(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFireCrackerBlast", "CFireCrackerBlast", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFireCrackerBlast(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFireCrackerBlast", "CFireCrackerBlast", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFireCrackerBlast()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CInferno Parent
            {
                get { return Invoker.CallNative<CInferno>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFiringModeFloat : ClassData
        {
            public CFiringModeFloat(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFiringModeFloat", "CFiringModeFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFiringModeFloat(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFiringModeFloat", "CFiringModeFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFiringModeFloat()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Values
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Values", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Values", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFiringModeInt : ClassData
        {
            public CFiringModeInt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFiringModeInt", "CFiringModeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFiringModeInt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFiringModeInt", "CFiringModeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFiringModeInt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Values
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Values", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Values", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFish : CBaseAnimGraph
        {
            public CFish(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFish", "CFish", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFish(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFish", "CFish", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFish()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFishPool Pool
            {
                get { return Invoker.CallNative<CFishPool>("SDKClass", "Pool", CallKind.ClassMember, m_classData); }
            }
            public uint Id
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Id", CallKind.ClassMember, m_classData, value); }
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public float Z
            {
                get { return Invoker.CallNative<float>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
            public float Angle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleChange
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleChange", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Forward
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Forward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Forward", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Perp
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Perp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Perp", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PoolOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PoolOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PoolOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float WaterLevel
            {
                get { return Invoker.CallNative<float>("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData, value); }
            }
            public float Speed
            {
                get { return Invoker.CallNative<float>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Speed", CallKind.ClassMember, m_classData, value); }
            }
            public float DesiredSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DesiredSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float CalmSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "CalmSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CalmSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float PanicSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PanicSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanicSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float AvoidRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "AvoidRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvoidRange", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer TurnTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "TurnTimer", CallKind.ClassMember, m_classData); }
            }
            public bool TurnClockwise
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TurnClockwise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnClockwise", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer GoTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "GoTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer MoveTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "MoveTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer PanicTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "PanicTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer DisperseTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "DisperseTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer ProximityTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ProximityTimer", CallKind.ClassMember, m_classData); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFishPool : CBaseEntity
        {
            public CFishPool(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFishPool", "CFishPool", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFishPool(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFishPool", "CFishPool", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFishPool()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int FishCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "FishCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FishCount", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRange", CallKind.ClassMember, m_classData, value); }
            }
            public float SwimDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwimDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwimDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float WaterLevel
            {
                get { return Invoker.CallNative<float>("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaterLevel", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsDormant
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsDormant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsDormant", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer VisTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "VisTimer", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFlashbang : CBaseCSGrenade
        {
            public CFlashbang(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashbang", "CFlashbang", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashbang(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashbang", "CFlashbang", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashbang()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenade Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFlashbangProjectile : CBaseCSGrenadeProjectile
        {
            public CFlashbangProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashbangProjectile", "CFlashbangProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashbangProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashbangProjectile", "CFlashbangProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashbangProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TimeToDetonate
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToDetonate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToDetonate", CallKind.ClassMember, m_classData, value); }
            }
            public byte NumOpponentsHit
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NumOpponentsHit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumOpponentsHit", CallKind.ClassMember, m_classData, value); }
            }
            public byte NumTeammatesHit
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NumTeammatesHit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumTeammatesHit", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseCSGrenadeProjectile Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenadeProjectile>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFlashlightEffect : ClassData
        {
            public CFlashlightEffect(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashlightEffect", "CFlashlightEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashlightEffect(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlashlightEffect", "CFlashlightEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlashlightEffect()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsOn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOn", CallKind.ClassMember, m_classData, value); }
            }
            public bool MuzzleFlashEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MuzzleFlashEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleFlashEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float MuzzleFlashBrightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "MuzzleFlashBrightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleFlashBrightness", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MuzzleFlashOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MuzzleFlashOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuzzleFlashOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float Fov
            {
                get { return Invoker.CallNative<float>("SDKClass", "Fov", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fov", CallKind.ClassMember, m_classData, value); }
            }
            public float FarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarZ", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearAtten
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearAtten", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearAtten", CallKind.ClassMember, m_classData, value); }
            }
            public bool CastsShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CastsShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CastsShadows", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentPullBackDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentPullBackDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentPullBackDist", CallKind.ClassMember, m_classData, value); }
            }
            public string TextureName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TextureName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFlexController : ClassData
        {
            public CFlexController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexController", "CFlexController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexController", "CFlexController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string Type
            {
                get { return Invoker.CallNative<string>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public float Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public float Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFlexDesc : ClassData
        {
            public CFlexDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexDesc", "CFlexDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexDesc", "CFlexDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Facs
            {
                get { return Invoker.CallNative<string>("SDKClass", "Facs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Facs", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFlexOp : ClassData
        {
            public CFlexOp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexOp", "CFlexOp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexOp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexOp", "CFlexOp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexOp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint OpCode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OpCode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpCode", CallKind.ClassMember, m_classData, value); }
            }
            public int Data
            {
                get { return Invoker.CallNative<int>("SDKClass", "Data", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Data", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFlexRule : ClassData
        {
            public CFlexRule(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexRule", "CFlexRule", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexRule(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFlexRule", "CFlexRule", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFlexRule()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Flex
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFloatAnimParameter : CConcreteAnimParameter
        {
            public CFloatAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatAnimParameter", "CFloatAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatAnimParameter", "CFloatAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DefaultValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MinValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool Interpolate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Interpolate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interpolate", CallKind.ClassMember, m_classData, value); }
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFloatExponentialMovingAverage : ClassData
        {
            public CFloatExponentialMovingAverage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatExponentialMovingAverage", "CFloatExponentialMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatExponentialMovingAverage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatExponentialMovingAverage", "CFloatExponentialMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatExponentialMovingAverage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFloatMovingAverage : ClassData
        {
            public CFloatMovingAverage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatMovingAverage", "CFloatMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatMovingAverage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFloatMovingAverage", "CFloatMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFloatMovingAverage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFogController : CBaseEntity
        {
            public CFogController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogController", "CFogController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogController", "CFogController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public fogparams_t Fog
            {
                get { return Invoker.CallNative<fogparams_t>("SDKClass", "Fog", CallKind.ClassMember, m_classData); }
            }
            public bool UseAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAngles", CallKind.ClassMember, m_classData, value); }
            }
            public int ChangedVariables
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChangedVariables", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChangedVariables", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFogTrigger : CBaseTrigger
        {
            public CFogTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogTrigger", "CFogTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogTrigger", "CFogTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public fogparams_t Fog
            {
                get { return Invoker.CallNative<fogparams_t>("SDKClass", "Fog", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFogVolume : CServerOnlyModelEntity
        {
            public CFogVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogVolume", "CFogVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFogVolume", "CFogVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFogVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FogName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FogName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogName", CallKind.ClassMember, m_classData, value); }
            }
            public string PostProcessName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PostProcessName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostProcessName", CallKind.ClassMember, m_classData, value); }
            }
            public string ColorCorrectionName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ColorCorrectionName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorCorrectionName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool InFogVolumesList
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InFogVolumesList", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InFogVolumesList", CallKind.ClassMember, m_classData, value); }
            }
            public CServerOnlyModelEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFollowAttachmentUpdateNode : CUnaryUpdateNode
        {
            public CFollowAttachmentUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowAttachmentUpdateNode", "CFollowAttachmentUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowAttachmentUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowAttachmentUpdateNode", "CFollowAttachmentUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowAttachmentUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public FollowAttachmentSettings_t OpFixedData
            {
                get { return Invoker.CallNative<FollowAttachmentSettings_t>("SDKClass", "OpFixedData", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFollowPathUpdateNode : CUnaryUpdateNode
        {
            public CFollowPathUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowPathUpdateNode", "CFollowPathUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowPathUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowPathUpdateNode", "CFollowPathUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowPathUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float BlendOutTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendOutTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendOutTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool BlockNonPathMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BlockNonPathMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockNonPathMovement", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopFeetAtGoal
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopFeetAtGoal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopFeetAtGoal", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScaleSpeed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScaleSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public float MinAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float SpeedScaleBlending
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpeedScaleBlending", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedScaleBlending", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping TurnDamping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "TurnDamping", CallKind.ClassMember, m_classData); }
            }
            public uint FacingTarget
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle Param
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Param", CallKind.ClassMember, m_classData); }
            }
            public float TurnToFaceOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnToFaceOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnToFaceOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool TurnToFace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TurnToFace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnToFace", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFollowTargetUpdateNode : CUnaryUpdateNode
        {
            public CFollowTargetUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowTargetUpdateNode", "CFollowTargetUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowTargetUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFollowTargetUpdateNode", "CFollowTargetUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFollowTargetUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public FollowTargetOpFixedSettings_t OpFixedData
            {
                get { return Invoker.CallNative<FollowTargetOpFixedSettings_t>("SDKClass", "OpFixedData", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterPosition
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterPosition", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParameterOrientation
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParameterOrientation", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootAdjustmentUpdateNode : CUnaryUpdateNode
        {
            public CFootAdjustmentUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootAdjustmentUpdateNode", "CFootAdjustmentUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootAdjustmentUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootAdjustmentUpdateNode", "CFootAdjustmentUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootAdjustmentUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Clips
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Clips", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Clips", CallKind.ClassMember, m_classData, value); }
            }
            public CPoseHandle BasePoseCacheHandle
            {
                get { return Invoker.CallNative<CPoseHandle>("SDKClass", "BasePoseCacheHandle", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle FacingTarget
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData); }
            }
            public float TurnTimeMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnTimeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnTimeMin", CallKind.ClassMember, m_classData, value); }
            }
            public float TurnTimeMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnTimeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnTimeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float StepHeightMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "StepHeightMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StepHeightMax", CallKind.ClassMember, m_classData, value); }
            }
            public float StepHeightMaxAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "StepHeightMaxAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StepHeightMaxAngle", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimationDriven
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimationDriven", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationDriven", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootCycle : CCycleBase
        {
            public CFootCycle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycle", "CFootCycle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycle", "CFootCycle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCycleBase Parent
            {
                get { return Invoker.CallNative<CCycleBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootCycleDefinition : ClassData
        {
            public CFootCycleDefinition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycleDefinition", "CFootCycleDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycleDefinition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycleDefinition", "CFootCycleDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycleDefinition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D StancePositionMS
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StancePositionMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StancePositionMS", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MidpointPositionMS
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MidpointPositionMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MidpointPositionMS", CallKind.ClassMember, m_classData, value); }
            }
            public float StanceDirectionMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "StanceDirectionMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StanceDirectionMS", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ToStrideStartPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ToStrideStartPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToStrideStartPos", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimCycle StanceCycle
            {
                get { return Invoker.CallNative<CAnimCycle>("SDKClass", "StanceCycle", CallKind.ClassMember, m_classData); }
            }
            public CFootCycle FootLiftCycle
            {
                get { return Invoker.CallNative<CFootCycle>("SDKClass", "FootLiftCycle", CallKind.ClassMember, m_classData); }
            }
            public CFootCycle FootOffCycle
            {
                get { return Invoker.CallNative<CFootCycle>("SDKClass", "FootOffCycle", CallKind.ClassMember, m_classData); }
            }
            public CFootCycle FootStrikeCycle
            {
                get { return Invoker.CallNative<CFootCycle>("SDKClass", "FootStrikeCycle", CallKind.ClassMember, m_classData); }
            }
            public CFootCycle FootLandCycle
            {
                get { return Invoker.CallNative<CFootCycle>("SDKClass", "FootLandCycle", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootCycleMetricEvaluator : CMotionMetricEvaluator
        {
            public CFootCycleMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycleMetricEvaluator", "CFootCycleMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycleMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootCycleMetricEvaluator", "CFootCycleMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootCycleMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] FootIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FootIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndices", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootDefinition : ClassData
        {
            public CFootDefinition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootDefinition", "CFootDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootDefinition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootDefinition", "CFootDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootDefinition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string AnkleBoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AnkleBoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnkleBoneName", CallKind.ClassMember, m_classData, value); }
            }
            public string ToeBoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ToeBoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeBoneName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BallOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BallOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BallOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HeelOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float FootLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FootLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootLength", CallKind.ClassMember, m_classData, value); }
            }
            public float BindPoseDirectionMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "BindPoseDirectionMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BindPoseDirectionMS", CallKind.ClassMember, m_classData, value); }
            }
            public float TraceHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float TraceRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceRadius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFootFallAnimTag : CAnimTagBase
        {
            public CFootFallAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootFallAnimTag", "CFootFallAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootFallAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootFallAnimTag", "CFootFallAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootFallAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Foot
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Foot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Foot", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootLockUpdateNode : CUnaryUpdateNode
        {
            public CFootLockUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootLockUpdateNode", "CFootLockUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootLockUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootLockUpdateNode", "CFootLockUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootLockUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public FootLockPoseOpFixedSettings OpFixedSettings
            {
                get { return Invoker.CallNative<FootLockPoseOpFixedSettings>("SDKClass", "OpFixedSettings", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping HipShiftDamping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "HipShiftDamping", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping RootHeightDamping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "RootHeightDamping", CallKind.ClassMember, m_classData); }
            }
            public float StrideCurveScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StrideCurveScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrideCurveScale", CallKind.ClassMember, m_classData, value); }
            }
            public float StrideCurveLimitScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StrideCurveLimitScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrideCurveLimitScale", CallKind.ClassMember, m_classData, value); }
            }
            public float StepHeightIncreaseScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StepHeightIncreaseScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StepHeightIncreaseScale", CallKind.ClassMember, m_classData, value); }
            }
            public float StepHeightDecreaseScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StepHeightDecreaseScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StepHeightDecreaseScale", CallKind.ClassMember, m_classData, value); }
            }
            public float HipShiftScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HipShiftScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipShiftScale", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRootHeightOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRootHeightOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRootHeightOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float MinRootHeightOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinRootHeightOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinRootHeightOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float TiltPlanePitchSpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "TiltPlanePitchSpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TiltPlanePitchSpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float TiltPlaneRollSpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "TiltPlaneRollSpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TiltPlaneRollSpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyFootRotationLimits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyHipShift
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyHipShift", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyHipShift", CallKind.ClassMember, m_classData, value); }
            }
            public bool ModulateStepHeight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ModulateStepHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModulateStepHeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableVerticalCurvedPaths
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableVerticalCurvedPaths", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableVerticalCurvedPaths", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableRootHeightDamping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableRootHeightDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableRootHeightDamping", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootMotion : ClassData
        {
            public CFootMotion(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootMotion", "CFootMotion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootMotion(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootMotion", "CFootMotion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootMotion()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public bool Additive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Additive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Additive", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFootPinningUpdateNode : CUnaryUpdateNode
        {
            public CFootPinningUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootPinningUpdateNode", "CFootPinningUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootPinningUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootPinningUpdateNode", "CFootPinningUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootPinningUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public FootPinningPoseOpFixedData_t PoseOpFixedData
            {
                get { return Invoker.CallNative<FootPinningPoseOpFixedData_t>("SDKClass", "PoseOpFixedData", CallKind.ClassMember, m_classData); }
            }
            public uint TimingSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TimingSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimingSource", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootPositionMetricEvaluator : CMotionMetricEvaluator
        {
            public CFootPositionMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootPositionMetricEvaluator", "CFootPositionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootPositionMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootPositionMetricEvaluator", "CFootPositionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootPositionMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] FootIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FootIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndices", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreSlope
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreSlope", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreSlope", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootstepControl : CBaseTrigger
        {
            public CFootstepControl(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepControl", "CFootstepControl", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepControl(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepControl", "CFootstepControl", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepControl()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Source
            {
                get { return Invoker.CallNative<string>("SDKClass", "Source", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Source", CallKind.ClassMember, m_classData, value); }
            }
            public string Destination
            {
                get { return Invoker.CallNative<string>("SDKClass", "Destination", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Destination", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootstepLandedAnimTag : CAnimTagBase
        {
            public CFootstepLandedAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepLandedAnimTag", "CFootstepLandedAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepLandedAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepLandedAnimTag", "CFootstepLandedAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepLandedAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FootstepType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FootstepType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootstepType", CallKind.ClassMember, m_classData, value); }
            }
            public string OverrideSoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OverrideSoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideSoundName", CallKind.ClassMember, m_classData, value); }
            }
            public string DebugAnimSourceString
            {
                get { return Invoker.CallNative<string>("SDKClass", "DebugAnimSourceString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugAnimSourceString", CallKind.ClassMember, m_classData, value); }
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootstepTableHandle : ClassData
        {
            public CFootstepTableHandle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepTableHandle", "CFootstepTableHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepTableHandle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootstepTableHandle", "CFootstepTableHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootstepTableHandle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFootStepTriggerUpdateNode : CUnaryUpdateNode
        {
            public CFootStepTriggerUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootStepTriggerUpdateNode", "CFootStepTriggerUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootStepTriggerUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootStepTriggerUpdateNode", "CFootStepTriggerUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootStepTriggerUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Tolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Tolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tolerance", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootStride : ClassData
        {
            public CFootStride(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootStride", "CFootStride", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootStride(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootStride", "CFootStride", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootStride()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFootCycleDefinition Definition
            {
                get { return Invoker.CallNative<CFootCycleDefinition>("SDKClass", "Definition", CallKind.ClassMember, m_classData); }
            }
            public CFootTrajectories Trajectories
            {
                get { return Invoker.CallNative<CFootTrajectories>("SDKClass", "Trajectories", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFootTrajectories : ClassData
        {
            public CFootTrajectories(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootTrajectories", "CFootTrajectories", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootTrajectories(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootTrajectories", "CFootTrajectories", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootTrajectories()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFootTrajectory : ClassData
        {
            public CFootTrajectory(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootTrajectory", "CFootTrajectory", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootTrajectory(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFootTrajectory", "CFootTrajectory", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFootTrajectory()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public float RotationOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "RotationOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float Progression
            {
                get { return Invoker.CallNative<float>("SDKClass", "Progression", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Progression", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFuncBrush : CBaseModelEntity
        {
            public CFuncBrush(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncBrush", "CFuncBrush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncBrush(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncBrush", "CFuncBrush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncBrush()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Solidity
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Solidity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Solidity", CallKind.ClassMember, m_classData, value); }
            }
            public int Disabled
            {
                get { return Invoker.CallNative<int>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool SolidBsp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData, value); }
            }
            public string ExcludedClass
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExcludedClass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludedClass", CallKind.ClassMember, m_classData, value); }
            }
            public bool InvertExclusion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InvertExclusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InvertExclusion", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScriptedMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScriptedMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScriptedMovement", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncConveyor : CBaseModelEntity
        {
            public CFuncConveyor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncConveyor", "CFuncConveyor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncConveyor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncConveyor", "CFuncConveyor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncConveyor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ConveyorModels
            {
                get { return Invoker.CallNative<string>("SDKClass", "ConveyorModels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConveyorModels", CallKind.ClassMember, m_classData, value); }
            }
            public float TransitionDurationSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "TransitionDurationSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionDurationSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector MoveEntitySpace
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MoveDirEntitySpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MoveDirEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveDirEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public int TransitionStartTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "TransitionStartTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionStartTick", CallKind.ClassMember, m_classData, value); }
            }
            public int TransitionDurationTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "TransitionDurationTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionDurationTicks", CallKind.ClassMember, m_classData, value); }
            }
            public float TransitionStartSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TransitionStartSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionStartSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncElectrifiedVolume : CFuncBrush
        {
            public CFuncElectrifiedVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncElectrifiedVolume", "CFuncElectrifiedVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncElectrifiedVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncElectrifiedVolume", "CFuncElectrifiedVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncElectrifiedVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string EffectName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectName", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectInterpenetrateName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectInterpenetrateName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectInterpenetrateName", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectZapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectZapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectZapName", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectSource
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectSource", CallKind.ClassMember, m_classData, value); }
            }
            public CFuncBrush Parent
            {
                get { return Invoker.CallNative<CFuncBrush>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncIllusionary : CBaseModelEntity
        {
            public CFuncIllusionary(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncIllusionary", "CFuncIllusionary", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncIllusionary(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncIllusionary", "CFuncIllusionary", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncIllusionary()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncInteractionLayerClip : CBaseModelEntity
        {
            public CFuncInteractionLayerClip(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncInteractionLayerClip", "CFuncInteractionLayerClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncInteractionLayerClip(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncInteractionLayerClip", "CFuncInteractionLayerClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncInteractionLayerClip()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public string InteractsAs
            {
                get { return Invoker.CallNative<string>("SDKClass", "InteractsAs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractsAs", CallKind.ClassMember, m_classData, value); }
            }
            public string InteractsWith
            {
                get { return Invoker.CallNative<string>("SDKClass", "InteractsWith", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractsWith", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncLadder : CBaseModelEntity
        {
            public CFuncLadder(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncLadder", "CFuncLadder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncLadder(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncLadder", "CFuncLadder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncLadder()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LadderDir
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LadderDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LadderDir", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocalTop
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalTop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalTop", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PlayerMountPositionTop
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PlayerMountPositionTop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerMountPositionTop", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PlayerMountPositionBottom
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PlayerMountPositionBottom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerMountPositionBottom", CallKind.ClassMember, m_classData, value); }
            }
            public float AutoRideSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutoRideSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoRideSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool FakeLadder
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FakeLadder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FakeLadder", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasSlack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasSlack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasSlack", CallKind.ClassMember, m_classData, value); }
            }
            public string SurfacePropName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SurfacePropName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfacePropName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPlayerGotOnLadder
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerGotOnLadder", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerGotOffLadder
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerGotOffLadder", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncLadderAlias_func_useableladder : CFuncLadder
        {
            public CFuncLadderAlias_func_useableladder(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncLadderAlias_func_useableladder", "CFuncLadderAlias_func_useableladder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncLadderAlias_func_useableladder(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncLadderAlias_func_useableladder", "CFuncLadderAlias_func_useableladder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncLadderAlias_func_useableladder()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncLadder Parent
            {
                get { return Invoker.CallNative<CFuncLadder>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncMonitor : CFuncBrush
        {
            public CFuncMonitor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMonitor", "CFuncMonitor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMonitor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMonitor", "CFuncMonitor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMonitor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetCamera
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetCamera", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetCamera", CallKind.ClassMember, m_classData, value); }
            }
            public int ResolutionEnum
            {
                get { return Invoker.CallNative<int>("SDKClass", "ResolutionEnum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResolutionEnum", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderShadows", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseUniqueColorTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseUniqueColorTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseUniqueColorTarget", CallKind.ClassMember, m_classData, value); }
            }
            public string BrushModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BrushModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrushModelName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CFuncBrush Parent
            {
                get { return Invoker.CallNative<CFuncBrush>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncMoveLinear : CBaseToggle
        {
            public CFuncMoveLinear(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoveLinear", "CFuncMoveLinear", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoveLinear(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoveLinear", "CFuncMoveLinear", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoveLinear()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint AuthoredPosition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AuthoredPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AuthoredPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector MoveEntitySpace
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MoveDirParentSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MoveDirParentSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveDirParentSpace", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundStart
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundStart", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundStop
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundStop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundStop", CallKind.ClassMember, m_classData, value); }
            }
            public string CurrentSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "CurrentSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentSound", CallKind.ClassMember, m_classData, value); }
            }
            public float BlockDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData, value); }
            }
            public float StartPosition
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPosition", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnFullyOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyClosed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyClosed", CallKind.ClassMember, m_classData); }
            }
            public bool CreateMovableNavMesh
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateMovableNavMesh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateMovableNavMesh", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowMovableNavMeshDockingOnEntireEntity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowMovableNavMeshDockingOnEntireEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowMovableNavMeshDockingOnEntireEntity", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateNavObstacle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateNavObstacle", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncMoveLinearAlias_momentary_door : CFuncMoveLinear
        {
            public CFuncMoveLinearAlias_momentary_door(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoveLinearAlias_momentary_door", "CFuncMoveLinearAlias_momentary_door", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoveLinearAlias_momentary_door(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoveLinearAlias_momentary_door", "CFuncMoveLinearAlias_momentary_door", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoveLinearAlias_momentary_door()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncMoveLinear Parent
            {
                get { return Invoker.CallNative<CFuncMoveLinear>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncMover : CBaseModelEntity
        {
            public CFuncMover(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMover", "CFuncMover", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMover(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMover", "CFuncMover", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMover()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string PathName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathName", CallKind.ClassMember, m_classData, value); }
            }
            public CPathMover PathMover
            {
                get { return Invoker.CallNative<CPathMover>("SDKClass", "PathMover", CallKind.ClassMember, m_classData); }
            }
            public string PathNodeStart
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathNodeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodeStart", CallKind.ClassMember, m_classData, value); }
            }
            public string PathNodeEnd
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathNodeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public uint MoveType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MoveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveType", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsReversing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsReversing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsReversing", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Target
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public float StartSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float PathLocation
            {
                get { return Invoker.CallNative<float>("SDKClass", "PathLocation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathLocation", CallKind.ClassMember, m_classData, value); }
            }
            public float T
            {
                get { return Invoker.CallNative<float>("SDKClass", "T", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "T", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentNodeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentNodeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentNodeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int PreviousNodeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "PreviousNodeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviousNodeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public byte SolidType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SolidType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidType", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsMoving
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsMoving", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeToReachMaxSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToReachMaxSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToReachMaxSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceToReachMaxSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceToReachMaxSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceToReachMaxSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeToReachZeroSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToReachZeroSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToReachZeroSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceToReachZeroSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceToReachZeroSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceToReachZeroSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeMovementStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeMovementStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeMovementStart", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeMovementStop
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeMovementStop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeMovementStop", CallKind.ClassMember, m_classData, value); }
            }
            public CMoverPathNode StopAtNode
            {
                get { return Invoker.CallNative<CMoverPathNode>("SDKClass", "StopAtNode", CallKind.ClassMember, m_classData); }
            }
            public float PathLocationToBeginStop
            {
                get { return Invoker.CallNative<float>("SDKClass", "PathLocationToBeginStop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathLocationToBeginStop", CallKind.ClassMember, m_classData, value); }
            }
            public string StartForwardSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "StartForwardSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartForwardSound", CallKind.ClassMember, m_classData, value); }
            }
            public string LoopForwardSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "LoopForwardSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopForwardSound", CallKind.ClassMember, m_classData, value); }
            }
            public string StopForwardSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "StopForwardSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopForwardSound", CallKind.ClassMember, m_classData, value); }
            }
            public string StartReverseSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "StartReverseSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartReverseSound", CallKind.ClassMember, m_classData, value); }
            }
            public string LoopReverseSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "LoopReverseSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopReverseSound", CallKind.ClassMember, m_classData, value); }
            }
            public string StopReverseSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "StopReverseSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopReverseSound", CallKind.ClassMember, m_classData, value); }
            }
            public string ArriveAtDestinationSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "ArriveAtDestinationSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ArriveAtDestinationSound", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnMovementEnd
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMovementEnd", CallKind.ClassMember, m_classData); }
            }
            public bool StartAtClosestPoint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartAtClosestPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartAtClosestPoint", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartAtEnd
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartAtEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartAtEnd", CallKind.ClassMember, m_classData, value); }
            }
            public uint OrientationUpdate
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OrientationUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeStartOrientationChange
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeStartOrientationChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeStartOrientationChange", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeToBlendToNewOrientation
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToBlendToNewOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToBlendToNewOrientation", CallKind.ClassMember, m_classData, value); }
            }
            public float DurationBlendToNewOrientationRan
            {
                get { return Invoker.CallNative<float>("SDKClass", "DurationBlendToNewOrientationRan", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DurationBlendToNewOrientationRan", CallKind.ClassMember, m_classData, value); }
            }
            public int OriginalOrientationIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "OriginalOrientationIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalOrientationIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateMovableNavMesh
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateMovableNavMesh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateMovableNavMesh", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowMovableNavMeshDockingOnEntireEntity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowMovableNavMeshDockingOnEntireEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowMovableNavMeshDockingOnEntireEntity", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnNodePassed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNodePassed", CallKind.ClassMember, m_classData); }
            }
            public string OrientationMatchEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OrientationMatchEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationMatchEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity OrientationMatchEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "OrientationMatchEntity", CallKind.ClassMember, m_classData); }
            }
            public float TimeToTraverseToNextNode
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToTraverseToNextNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToTraverseToNextNode", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LerpToNewPosStartInPathEntitySpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LerpToNewPosStartInPathEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpToNewPosStartInPathEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LerpToNewPosEndInPathEntitySpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LerpToNewPosEndInPathEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpToNewPosEndInPathEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public float LerpToPositionT
            {
                get { return Invoker.CallNative<float>("SDKClass", "LerpToPositionT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpToPositionT", CallKind.ClassMember, m_classData, value); }
            }
            public float LerpToPositionDeltaT
            {
                get { return Invoker.CallNative<float>("SDKClass", "LerpToPositionDeltaT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpToPositionDeltaT", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnLerpToPositionComplete
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLerpToPositionComplete", CallKind.ClassMember, m_classData); }
            }
            public bool IsPaused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPaused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPaused", CallKind.ClassMember, m_classData, value); }
            }
            public uint TransitionedToPathNodeAction
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TransitionedToPathNodeAction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionedToPathNodeAction", CallKind.ClassMember, m_classData, value); }
            }
            public int DelayedTeleportToNode
            {
                get { return Invoker.CallNative<int>("SDKClass", "DelayedTeleportToNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DelayedTeleportToNode", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsVerboseLogging
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsVerboseLogging", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsVerboseLogging", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity FollowEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "FollowEntity", CallKind.ClassMember, m_classData); }
            }
            public float FollowDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FollowDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FollowMinimumSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "FollowMinimumSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowMinimumSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float CurFollowEntityT
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurFollowEntityT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurFollowEntityT", CallKind.ClassMember, m_classData, value); }
            }
            public float CurFollowSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurFollowSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurFollowSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public string StrOrientationFaceEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrOrientationFaceEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrOrientationFaceEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity OrientationFaceEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "OrientationFaceEntity", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartForward
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartForward", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartReverse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartReverse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStop
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStop", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStopped
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStopped", CallKind.ClassMember, m_classData); }
            }
            public bool NextNodeReturnsCurrent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NextNodeReturnsCurrent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextNodeReturnsCurrent", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartedMoving
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartedMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartedMoving", CallKind.ClassMember, m_classData, value); }
            }
            public uint FollowEntityDirection
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FollowEntityDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowEntityDirection", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncMoverAPI : ClassData
        {
            public CFuncMoverAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoverAPI", "CFuncMoverAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoverAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncMoverAPI", "CFuncMoverAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncMoverAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFuncNavBlocker : CBaseModelEntity
        {
            public CFuncNavBlocker(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncNavBlocker", "CFuncNavBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncNavBlocker(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncNavBlocker", "CFuncNavBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncNavBlocker()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public int BlockedTeamNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "BlockedTeamNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockedTeamNumber", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncNavObstruction : CBaseModelEntity
        {
            public CFuncNavObstruction(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncNavObstruction", "CFuncNavObstruction", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncNavObstruction(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncNavObstruction", "CFuncNavObstruction", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncNavObstruction()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseAsyncObstacleUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAsyncObstacleUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAsyncObstacleUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncPlat : CBasePlatTrain
        {
            public CFuncPlat(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPlat", "CFuncPlat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPlat(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPlat", "CFuncPlat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPlat()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Noise
            {
                get { return Invoker.CallNative<string>("SDKClass", "Noise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Noise", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlatTrain Parent
            {
                get { return Invoker.CallNative<CBasePlatTrain>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncPlatRot : CFuncPlat
        {
            public CFuncPlatRot(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPlatRot", "CFuncPlatRot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPlatRot(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPlatRot", "CFuncPlatRot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPlatRot()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector End
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Start
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public CFuncPlat Parent
            {
                get { return Invoker.CallNative<CFuncPlat>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncPropRespawnZone : CBaseEntity
        {
            public CFuncPropRespawnZone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPropRespawnZone", "CFuncPropRespawnZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPropRespawnZone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncPropRespawnZone", "CFuncPropRespawnZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncPropRespawnZone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncRotating : CBaseModelEntity
        {
            public CFuncRotating(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncRotating", "CFuncRotating", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncRotating(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncRotating", "CFuncRotating", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncRotating()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnStopped
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStopped", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStarted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStarted", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnReachedStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnReachedStart", CallKind.ClassMember, m_classData); }
            }
            public Vector2D LocalRotationVector
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalRotationVector", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalRotationVector", CallKind.ClassMember, m_classData, value); }
            }
            public float FanFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "FanFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float Attenuation
            {
                get { return Invoker.CallNative<float>("SDKClass", "Attenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Attenuation", CallKind.ClassMember, m_classData, value); }
            }
            public float Volume
            {
                get { return Invoker.CallNative<float>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volume", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float BlockDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData, value); }
            }
            public string NoiseRunning
            {
                get { return Invoker.CallNative<string>("SDKClass", "NoiseRunning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseRunning", CallKind.ClassMember, m_classData, value); }
            }
            public bool Reversed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Reversed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Reversed", CallKind.ClassMember, m_classData, value); }
            }
            public bool AccelDecel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AccelDecel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccelDecel", CallKind.ClassMember, m_classData, value); }
            }
            public Vector PrevLocalAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PrevLocalAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevLocalAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Start
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopAtStartPos
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopAtStartPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopAtStartPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ClientOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ClientOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector ClientAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "ClientAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientAngles", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncShatterglass : CBaseModelEntity
        {
            public CFuncShatterglass(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncShatterglass", "CFuncShatterglass", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncShatterglass(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncShatterglass", "CFuncShatterglass", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncShatterglass()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] ShatterGlassShards
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ShatterGlassShards", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShatterGlassShards", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D PanelSize
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "PanelSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelSize", CallKind.ClassMember, m_classData, value); }
            }
            public float LastShatterSoundEmitTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastShatterSoundEmitTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastShatterSoundEmitTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastCleanupTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastCleanupTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastCleanupTime", CallKind.ClassMember, m_classData, value); }
            }
            public float InitAtTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitAtTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitAtTime", CallKind.ClassMember, m_classData, value); }
            }
            public float GlassThickness
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlassThickness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlassThickness", CallKind.ClassMember, m_classData, value); }
            }
            public float SpawnInvulnerability
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpawnInvulnerability", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnInvulnerability", CallKind.ClassMember, m_classData, value); }
            }
            public bool BreakSilent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BreakSilent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakSilent", CallKind.ClassMember, m_classData, value); }
            }
            public bool BreakShardless
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BreakShardless", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakShardless", CallKind.ClassMember, m_classData, value); }
            }
            public bool Broken
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Broken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Broken", CallKind.ClassMember, m_classData, value); }
            }
            public bool GlassNavIgnore
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GlassNavIgnore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlassNavIgnore", CallKind.ClassMember, m_classData, value); }
            }
            public bool GlassInFrame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GlassInFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlassInFrame", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartBroken
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartBroken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartBroken", CallKind.ClassMember, m_classData, value); }
            }
            public byte InitialDamageType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "InitialDamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialDamageType", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] InitialDamagePositions
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "InitialDamagePositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialDamagePositions", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] ExtraDamagePositions
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "ExtraDamagePositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtraDamagePositions", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D[] InitialPanelVertices
            {
                get { return Invoker.CallNative<Vector2D[]>("SDKClass", "InitialPanelVertices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialPanelVertices", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBroken
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBroken", CallKind.ClassMember, m_classData); }
            }
            public byte SurfaceType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SurfaceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTankTrain : CFuncTrackTrain
        {
            public CFuncTankTrain(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTankTrain", "CFuncTankTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTankTrain(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTankTrain", "CFuncTankTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTankTrain()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnDeath
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDeath", CallKind.ClassMember, m_classData); }
            }
            public CFuncTrackTrain Parent
            {
                get { return Invoker.CallNative<CFuncTrackTrain>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTimescale : CBaseEntity
        {
            public CFuncTimescale(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTimescale", "CFuncTimescale", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTimescale(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTimescale", "CFuncTimescale", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTimescale()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DesiredTimescale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DesiredTimescale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredTimescale", CallKind.ClassMember, m_classData, value); }
            }
            public float Acceleration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Acceleration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Acceleration", CallKind.ClassMember, m_classData, value); }
            }
            public float MinBlendRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinBlendRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBlendRate", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendDeltaMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendDeltaMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendDeltaMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsStarted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsStarted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsStarted", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTrackAuto : CFuncTrackChange
        {
            public CFuncTrackAuto(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackAuto", "CFuncTrackAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackAuto(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackAuto", "CFuncTrackAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackAuto()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncTrackChange Parent
            {
                get { return Invoker.CallNative<CFuncTrackChange>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTrackChange : CFuncPlatRot
        {
            public CFuncTrackChange(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackChange", "CFuncTrackChange", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackChange(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackChange", "CFuncTrackChange", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackChange()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] TrackTop
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "TrackTop", CallKind.ClassMember, m_classData); }
            }
            public int[] TrackBottom
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "TrackBottom", CallKind.ClassMember, m_classData); }
            }
            public int[] Train
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Train", CallKind.ClassMember, m_classData); }
            }
            public string TrackTopName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TrackTopName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TrackTopName", CallKind.ClassMember, m_classData, value); }
            }
            public string TrackBottomName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TrackBottomName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TrackBottomName", CallKind.ClassMember, m_classData, value); }
            }
            public string TrainName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TrainName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TrainName", CallKind.ClassMember, m_classData, value); }
            }
            public uint Code
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Code", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Code", CallKind.ClassMember, m_classData, value); }
            }
            public int TargetState
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetState", CallKind.ClassMember, m_classData, value); }
            }
            public int Use
            {
                get { return Invoker.CallNative<int>("SDKClass", "Use", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Use", CallKind.ClassMember, m_classData, value); }
            }
            public CFuncPlatRot Parent
            {
                get { return Invoker.CallNative<CFuncPlatRot>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTrackTrain : CBaseModelEntity
        {
            public CFuncTrackTrain(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackTrain", "CFuncTrackTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackTrain(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrackTrain", "CFuncTrackTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrackTrain()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathTrack Ppath
            {
                get { return Invoker.CallNative<CPathTrack>("SDKClass", "Ppath", CallKind.ClassMember, m_classData); }
            }
            public float Length
            {
                get { return Invoker.CallNative<float>("SDKClass", "Length", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Length", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PosPrev
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PosPrev", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PosPrev", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Prev
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Prev", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Prev", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ControlMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ControlMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ControlMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ControlMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastBlockPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastBlockPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastBlockPos", CallKind.ClassMember, m_classData, value); }
            }
            public int LastBlockTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastBlockTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastBlockTick", CallKind.ClassMember, m_classData, value); }
            }
            public float Volume
            {
                get { return Invoker.CallNative<float>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volume", CallKind.ClassMember, m_classData, value); }
            }
            public float Bank
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bank", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bank", CallKind.ClassMember, m_classData, value); }
            }
            public float OldSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float BlockDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float Dir
            {
                get { return Invoker.CallNative<float>("SDKClass", "Dir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dir", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundMove
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundMove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundMove", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundMovePing
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundMovePing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundMovePing", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundStart
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundStart", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundStop
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundStop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundStop", CallKind.ClassMember, m_classData, value); }
            }
            public string StrPathTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrPathTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrPathTarget", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSoundMinDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSoundMinDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSoundMinDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSoundMaxDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSoundMaxDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSoundMaxDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float NextMoveSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextMoveSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextMoveSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSoundMinPitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSoundMinPitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSoundMinPitch", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSoundMaxPitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSoundMaxPitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSoundMaxPitch", CallKind.ClassMember, m_classData, value); }
            }
            public uint OrientationType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OrientationType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationType", CallKind.ClassMember, m_classData, value); }
            }
            public uint VelocityType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VelocityType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VelocityType", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNext
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNext", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnArrivedAtDestinationNode
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnArrivedAtDestinationNode", CallKind.ClassMember, m_classData); }
            }
            public bool ManualSpeedChanges
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ManualSpeedChanges", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ManualSpeedChanges", CallKind.ClassMember, m_classData, value); }
            }
            public float DesiredSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DesiredSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DesiredSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float SpeedChangeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpeedChangeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedChangeTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AccelSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "AccelSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccelSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float DecelSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DecelSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecelSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool AccelToSpeed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AccelToSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccelToSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float NextMPSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextMPSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextMPSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTrain : CBasePlatTrain
        {
            public CFuncTrain(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrain", "CFuncTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrain(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrain", "CFuncTrain", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrain()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity CurrentTarget
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "CurrentTarget", CallKind.ClassMember, m_classData); }
            }
            public bool Activated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Activated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Activated", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Enemy
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Enemy", CallKind.ClassMember, m_classData); }
            }
            public float BlockDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockDamage", CallKind.ClassMember, m_classData, value); }
            }
            public float NextBlockTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextBlockTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextBlockTime", CallKind.ClassMember, m_classData, value); }
            }
            public string LastTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "LastTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlatTrain Parent
            {
                get { return Invoker.CallNative<CBasePlatTrain>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncTrainControls : CBaseModelEntity
        {
            public CFuncTrainControls(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrainControls", "CFuncTrainControls", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrainControls(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncTrainControls", "CFuncTrainControls", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncTrainControls()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncVehicleClip : CBaseModelEntity
        {
            public CFuncVehicleClip(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncVehicleClip", "CFuncVehicleClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncVehicleClip(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncVehicleClip", "CFuncVehicleClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncVehicleClip()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncVPhysicsClip : CBaseModelEntity
        {
            public CFuncVPhysicsClip(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncVPhysicsClip", "CFuncVPhysicsClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncVPhysicsClip(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncVPhysicsClip", "CFuncVPhysicsClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncVPhysicsClip()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncWall : CBaseModelEntity
        {
            public CFuncWall(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWall", "CFuncWall", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWall(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWall", "CFuncWall", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWall()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int State
            {
                get { return Invoker.CallNative<int>("SDKClass", "State", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "State", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncWallToggle : CFuncWall
        {
            public CFuncWallToggle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWallToggle", "CFuncWallToggle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWallToggle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWallToggle", "CFuncWallToggle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWallToggle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncWall Parent
            {
                get { return Invoker.CallNative<CFuncWall>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuncWater : CBaseModelEntity
        {
            public CFuncWater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWater", "CFuncWater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuncWater", "CFuncWater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuncWater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBuoyancyHelper BuoyancyHelper
            {
                get { return Invoker.CallNative<CBuoyancyHelper>("SDKClass", "BuoyancyHelper", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFuseProgram : ClassData
        {
            public CFuseProgram(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuseProgram", "CFuseProgram", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuseProgram(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuseProgram", "CFuseProgram", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuseProgram()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte[] ProgramBuffer
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "ProgramBuffer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProgramBuffer", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxTempVarsUsed
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxTempVarsUsed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTempVarsUsed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CFuseSymbolTable : ClassData
        {
            public CFuseSymbolTable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuseSymbolTable", "CFuseSymbolTable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuseSymbolTable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFuseSymbolTable", "CFuseSymbolTable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFuseSymbolTable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CFutureFacingMetricEvaluator : CMotionMetricEvaluator
        {
            public CFutureFacingMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFutureFacingMetricEvaluator", "CFutureFacingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFutureFacingMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFutureFacingMetricEvaluator", "CFutureFacingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFutureFacingMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public float Time
            {
                get { return Invoker.CallNative<float>("SDKClass", "Time", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Time", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CFutureVelocityMetricEvaluator : CMotionMetricEvaluator
        {
            public CFutureVelocityMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFutureVelocityMetricEvaluator", "CFutureVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFutureVelocityMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CFutureVelocityMetricEvaluator", "CFutureVelocityMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CFutureVelocityMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public float StoppingDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "StoppingDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StoppingDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public byte Mode
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameChoreoServices : IChoreoServices
        {
            public CGameChoreoServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameChoreoServices", "CGameChoreoServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameChoreoServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameChoreoServices", "CGameChoreoServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameChoreoServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseAnimGraph Owner
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public CScriptedSequence ScriptedSequence
            {
                get { return Invoker.CallNative<CScriptedSequence>("SDKClass", "ScriptedSequence", CallKind.ClassMember, m_classData); }
            }
            public float TimeStartedState
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeStartedState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeStartedState", CallKind.ClassMember, m_classData, value); }
            }
            public IChoreoServices Parent
            {
                get { return Invoker.CallNative<IChoreoServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameEnd : CRulePointEntity
        {
            public CGameEnd(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameEnd", "CGameEnd", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameEnd(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameEnd", "CGameEnd", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameEnd()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRulePointEntity Parent
            {
                get { return Invoker.CallNative<CRulePointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameGibManager : CBaseEntity
        {
            public CGameGibManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameGibManager", "CGameGibManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameGibManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameGibManager", "CGameGibManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameGibManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool AllowNewGibs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowNewGibs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowNewGibs", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentMaxPieces
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentMaxPieces", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentMaxPieces", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxPieces
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxPieces", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxPieces", CallKind.ClassMember, m_classData, value); }
            }
            public int LastFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameMoney : CRulePointEntity
        {
            public CGameMoney(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameMoney", "CGameMoney", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameMoney(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameMoney", "CGameMoney", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameMoney()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnMoneySpent
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMoneySpent", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMoneySpentFail
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMoneySpentFail", CallKind.ClassMember, m_classData); }
            }
            public int Money
            {
                get { return Invoker.CallNative<int>("SDKClass", "Money", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Money", CallKind.ClassMember, m_classData, value); }
            }
            public string StrAwardText
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrAwardText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrAwardText", CallKind.ClassMember, m_classData, value); }
            }
            public CRulePointEntity Parent
            {
                get { return Invoker.CallNative<CRulePointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGamePlayerEquip : CRulePointEntity
        {
            public CGamePlayerEquip(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGamePlayerEquip", "CGamePlayerEquip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGamePlayerEquip(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGamePlayerEquip", "CGamePlayerEquip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGamePlayerEquip()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRulePointEntity Parent
            {
                get { return Invoker.CallNative<CRulePointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGamePlayerZone : CRuleBrushEntity
        {
            public CGamePlayerZone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGamePlayerZone", "CGamePlayerZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGamePlayerZone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGamePlayerZone", "CGamePlayerZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGamePlayerZone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnPlayerInZone
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerInZone", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerOutZone
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerOutZone", CallKind.ClassMember, m_classData); }
            }
            public CRuleBrushEntity Parent
            {
                get { return Invoker.CallNative<CRuleBrushEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameRules : ClassData
        {
            public CGameRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameRules", "CGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameRules", "CGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
            public string QuestName
            {
                get { return Invoker.CallNative<string>("SDKClass", "QuestName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuestName", CallKind.ClassMember, m_classData, value); }
            }
            public int QuestPhase
            {
                get { return Invoker.CallNative<int>("SDKClass", "QuestPhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuestPhase", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalPausedTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalPausedTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalPausedTicks", CallKind.ClassMember, m_classData, value); }
            }
            public int PauseStartTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "PauseStartTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PauseStartTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool GamePaused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GamePaused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GamePaused", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CGameRulesProxy : CBaseEntity
        {
            public CGameRulesProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameRulesProxy", "CGameRulesProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameRulesProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameRulesProxy", "CGameRulesProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameRulesProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameSceneNode : ClassData
        {
            public CGameSceneNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameSceneNode", "CGameSceneNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameSceneNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameSceneNode", "CGameSceneNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameSceneNode()
            {
            }
            public CSkeletonInstance GetSkeletonInstance()
            {
                return Internal_API.Invoker.CallNative<CSkeletonInstance>("SDKClass", "GetSkeletonInstance", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Owner
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public int[] Parent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
            public int[] Child
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
            }
            public int[] NextSibling
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "NextSibling", CallKind.ClassMember, m_classData); }
            }
            public CNetworkOriginCellCoordQuantizedVector Origin
            {
                get { return Invoker.CallNative<CNetworkOriginCellCoordQuantizedVector>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
            }
            public Vector Rotation
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Rotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rotation", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AbsOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AbsOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbsOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AbsRotation
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AbsRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbsRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float AbsScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "AbsScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AbsScale", CallKind.ClassMember, m_classData, value); }
            }
            public short ParentAttachmentOrBone
            {
                get { return Invoker.CallNative<short>("SDKClass", "ParentAttachmentOrBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentAttachmentOrBone", CallKind.ClassMember, m_classData, value); }
            }
            public bool DebugAbsOriginChanges
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DebugAbsOriginChanges", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugAbsOriginChanges", CallKind.ClassMember, m_classData, value); }
            }
            public bool Dormant
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Dormant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dormant", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceParentToBeNetworked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceParentToBeNetworked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceParentToBeNetworked", CallKind.ClassMember, m_classData, value); }
            }
            public byte HierarchicalDepth
            {
                get { return Invoker.CallNative<byte>("SDKClass", "HierarchicalDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HierarchicalDepth", CallKind.ClassMember, m_classData, value); }
            }
            public byte HierarchyType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "HierarchyType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HierarchyType", CallKind.ClassMember, m_classData, value); }
            }
            public byte DoNotSetAnimTimeInInvalidatePhysicsCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DoNotSetAnimTimeInInvalidatePhysicsCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DoNotSetAnimTimeInInvalidatePhysicsCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint Name
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint HierarchyAttachName
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HierarchyAttachName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HierarchyAttachName", CallKind.ClassMember, m_classData, value); }
            }
            public float ZOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "ZOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float ClientLocalScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ClientLocalScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientLocalScale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RenderOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RenderOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOrigin", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CGameScriptedMoveData : ClassData
        {
            public CGameScriptedMoveData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameScriptedMoveData", "CGameScriptedMoveData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameScriptedMoveData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameScriptedMoveData", "CGameScriptedMoveData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameScriptedMoveData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D AccumulatedRootMotion
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AccumulatedRootMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccumulatedRootMotion", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AccumulatedRootMotionRotation
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AccumulatedRootMotionRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccumulatedRootMotionRotation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Src
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Src", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Src", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Current
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Current", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Current", CallKind.ClassMember, m_classData, value); }
            }
            public float LockedSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "LockedSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockedSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float AngRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngRate", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool TeleportOnEnd
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TeleportOnEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeleportOnEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData, value); }
            }
            public bool Success
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Success", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Success", CallKind.ClassMember, m_classData, value); }
            }
            public uint ForcedCrouchState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreCollisions
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreCollisions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreCollisions", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Dest
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Dest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dest", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Dst
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Dst", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dst", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity DestEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "DestEntity", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGameScriptedMoveDef_t : ClassData
        {
            public CGameScriptedMoveDef_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameScriptedMoveDef_t", "CGameScriptedMoveDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameScriptedMoveDef_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameScriptedMoveDef_t", "CGameScriptedMoveDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameScriptedMoveDef_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DestOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DestOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity DestEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "DestEntity", CallKind.ClassMember, m_classData); }
            }
            public Vector Dest
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Dest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dest", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float AngRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngRate", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool AimDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AimDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AimDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData, value); }
            }
            public uint ForcedCrouchState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CGameText : CRulePointEntity
        {
            public CGameText(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameText", "CGameText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameText(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGameText", "CGameText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGameText()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Message
            {
                get { return Invoker.CallNative<string>("SDKClass", "Message", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Message", CallKind.ClassMember, m_classData, value); }
            }
            public hudtextparms_t TextParms
            {
                get { return Invoker.CallNative<hudtextparms_t>("SDKClass", "TextParms", CallKind.ClassMember, m_classData); }
            }
            public CRulePointEntity Parent
            {
                get { return Invoker.CallNative<CRulePointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGeneralRandomRotation : CParticleFunctionInitializer
        {
            public CGeneralRandomRotation(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGeneralRandomRotation", "CGeneralRandomRotation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGeneralRandomRotation(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGeneralRandomRotation", "CGeneralRandomRotation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGeneralRandomRotation()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ParticleAttributeIndex_t FieldOutput
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "FieldOutput", CallKind.ClassMember, m_classData); }
            }
            public float Degrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "Degrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Degrees", CallKind.ClassMember, m_classData, value); }
            }
            public float DegreesMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DegreesMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DegreesMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DegreesMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DegreesMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DegreesMax", CallKind.ClassMember, m_classData, value); }
            }
            public float RotationRandExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "RotationRandExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationRandExponent", CallKind.ClassMember, m_classData, value); }
            }
            public bool RandomlyFlipDirection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RandomlyFlipDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomlyFlipDirection", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunctionInitializer Parent
            {
                get { return Invoker.CallNative<CParticleFunctionInitializer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGeneralSpin : CParticleFunctionOperator
        {
            public CGeneralSpin(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGeneralSpin", "CGeneralSpin", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGeneralSpin(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGeneralSpin", "CGeneralSpin", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGeneralSpin()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SpinRateDegrees
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpinRateDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinRateDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public int SpinRateMinDegrees
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpinRateMinDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinRateMinDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public float SpinRateStopTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpinRateStopTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinRateStopTime", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunctionOperator Parent
            {
                get { return Invoker.CallNative<CParticleFunctionOperator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGenericConstraint : CPhysConstraint
        {
            public CGenericConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGenericConstraint", "CGenericConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGenericConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGenericConstraint", "CGenericConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGenericConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint LinearMotionX
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LinearMotionX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearMotionX", CallKind.ClassMember, m_classData, value); }
            }
            public uint LinearMotionY
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LinearMotionY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearMotionY", CallKind.ClassMember, m_classData, value); }
            }
            public uint LinearMotionZ
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LinearMotionZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearMotionZ", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearFrequencyX
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequencyX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequencyX", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearFrequencyY
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequencyY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequencyY", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearFrequencyZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequencyZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequencyZ", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDampingRatioX
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDampingRatioX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDampingRatioX", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDampingRatioY
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDampingRatioY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDampingRatioY", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDampingRatioZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDampingRatioZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDampingRatioZ", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLinearImpulseX
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLinearImpulseX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLinearImpulseX", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLinearImpulseY
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLinearImpulseY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLinearImpulseY", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLinearImpulseZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLinearImpulseZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLinearImpulseZ", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeX
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeX", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeY
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeY", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeZ", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeStartTimeX
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeStartTimeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeStartTimeX", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeStartTimeY
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeStartTimeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeStartTimeY", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeStartTimeZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeStartTimeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeStartTimeZ", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeThresholdX
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeThresholdX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeThresholdX", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeThresholdY
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeThresholdY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeThresholdY", CallKind.ClassMember, m_classData, value); }
            }
            public float BreakAfterTimeThresholdZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "BreakAfterTimeThresholdZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakAfterTimeThresholdZ", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceX
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceX", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceY
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceY", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceZ", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceMinTimeX
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceMinTimeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceMinTimeX", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceMinTimeY
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceMinTimeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceMinTimeY", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceMinTimeZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceMinTimeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceMinTimeZ", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceLastTimeX
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceLastTimeX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceLastTimeX", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceLastTimeY
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceLastTimeY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceLastTimeY", CallKind.ClassMember, m_classData, value); }
            }
            public float NotifyForceLastTimeZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotifyForceLastTimeZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotifyForceLastTimeZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool AxisNotifiedX
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AxisNotifiedX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxisNotifiedX", CallKind.ClassMember, m_classData, value); }
            }
            public bool AxisNotifiedY
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AxisNotifiedY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxisNotifiedY", CallKind.ClassMember, m_classData, value); }
            }
            public bool AxisNotifiedZ
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AxisNotifiedZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxisNotifiedZ", CallKind.ClassMember, m_classData, value); }
            }
            public uint AngularMotionX
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AngularMotionX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularMotionX", CallKind.ClassMember, m_classData, value); }
            }
            public uint AngularMotionY
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AngularMotionY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularMotionY", CallKind.ClassMember, m_classData, value); }
            }
            public uint AngularMotionZ
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AngularMotionZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularMotionZ", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularFrequencyX
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularFrequencyX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularFrequencyX", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularFrequencyY
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularFrequencyY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularFrequencyY", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularFrequencyZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularFrequencyZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularFrequencyZ", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDampingRatioX
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDampingRatioX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDampingRatioX", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDampingRatioY
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDampingRatioY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDampingRatioY", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDampingRatioZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDampingRatioZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDampingRatioZ", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngularImpulseX
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngularImpulseX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngularImpulseX", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngularImpulseY
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngularImpulseY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngularImpulseY", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngularImpulseZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngularImpulseZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngularImpulseZ", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput NotifyForceReachedX
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "NotifyForceReachedX", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput NotifyForceReachedY
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "NotifyForceReachedY", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput NotifyForceReachedZ
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "NotifyForceReachedZ", CallKind.ClassMember, m_classData); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGlobalLightBase : ClassData
        {
            public CGlobalLightBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGlobalLightBase", "CGlobalLightBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGlobalLightBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGlobalLightBase", "CGlobalLightBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGlobalLightBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool SpotLight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SpotLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotLight", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpotLightOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpotLightOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotLightOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector SpotLightAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "SpotLightAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotLightAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ShadowDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ShadowDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowDirection", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AmbientDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AmbientDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AmbientDirection", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpecularDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpecularDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecularDirection", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D InspectorSpecularDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InspectorSpecularDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InspectorSpecularDirection", CallKind.ClassMember, m_classData, value); }
            }
            public float SpecularPower
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpecularPower", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecularPower", CallKind.ClassMember, m_classData, value); }
            }
            public float SpecularIndependence
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpecularIndependence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecularIndependence", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle SpecularColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "SpecularColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpecularColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle LightColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "LightColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightColor", CallKind.ClassMember, m_classData, value); }
            }
            public float SunDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "SunDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SunDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "FOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOV", CallKind.ClassMember, m_classData, value); }
            }
            public float NearZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearZ", CallKind.ClassMember, m_classData, value); }
            }
            public float FarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData, value); }
            }
            public bool OldEnableShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OldEnableShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldEnableShadows", CallKind.ClassMember, m_classData, value); }
            }
            public bool BackgroundClearNotRequired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BackgroundClearNotRequired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackgroundClearNotRequired", CallKind.ClassMember, m_classData, value); }
            }
            public float CloudScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "CloudScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CloudScale", CallKind.ClassMember, m_classData, value); }
            }
            public float GroundScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "GroundScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundScale", CallKind.ClassMember, m_classData, value); }
            }
            public float LightScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightScale", CallKind.ClassMember, m_classData, value); }
            }
            public float FoWDarkness
            {
                get { return Invoker.CallNative<float>("SDKClass", "FoWDarkness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FoWDarkness", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSeparateSkyboxFog
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSeparateSkyboxFog", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSeparateSkyboxFog", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D FowColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FowColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FowColor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ViewOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ViewOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector ViewAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "ViewAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewAngles", CallKind.ClassMember, m_classData, value); }
            }
            public float ViewFoV
            {
                get { return Invoker.CallNative<float>("SDKClass", "ViewFoV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewFoV", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] WorldPoints
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "WorldPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldPoints", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity EnvWind
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EnvWind", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity EnvSky
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EnvSky", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGlowProperty : ClassData
        {
            public CGlowProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGlowProperty", "CGlowProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGlowProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGlowProperty", "CGlowProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGlowProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D GlowColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GlowColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowColor", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowType
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowType", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowTeam
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowTeam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowTeam", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRange
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRange", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRangeMin
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle GlowColorOverride
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "GlowColorOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowColorOverride", CallKind.ClassMember, m_classData, value); }
            }
            public bool Flashing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Flashing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flashing", CallKind.ClassMember, m_classData, value); }
            }
            public float GlowTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlowTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowTime", CallKind.ClassMember, m_classData, value); }
            }
            public float GlowStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlowStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool EligibleForScreenHighlight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EligibleForScreenHighlight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EligibleForScreenHighlight", CallKind.ClassMember, m_classData, value); }
            }
            public bool Glowing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Glowing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Glowing", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CGradientFog : CBaseEntity
        {
            public CGradientFog(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGradientFog", "CGradientFog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGradientFog(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGradientFog", "CGradientFog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGradientFog()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FogStartDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogStartDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogStartDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FogEndDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogEndDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogEndDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool HeightFogEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HeightFogEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightFogEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float FogStartHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogStartHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogStartHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float FogEndHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogEndHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogEndHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float FarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarZ", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxOpacity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxOpacity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxOpacity", CallKind.ClassMember, m_classData, value); }
            }
            public float FogFalloffExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogFalloffExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogFalloffExponent", CallKind.ClassMember, m_classData, value); }
            }
            public float FogVerticalExponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogVerticalExponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogVerticalExponent", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle FogColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "FogColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogColor", CallKind.ClassMember, m_classData, value); }
            }
            public float FogStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool GradientFogNeedsTextures
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GradientFogNeedsTextures", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GradientFogNeedsTextures", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CGunTarget : CBaseToggle
        {
            public CGunTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGunTarget", "CGunTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGunTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CGunTarget", "CGunTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CGunTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool On
            {
                get { return Invoker.CallNative<bool>("SDKClass", "On", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "On", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity TargetEnt
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEnt", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnDeath
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDeath", CallKind.ClassMember, m_classData); }
            }
            public CBaseToggle Parent
            {
                get { return Invoker.CallNative<CBaseToggle>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class ChainToSolveData_t : ClassData
        {
            public ChainToSolveData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ChainToSolveData_t", "ChainToSolveData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ChainToSolveData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ChainToSolveData_t", "ChainToSolveData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ChainToSolveData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ChainIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChainIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChainIndex", CallKind.ClassMember, m_classData, value); }
            }
            public IKSolverSettings_t SolverSettings
            {
                get { return Invoker.CallNative<IKSolverSettings_t>("SDKClass", "SolverSettings", CallKind.ClassMember, m_classData); }
            }
            public IKTargetSettings_t TargetSettings
            {
                get { return Invoker.CallNative<IKTargetSettings_t>("SDKClass", "TargetSettings", CallKind.ClassMember, m_classData); }
            }
            public uint DebugSetting
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DebugSetting", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugSetting", CallKind.ClassMember, m_classData, value); }
            }
            public float DebugNormalizedValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "DebugNormalizedValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugNormalizedValue", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DebugOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DebugOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugOffset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CHandleDummy : CBaseEntity
        {
            public CHandleDummy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandleDummy", "CHandleDummy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandleDummy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandleDummy", "CHandleDummy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandleDummy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHandleTest : CBaseEntity
        {
            public CHandleTest(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandleTest", "CHandleTest", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandleTest(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandleTest", "CHandleTest", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandleTest()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Handle
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Handle", CallKind.ClassMember, m_classData); }
            }
            public bool SendHandle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SendHandle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SendHandle", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHandshakeAnimTagBase : CAnimTagBase
        {
            public CHandshakeAnimTagBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandshakeAnimTagBase", "CHandshakeAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandshakeAnimTagBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHandshakeAnimTagBase", "CHandshakeAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHandshakeAnimTagBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsDisableTag
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsDisableTag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsDisableTag", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class ChangeAccessorFieldPathIndex_t : ClassData
        {
            public ChangeAccessorFieldPathIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ChangeAccessorFieldPathIndex_t", "ChangeAccessorFieldPathIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ChangeAccessorFieldPathIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ChangeAccessorFieldPathIndex_t", "ChangeAccessorFieldPathIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ChangeAccessorFieldPathIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Value
            {
                get { return Invoker.CallNative<int>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CHEGrenade : CBaseCSGrenade
        {
            public CHEGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHEGrenade", "CHEGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHEGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHEGrenade", "CHEGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHEGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenade Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHEGrenadeProjectile : CBaseCSGrenadeProjectile
        {
            public CHEGrenadeProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHEGrenadeProjectile", "CHEGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHEGrenadeProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHEGrenadeProjectile", "CHEGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHEGrenadeProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenadeProjectile Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenadeProjectile>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHitBox : ClassData
        {
            public CHitBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBox", "CHitBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBox", "CHitBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string SurfaceProperty
            {
                get { return Invoker.CallNative<string>("SDKClass", "SurfaceProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceProperty", CallKind.ClassMember, m_classData, value); }
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MinBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBounds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData, value); }
            }
            public float ShapeRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShapeRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShapeRadius", CallKind.ClassMember, m_classData, value); }
            }
            public uint BoneNameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneNameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneNameHash", CallKind.ClassMember, m_classData, value); }
            }
            public int GroupId
            {
                get { return Invoker.CallNative<int>("SDKClass", "GroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupId", CallKind.ClassMember, m_classData, value); }
            }
            public byte ShapeType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ShapeType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShapeType", CallKind.ClassMember, m_classData, value); }
            }
            public bool TranslationOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TranslationOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TranslationOnly", CallKind.ClassMember, m_classData, value); }
            }
            public uint CRC
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CRC", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CRC", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle CRenderColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "CRenderColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CRenderColor", CallKind.ClassMember, m_classData, value); }
            }
            public ushort HitBoxIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "HitBoxIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitBoxIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CHitboxComponent : CEntityComponent
        {
            public CHitboxComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitboxComponent", "CHitboxComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitboxComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitboxComponent", "CHitboxComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitboxComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] DisabledHitGroups
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "DisabledHitGroups", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisabledHitGroups", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHitBoxSet : ClassData
        {
            public CHitBoxSet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBoxSet", "CHitBoxSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBoxSet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBoxSet", "CHitBoxSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBoxSet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public string SourceFilename
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceFilename", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceFilename", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CHitBoxSetList : ClassData
        {
            public CHitBoxSetList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBoxSetList", "CHitBoxSetList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBoxSetList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitBoxSetList", "CHitBoxSetList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitBoxSetList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CHitReactUpdateNode : CUnaryUpdateNode
        {
            public CHitReactUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitReactUpdateNode", "CHitReactUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitReactUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHitReactUpdateNode", "CHitReactUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHitReactUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public HitReactFixedSettings_t OpFixedSettings
            {
                get { return Invoker.CallNative<HitReactFixedSettings_t>("SDKClass", "OpFixedSettings", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TriggerParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TriggerParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle HitBoneParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "HitBoneParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle HitOffsetParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "HitOffsetParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle HitDirectionParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "HitDirectionParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle HitStrengthParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "HitStrengthParam", CallKind.ClassMember, m_classData); }
            }
            public float MinDelayBetweenHits
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinDelayBetweenHits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinDelayBetweenHits", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostage : CHostageExpresserShim
        {
            public CHostage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostage", "CHostage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostage", "CHostage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnHostageBeginGrab
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnHostageBeginGrab", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFirstPickedUp
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFirstPickedUp", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnDroppedNotRescued
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDroppedNotRescued", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnRescued
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnRescued", CallKind.ClassMember, m_classData); }
            }
            public EntitySpottedState_t EntitySpottedState
            {
                get { return Invoker.CallNative<EntitySpottedState_t>("SDKClass", "EntitySpottedState", CallKind.ClassMember, m_classData); }
            }
            public int SpotRules
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotRules", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRules", CallKind.ClassMember, m_classData, value); }
            }
            public uint UiHostageSpawnExclusionGroupMask
            {
                get { return Invoker.CallNative<uint>("SDKClass", "UiHostageSpawnExclusionGroupMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UiHostageSpawnExclusionGroupMask", CallKind.ClassMember, m_classData, value); }
            }
            public uint HostageSpawnRandomFactor
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HostageSpawnRandomFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageSpawnRandomFactor", CallKind.ClassMember, m_classData, value); }
            }
            public bool Remove
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Remove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Remove", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Vel
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Vel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Vel", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRescued
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRescued", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRescued", CallKind.ClassMember, m_classData, value); }
            }
            public bool JumpedThisFrame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "JumpedThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpedThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int HostageState
            {
                get { return Invoker.CallNative<int>("SDKClass", "HostageState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageState", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Leader
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Leader", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawnBase LastLeader
            {
                get { return Invoker.CallNative<CCSPlayerPawnBase>("SDKClass", "LastLeader", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer ReuseTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "ReuseTimer", CallKind.ClassMember, m_classData); }
            }
            public bool HasBeenUsed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenUsed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenUsed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Accel
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Accel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Accel", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRunning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRunning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRunning", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsCrouching
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsCrouching", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsCrouching", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer JumpTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "JumpTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsWaitingForLeader
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsWaitingForLeader", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsWaitingForLeader", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer RepathTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RepathTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer InhibitDoorTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "InhibitDoorTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer InhibitObstacleAvoidanceTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "InhibitObstacleAvoidanceTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer WiggleTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "WiggleTimer", CallKind.ClassMember, m_classData); }
            }
            public bool IsAdjusted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAdjusted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAdjusted", CallKind.ClassMember, m_classData, value); }
            }
            public bool HandsHaveBeenCut
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HandsHaveBeenCut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HandsHaveBeenCut", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn HostageGrabber
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "HostageGrabber", CallKind.ClassMember, m_classData); }
            }
            public float LastGrabTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastGrabTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastGrabTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PositionWhenStartedDroppingToGround
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PositionWhenStartedDroppingToGround", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PositionWhenStartedDroppingToGround", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GrabbedPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GrabbedPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrabbedPos", CallKind.ClassMember, m_classData, value); }
            }
            public float RescueStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RescueStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RescueStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float GrabSuccessTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GrabSuccessTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrabSuccessTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DropStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DropStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DropStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public int ApproachRewardPayouts
            {
                get { return Invoker.CallNative<int>("SDKClass", "ApproachRewardPayouts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApproachRewardPayouts", CallKind.ClassMember, m_classData, value); }
            }
            public int PickupEventCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "PickupEventCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PickupEventCount", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpawnGroundPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpawnGroundPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnGroundPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HostageResetPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HostageResetPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageResetPosition", CallKind.ClassMember, m_classData, value); }
            }
            public CHostageExpresserShim Parent
            {
                get { return Invoker.CallNative<CHostageExpresserShim>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostageAlias_info_hostage_spawn : CHostage
        {
            public CHostageAlias_info_hostage_spawn(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageAlias_info_hostage_spawn", "CHostageAlias_info_hostage_spawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageAlias_info_hostage_spawn(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageAlias_info_hostage_spawn", "CHostageAlias_info_hostage_spawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageAlias_info_hostage_spawn()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CHostage Parent
            {
                get { return Invoker.CallNative<CHostage>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostageCarriableProp : CBaseAnimGraph
        {
            public CHostageCarriableProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageCarriableProp", "CHostageCarriableProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageCarriableProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageCarriableProp", "CHostageCarriableProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageCarriableProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostageExpresserShim : CBaseCombatCharacter
        {
            public CHostageExpresserShim(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageExpresserShim", "CHostageExpresserShim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageExpresserShim(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageExpresserShim", "CHostageExpresserShim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageExpresserShim()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Expresser
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Expresser", CallKind.ClassMember, m_classData); }
            }
            public CBaseCombatCharacter Parent
            {
                get { return Invoker.CallNative<CBaseCombatCharacter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostageRescueZone : CHostageRescueZoneShim
        {
            public CHostageRescueZone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageRescueZone", "CHostageRescueZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageRescueZone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageRescueZone", "CHostageRescueZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageRescueZone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CHostageRescueZoneShim Parent
            {
                get { return Invoker.CallNative<CHostageRescueZoneShim>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CHostageRescueZoneShim : CBaseTrigger
        {
            public CHostageRescueZoneShim(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageRescueZoneShim", "CHostageRescueZoneShim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageRescueZoneShim(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CHostageRescueZoneShim", "CHostageRescueZoneShim", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CHostageRescueZoneShim()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInButtonState : ClassData
        {
            public CInButtonState(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInButtonState", "CInButtonState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInButtonState(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInButtonState", "CInButtonState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInButtonState()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong[] ButtonStates
            {
                get { return Invoker.CallNative<ulong[]>("SDKClass", "ButtonStates", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ButtonStates", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CIncendiaryGrenade : CMolotovGrenade
        {
            public CIncendiaryGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIncendiaryGrenade", "CIncendiaryGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIncendiaryGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIncendiaryGrenade", "CIncendiaryGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIncendiaryGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMolotovGrenade Parent
            {
                get { return Invoker.CallNative<CMolotovGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInferno : CBaseModelEntity
        {
            public CInferno(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInferno", "CInferno", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInferno(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInferno", "CInferno", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInferno()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] FirePositions
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "FirePositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirePositions", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] FireParentPositions
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "FireParentPositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireParentPositions", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] FireIsBurning
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "FireIsBurning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireIsBurning", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] BurnNormal
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "BurnNormal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BurnNormal", CallKind.ClassMember, m_classData, value); }
            }
            public int FireCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "FireCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireCount", CallKind.ClassMember, m_classData, value); }
            }
            public int InfernoType
            {
                get { return Invoker.CallNative<int>("SDKClass", "InfernoType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfernoType", CallKind.ClassMember, m_classData, value); }
            }
            public int FireEffectTickBegin
            {
                get { return Invoker.CallNative<int>("SDKClass", "FireEffectTickBegin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireEffectTickBegin", CallKind.ClassMember, m_classData, value); }
            }
            public float FireLifetime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireLifetime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireLifetime", CallKind.ClassMember, m_classData, value); }
            }
            public bool InPostEffectTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InPostEffectTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InPostEffectTime", CallKind.ClassMember, m_classData, value); }
            }
            public int FiresExtinguishCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "FiresExtinguishCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FiresExtinguishCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool WasCreatedInSmoke
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasCreatedInSmoke", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasCreatedInSmoke", CallKind.ClassMember, m_classData, value); }
            }
            public Extent Extent
            {
                get { return Invoker.CallNative<Extent>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer DamageTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "DamageTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer DamageRampTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "DamageRampTimer", CallKind.ClassMember, m_classData); }
            }
            public Vector2D SplashVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SplashVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplashVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D InitialSplashVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InitialSplashVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialSplashVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StartPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StartPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OriginalSpawnLocation
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalSpawnLocation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnLocation", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer ActiveTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "ActiveTimer", CallKind.ClassMember, m_classData); }
            }
            public int FireSpawnOffset
            {
                get { return Invoker.CallNative<int>("SDKClass", "FireSpawnOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireSpawnOffset", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxFlames
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxFlames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFlames", CallKind.ClassMember, m_classData, value); }
            }
            public int SpreadCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpreadCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpreadCount", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer BookkeepingTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "BookkeepingTimer", CallKind.ClassMember, m_classData); }
            }
            public CountdownTimer NextSpreadTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "NextSpreadTimer", CallKind.ClassMember, m_classData); }
            }
            public ushort SourceItemDefIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "SourceItemDefIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceItemDefIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoData : CServerOnlyEntity
        {
            public CInfoData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoData", "CInfoData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoData", "CInfoData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CServerOnlyEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoDeathmatchSpawn : SpawnPoint
        {
            public CInfoDeathmatchSpawn(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDeathmatchSpawn", "CInfoDeathmatchSpawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDeathmatchSpawn(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDeathmatchSpawn", "CInfoDeathmatchSpawn", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDeathmatchSpawn()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SpawnPoint Parent
            {
                get { return Invoker.CallNative<SpawnPoint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoDynamicShadowHint : CPointEntity
        {
            public CInfoDynamicShadowHint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDynamicShadowHint", "CInfoDynamicShadowHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDynamicShadowHint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDynamicShadowHint", "CInfoDynamicShadowHint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDynamicShadowHint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public int Importance
            {
                get { return Invoker.CallNative<int>("SDKClass", "Importance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Importance", CallKind.ClassMember, m_classData, value); }
            }
            public int LightChoice
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightChoice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightChoice", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Light
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Light", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoDynamicShadowHintBox : CInfoDynamicShadowHint
        {
            public CInfoDynamicShadowHintBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDynamicShadowHintBox", "CInfoDynamicShadowHintBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDynamicShadowHintBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoDynamicShadowHintBox", "CInfoDynamicShadowHintBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoDynamicShadowHintBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D BoxMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public CInfoDynamicShadowHint Parent
            {
                get { return Invoker.CallNative<CInfoDynamicShadowHint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoFan : CPointEntity
        {
            public CInfoFan(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoFan", "CInfoFan", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoFan(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoFan", "CInfoFan", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoFan()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FanForceMaxRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "FanForceMaxRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanForceMaxRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float FanForceMinRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "FanForceMinRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanForceMinRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float CurveDistRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurveDistRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurveDistRange", CallKind.ClassMember, m_classData, value); }
            }
            public string FanForceCurveString
            {
                get { return Invoker.CallNative<string>("SDKClass", "FanForceCurveString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanForceCurveString", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoGameEventProxy : CPointEntity
        {
            public CInfoGameEventProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoGameEventProxy", "CInfoGameEventProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoGameEventProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoGameEventProxy", "CInfoGameEventProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoGameEventProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string EventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EventName", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoInstructorHintBombTargetA : CPointEntity
        {
            public CInfoInstructorHintBombTargetA(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintBombTargetA", "CInfoInstructorHintBombTargetA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintBombTargetA(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintBombTargetA", "CInfoInstructorHintBombTargetA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintBombTargetA()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoInstructorHintBombTargetB : CPointEntity
        {
            public CInfoInstructorHintBombTargetB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintBombTargetB", "CInfoInstructorHintBombTargetB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintBombTargetB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintBombTargetB", "CInfoInstructorHintBombTargetB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintBombTargetB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoInstructorHintHostageRescueZone : CPointEntity
        {
            public CInfoInstructorHintHostageRescueZone(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintHostageRescueZone", "CInfoInstructorHintHostageRescueZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintHostageRescueZone(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintHostageRescueZone", "CInfoInstructorHintHostageRescueZone", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintHostageRescueZone()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoInstructorHintTarget : CPointEntity
        {
            public CInfoInstructorHintTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintTarget", "CInfoInstructorHintTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoInstructorHintTarget", "CInfoInstructorHintTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoInstructorHintTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoLadderDismount : CBaseEntity
        {
            public CInfoLadderDismount(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoLadderDismount", "CInfoLadderDismount", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoLadderDismount(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoLadderDismount", "CInfoLadderDismount", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoLadderDismount()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoLandmark : CPointEntity
        {
            public CInfoLandmark(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoLandmark", "CInfoLandmark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoLandmark(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoLandmark", "CInfoLandmark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoLandmark()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoOffscreenPanoramaTexture : CPointEntity
        {
            public CInfoOffscreenPanoramaTexture(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoOffscreenPanoramaTexture", "CInfoOffscreenPanoramaTexture", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoOffscreenPanoramaTexture(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoOffscreenPanoramaTexture", "CInfoOffscreenPanoramaTexture", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoOffscreenPanoramaTexture()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public int ResolutionX
            {
                get { return Invoker.CallNative<int>("SDKClass", "ResolutionX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResolutionX", CallKind.ClassMember, m_classData, value); }
            }
            public int ResolutionY
            {
                get { return Invoker.CallNative<int>("SDKClass", "ResolutionY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResolutionY", CallKind.ClassMember, m_classData, value); }
            }
            public string LayoutFileName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LayoutFileName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayoutFileName", CallKind.ClassMember, m_classData, value); }
            }
            public string RenderAttrName
            {
                get { return Invoker.CallNative<string>("SDKClass", "RenderAttrName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderAttrName", CallKind.ClassMember, m_classData, value); }
            }
            public int TargetChangeCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetChangeCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetChangeCount", CallKind.ClassMember, m_classData, value); }
            }
            public string[] CSSClasses
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "CSSClasses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CSSClasses", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetsName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetsName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetsName", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoParticleTarget : CPointEntity
        {
            public CInfoParticleTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoParticleTarget", "CInfoParticleTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoParticleTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoParticleTarget", "CInfoParticleTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoParticleTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoPlayerCounterterrorist : SpawnPoint
        {
            public CInfoPlayerCounterterrorist(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerCounterterrorist", "CInfoPlayerCounterterrorist", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerCounterterrorist(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerCounterterrorist", "CInfoPlayerCounterterrorist", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerCounterterrorist()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SpawnPoint Parent
            {
                get { return Invoker.CallNative<SpawnPoint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoPlayerStart : CPointEntity
        {
            public CInfoPlayerStart(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerStart", "CInfoPlayerStart", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerStart(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerStart", "CInfoPlayerStart", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerStart()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsMaster
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsMaster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsMaster", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoPlayerTerrorist : SpawnPoint
        {
            public CInfoPlayerTerrorist(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerTerrorist", "CInfoPlayerTerrorist", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerTerrorist(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoPlayerTerrorist", "CInfoPlayerTerrorist", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoPlayerTerrorist()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SpawnPoint Parent
            {
                get { return Invoker.CallNative<SpawnPoint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoSpawnGroupLandmark : CPointEntity
        {
            public CInfoSpawnGroupLandmark(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoSpawnGroupLandmark", "CInfoSpawnGroupLandmark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoSpawnGroupLandmark(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoSpawnGroupLandmark", "CInfoSpawnGroupLandmark", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoSpawnGroupLandmark()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoSpawnGroupLoadUnload : CLogicalEntity
        {
            public CInfoSpawnGroupLoadUnload(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoSpawnGroupLoadUnload", "CInfoSpawnGroupLoadUnload", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoSpawnGroupLoadUnload(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoSpawnGroupLoadUnload", "CInfoSpawnGroupLoadUnload", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoSpawnGroupLoadUnload()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnSpawnGroupLoadStarted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSpawnGroupLoadStarted", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnSpawnGroupLoadFinished
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSpawnGroupLoadFinished", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnSpawnGroupUnloadStarted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSpawnGroupUnloadStarted", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnSpawnGroupUnloadFinished
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSpawnGroupUnloadFinished", CallKind.ClassMember, m_classData); }
            }
            public string SpawnGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpawnGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public string SpawnGroupFilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpawnGroupFilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnGroupFilterName", CallKind.ClassMember, m_classData, value); }
            }
            public string LandmarkName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LandmarkName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LandmarkName", CallKind.ClassMember, m_classData, value); }
            }
            public string FixedSpawnGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FixedSpawnGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FixedSpawnGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeoutInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeoutInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeoutInterval", CallKind.ClassMember, m_classData, value); }
            }
            public bool AutoActivate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoActivate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoActivate", CallKind.ClassMember, m_classData, value); }
            }
            public bool UnloadingStarted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UnloadingStarted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UnloadingStarted", CallKind.ClassMember, m_classData, value); }
            }
            public bool QueueActiveSpawnGroupChange
            {
                get { return Invoker.CallNative<bool>("SDKClass", "QueueActiveSpawnGroupChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueueActiveSpawnGroupChange", CallKind.ClassMember, m_classData, value); }
            }
            public bool QueueFinishLoading
            {
                get { return Invoker.CallNative<bool>("SDKClass", "QueueFinishLoading", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueueFinishLoading", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoTarget : CPointEntity
        {
            public CInfoTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTarget", "CInfoTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTarget", "CInfoTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoTargetServerOnly : CServerOnlyPointEntity
        {
            public CInfoTargetServerOnly(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTargetServerOnly", "CInfoTargetServerOnly", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTargetServerOnly(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTargetServerOnly", "CInfoTargetServerOnly", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTargetServerOnly()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CServerOnlyPointEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoTeleportDestination : CPointEntity
        {
            public CInfoTeleportDestination(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTeleportDestination", "CInfoTeleportDestination", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTeleportDestination(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoTeleportDestination", "CInfoTeleportDestination", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoTeleportDestination()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoVisibilityBox : CBaseEntity
        {
            public CInfoVisibilityBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoVisibilityBox", "CInfoVisibilityBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoVisibilityBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoVisibilityBox", "CInfoVisibilityBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoVisibilityBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Mode
            {
                get { return Invoker.CallNative<int>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoxSize
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoxSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxSize", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInfoWorldLayer : CBaseEntity
        {
            public CInfoWorldLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoWorldLayer", "CInfoWorldLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoWorldLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInfoWorldLayer", "CInfoWorldLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInfoWorldLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OutputOnEntitiesSpawned
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OutputOnEntitiesSpawned", CallKind.ClassMember, m_classData); }
            }
            public string WorldName
            {
                get { return Invoker.CallNative<string>("SDKClass", "WorldName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldName", CallKind.ClassMember, m_classData, value); }
            }
            public string LayerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LayerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayerName", CallKind.ClassMember, m_classData, value); }
            }
            public bool WorldLayerVisible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WorldLayerVisible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldLayerVisible", CallKind.ClassMember, m_classData, value); }
            }
            public bool EntitiesSpawned
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EntitiesSpawned", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntitiesSpawned", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateAsChildSpawnGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateAsChildSpawnGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateAsChildSpawnGroup", CallKind.ClassMember, m_classData, value); }
            }
            public uint LayerSpawnGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LayerSpawnGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayerSpawnGroup", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInputStreamUpdateNode : CLeafUpdateNode
        {
            public CInputStreamUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInputStreamUpdateNode", "CInputStreamUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInputStreamUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInputStreamUpdateNode", "CInputStreamUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInputStreamUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInstancedSceneEntity : CSceneEntity
        {
            public CInstancedSceneEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInstancedSceneEntity", "CInstancedSceneEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInstancedSceneEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInstancedSceneEntity", "CInstancedSceneEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInstancedSceneEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Owner
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public bool HadOwner
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HadOwner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HadOwner", CallKind.ClassMember, m_classData, value); }
            }
            public float PostSpeakDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "PostSpeakDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostSpeakDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float PreDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreDelay", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsBackground
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBackground", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBackground", CallKind.ClassMember, m_classData, value); }
            }
            public bool RemoveOnCompletion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RemoveOnCompletion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemoveOnCompletion", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
            public CSceneEntity Parent
            {
                get { return Invoker.CallNative<CSceneEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInstructorEventEntity : CPointEntity
        {
            public CInstructorEventEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInstructorEventEntity", "CInstructorEventEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInstructorEventEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInstructorEventEntity", "CInstructorEventEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInstructorEventEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string HintTargetEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HintTargetEntity", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerPawn TargetPlayer
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "TargetPlayer", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CIntAnimParameter : CConcreteAnimParameter
        {
            public CIntAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIntAnimParameter", "CIntAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIntAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIntAnimParameter", "CIntAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIntAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DefaultValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData, value); }
            }
            public int MinValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinValue", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxValue", CallKind.ClassMember, m_classData, value); }
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CInterpolatedValue : ClassData
        {
            public CInterpolatedValue(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInterpolatedValue", "CInterpolatedValue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInterpolatedValue(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInterpolatedValue", "CInterpolatedValue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInterpolatedValue()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float EndTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartValue", CallKind.ClassMember, m_classData, value); }
            }
            public float EndValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndValue", CallKind.ClassMember, m_classData, value); }
            }
            public int InterpType
            {
                get { return Invoker.CallNative<int>("SDKClass", "InterpType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterpType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CInventoryImageData : ClassData
        {
            public CInventoryImageData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInventoryImageData", "CInventoryImageData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInventoryImageData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CInventoryImageData", "CInventoryImageData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CInventoryImageData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint NodeType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NodeType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeType", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public inv_image_data_t Inventory_image_data
            {
                get { return Invoker.CallNative<inv_image_data_t>("SDKClass", "Inventory_image_data", CallKind.ClassMember, m_classData); }
            }
        }
        public class CIronSightController : ClassData
        {
            public CIronSightController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIronSightController", "CIronSightController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIronSightController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CIronSightController", "CIronSightController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CIronSightController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IronSightAvailable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IronSightAvailable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightAvailable", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightAmountGained
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightAmountGained", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightAmountGained", CallKind.ClassMember, m_classData, value); }
            }
            public float IronSightAmountBiased
            {
                get { return Invoker.CallNative<float>("SDKClass", "IronSightAmountBiased", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IronSightAmountBiased", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CItem : CBaseAnimGraph
        {
            public CItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItem", "CItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItem", "CItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnPlayerTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerTouch", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerPickup
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerPickup", CallKind.ClassMember, m_classData); }
            }
            public bool ActivateWhenAtRest
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ActivateWhenAtRest", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActivateWhenAtRest", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnCacheInteraction
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCacheInteraction", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnGlovePulled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnGlovePulled", CallKind.ClassMember, m_classData); }
            }
            public Vector2D OriginalSpawnOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalSpawnOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector OriginalSpawnAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "OriginalSpawnAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool PhysStartAsleep
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PhysStartAsleep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhysStartAsleep", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItem_Healthshot : CWeaponBaseItem
        {
            public CItem_Healthshot(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItem_Healthshot", "CItem_Healthshot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItem_Healthshot(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItem_Healthshot", "CItem_Healthshot", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItem_Healthshot()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CWeaponBaseItem Parent
            {
                get { return Invoker.CallNative<CWeaponBaseItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemAssaultSuit : CItem
        {
            public CItemAssaultSuit(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemAssaultSuit", "CItemAssaultSuit", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemAssaultSuit(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemAssaultSuit", "CItemAssaultSuit", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemAssaultSuit()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CItem Parent
            {
                get { return Invoker.CallNative<CItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemDefuser : CItem
        {
            public CItemDefuser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDefuser", "CItemDefuser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDefuser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDefuser", "CItemDefuser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDefuser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EntitySpottedState_t EntitySpottedState
            {
                get { return Invoker.CallNative<EntitySpottedState_t>("SDKClass", "EntitySpottedState", CallKind.ClassMember, m_classData); }
            }
            public int SpotRules
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotRules", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRules", CallKind.ClassMember, m_classData, value); }
            }
            public CItem Parent
            {
                get { return Invoker.CallNative<CItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemDefuserAlias_item_defuser : CItemDefuser
        {
            public CItemDefuserAlias_item_defuser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDefuserAlias_item_defuser", "CItemDefuserAlias_item_defuser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDefuserAlias_item_defuser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDefuserAlias_item_defuser", "CItemDefuserAlias_item_defuser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDefuserAlias_item_defuser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CItemDefuser Parent
            {
                get { return Invoker.CallNative<CItemDefuser>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemDogtags : CItem
        {
            public CItemDogtags(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDogtags", "CItemDogtags", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDogtags(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemDogtags", "CItemDogtags", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemDogtags()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerPawn OwningPlayer
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "OwningPlayer", CallKind.ClassMember, m_classData); }
            }
            public CCSPlayerPawn KillingPlayer
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "KillingPlayer", CallKind.ClassMember, m_classData); }
            }
            public CItem Parent
            {
                get { return Invoker.CallNative<CItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemKevlar : CItem
        {
            public CItemKevlar(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemKevlar", "CItemKevlar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemKevlar(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemKevlar", "CItemKevlar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemKevlar()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CItem Parent
            {
                get { return Invoker.CallNative<CItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CItemSoda : CBaseAnimGraph
        {
            public CItemSoda(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemSoda", "CItemSoda", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemSoda(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CItemSoda", "CItemSoda", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CItemSoda()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CJiggleBoneUpdateNode : CUnaryUpdateNode
        {
            public CJiggleBoneUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CJiggleBoneUpdateNode", "CJiggleBoneUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CJiggleBoneUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CJiggleBoneUpdateNode", "CJiggleBoneUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CJiggleBoneUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public JiggleBoneSettingsList_t OpFixedData
            {
                get { return Invoker.CallNative<JiggleBoneSettingsList_t>("SDKClass", "OpFixedData", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CJumpHelperUpdateNode : CSequenceUpdateNode
        {
            public CJumpHelperUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CJumpHelperUpdateNode", "CJumpHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CJumpHelperUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CJumpHelperUpdateNode", "CJumpHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CJumpHelperUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle TargetParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetParam", CallKind.ClassMember, m_classData); }
            }
            public Vector2D OriginalJumpMovement
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalJumpMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalJumpMovement", CallKind.ClassMember, m_classData, value); }
            }
            public float OriginalJumpDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "OriginalJumpDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalJumpDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float JumpStartCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "JumpStartCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpStartCycle", CallKind.ClassMember, m_classData, value); }
            }
            public float JumpEndCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "JumpEndCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JumpEndCycle", CallKind.ClassMember, m_classData, value); }
            }
            public uint CorrectionMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CorrectionMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CorrectionMethod", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] TranslationAxis
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "TranslationAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TranslationAxis", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScaleSpeed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScaleSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public CSequenceUpdateNode Parent
            {
                get { return Invoker.CallNative<CSequenceUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CKeepUpright : CPointEntity
        {
            public CKeepUpright(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CKeepUpright", "CKeepUpright", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CKeepUpright(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CKeepUpright", "CKeepUpright", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CKeepUpright()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WorldGoalAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WorldGoalAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGoalAxis", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocalTestAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalTestAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalTestAxis", CallKind.ClassMember, m_classData, value); }
            }
            public string NameAttach
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAttach", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAttach", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity AttachedObject
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "AttachedObject", CallKind.ClassMember, m_classData); }
            }
            public float AngularLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool DampAllRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DampAllRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DampAllRotation", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CKnife : CCSWeaponBase
        {
            public CKnife(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CKnife", "CKnife", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CKnife(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CKnife", "CKnife", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CKnife()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool FirstAttack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstAttack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstAttack", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLeafUpdateNode : CAnimUpdateNodeBase
        {
            public CLeafUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLeafUpdateNode", "CLeafUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLeafUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLeafUpdateNode", "CLeafUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLeafUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLeanMatrixUpdateNode : CLeafUpdateNode
        {
            public CLeanMatrixUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLeanMatrixUpdateNode", "CLeanMatrixUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLeanMatrixUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLeanMatrixUpdateNode", "CLeanMatrixUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLeanMatrixUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] FrameCorners
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FrameCorners", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameCorners", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint BlendSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendSource", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public Vector2D VerticalAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "VerticalAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalAxis", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HorizontalAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HorizontalAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HorizontalAxis", CallKind.ClassMember, m_classData, value); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxValue", CallKind.ClassMember, m_classData, value); }
            }
            public int SequenceMaxFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "SequenceMaxFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceMaxFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightComponent : CEntityComponent
        {
            public CLightComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightComponent", "CLightComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightComponent", "CLightComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle SecondaryColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "SecondaryColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SecondaryColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessMult
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessMult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessMult", CallKind.ClassMember, m_classData, value); }
            }
            public float Range
            {
                get { return Invoker.CallNative<float>("SDKClass", "Range", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Range", CallKind.ClassMember, m_classData, value); }
            }
            public float Falloff
            {
                get { return Invoker.CallNative<float>("SDKClass", "Falloff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Falloff", CallKind.ClassMember, m_classData, value); }
            }
            public float Theta
            {
                get { return Invoker.CallNative<float>("SDKClass", "Theta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Theta", CallKind.ClassMember, m_classData, value); }
            }
            public float Phi
            {
                get { return Invoker.CallNative<float>("SDKClass", "Phi", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Phi", CallKind.ClassMember, m_classData, value); }
            }
            public int Cascades
            {
                get { return Invoker.CallNative<int>("SDKClass", "Cascades", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cascades", CallKind.ClassMember, m_classData, value); }
            }
            public int CastShadows
            {
                get { return Invoker.CallNative<int>("SDKClass", "CastShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CastShadows", CallKind.ClassMember, m_classData, value); }
            }
            public int ShadowWidth
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShadowWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowWidth", CallKind.ClassMember, m_classData, value); }
            }
            public int ShadowHeight
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShadowHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowHeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderDiffuse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderDiffuse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderDiffuse", CallKind.ClassMember, m_classData, value); }
            }
            public int RenderSpecular
            {
                get { return Invoker.CallNative<int>("SDKClass", "RenderSpecular", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderSpecular", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderTransmissive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderTransmissive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderTransmissive", CallKind.ClassMember, m_classData, value); }
            }
            public float OrthoLightWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "OrthoLightWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrthoLightWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float OrthoLightHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "OrthoLightHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrthoLightHeight", CallKind.ClassMember, m_classData, value); }
            }
            public int Style
            {
                get { return Invoker.CallNative<int>("SDKClass", "Style", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Style", CallKind.ClassMember, m_classData, value); }
            }
            public string Pattern
            {
                get { return Invoker.CallNative<string>("SDKClass", "Pattern", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pattern", CallKind.ClassMember, m_classData, value); }
            }
            public int CascadeRenderStaticObjects
            {
                get { return Invoker.CallNative<int>("SDKClass", "CascadeRenderStaticObjects", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CascadeRenderStaticObjects", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowCascadeCrossFade
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowCascadeCrossFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowCascadeCrossFade", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowCascadeDistanceFade
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowCascadeDistanceFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowCascadeDistanceFade", CallKind.ClassMember, m_classData, value); }
            }
            public bool UsesBakedShadowing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UsesBakedShadowing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UsesBakedShadowing", CallKind.ClassMember, m_classData, value); }
            }
            public int ShadowPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShadowPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowPriority", CallKind.ClassMember, m_classData, value); }
            }
            public int BakedShadowIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BakedShadowIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BakedShadowIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int LightPathUniqueId
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightPathUniqueId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightPathUniqueId", CallKind.ClassMember, m_classData, value); }
            }
            public int LightMapUniqueId
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightMapUniqueId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightMapUniqueId", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderToCubemaps
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderToCubemaps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderToCubemaps", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowSSTGeneration
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowSSTGeneration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowSSTGeneration", CallKind.ClassMember, m_classData, value); }
            }
            public int DirectLight
            {
                get { return Invoker.CallNative<int>("SDKClass", "DirectLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectLight", CallKind.ClassMember, m_classData, value); }
            }
            public int IndirectLight
            {
                get { return Invoker.CallNative<int>("SDKClass", "IndirectLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndirectLight", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeMinDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeMinDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeMinDist", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeMaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeMaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeMaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowFadeMinDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowFadeMinDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowFadeMinDist", CallKind.ClassMember, m_classData, value); }
            }
            public float ShadowFadeMaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShadowFadeMaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowFadeMaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Flicker
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Flicker", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flicker", CallKind.ClassMember, m_classData, value); }
            }
            public bool PrecomputedFieldsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PrecomputedFieldsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedFieldsValid", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedBoundsMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedBoundsMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedBoundsMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedBoundsMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedBoundsMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedBoundsMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedOBBOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedOBBOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector PrecomputedOBBAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PrecomputedOBBAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PrecomputedOBBExtent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrecomputedOBBExtent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedOBBExtent", CallKind.ClassMember, m_classData, value); }
            }
            public float PrecomputedMaxRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrecomputedMaxRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrecomputedMaxRange", CallKind.ClassMember, m_classData, value); }
            }
            public int FogLightingMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "FogLightingMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogLightingMode", CallKind.ClassMember, m_classData, value); }
            }
            public float FogContributionStength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogContributionStength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogContributionStength", CallKind.ClassMember, m_classData, value); }
            }
            public float NearClipPlane
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearClipPlane", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearClipPlane", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle SkyColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "SkyColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyColor", CallKind.ClassMember, m_classData, value); }
            }
            public float SkyIntensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "SkyIntensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyIntensity", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle SkyAmbientBounce
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "SkyAmbientBounce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyAmbientBounce", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseSecondaryColor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseSecondaryColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseSecondaryColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool MixedShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MixedShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MixedShadows", CallKind.ClassMember, m_classData, value); }
            }
            public float LightStyleStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightStyleStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightStyleStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float CapsuleLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "CapsuleLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CapsuleLength", CallKind.ClassMember, m_classData, value); }
            }
            public float MinRoughness
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinRoughness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinRoughness", CallKind.ClassMember, m_classData, value); }
            }
            public bool PvsModifyEntity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PvsModifyEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PvsModifyEntity", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightDirectionalEntity : CLightEntity
        {
            public CLightDirectionalEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightDirectionalEntity", "CLightDirectionalEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightDirectionalEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightDirectionalEntity", "CLightDirectionalEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightDirectionalEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLightEntity Parent
            {
                get { return Invoker.CallNative<CLightEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightEntity : CBaseModelEntity
        {
            public CLightEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightEntity", "CLightEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightEntity", "CLightEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] CLightComponent
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CLightComponent", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightEnvironmentEntity : CLightDirectionalEntity
        {
            public CLightEnvironmentEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightEnvironmentEntity", "CLightEnvironmentEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightEnvironmentEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightEnvironmentEntity", "CLightEnvironmentEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightEnvironmentEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLightDirectionalEntity Parent
            {
                get { return Invoker.CallNative<CLightDirectionalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightOrthoEntity : CLightEntity
        {
            public CLightOrthoEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightOrthoEntity", "CLightOrthoEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightOrthoEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightOrthoEntity", "CLightOrthoEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightOrthoEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLightEntity Parent
            {
                get { return Invoker.CallNative<CLightEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLightSpotEntity : CLightEntity
        {
            public CLightSpotEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightSpotEntity", "CLightSpotEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightSpotEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLightSpotEntity", "CLightSpotEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLightSpotEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLightEntity Parent
            {
                get { return Invoker.CallNative<CLightEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLODComponentUpdater : CAnimComponentUpdater
        {
            public CLODComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLODComponentUpdater", "CLODComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLODComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLODComponentUpdater", "CLODComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLODComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ServerLOD
            {
                get { return Invoker.CallNative<int>("SDKClass", "ServerLOD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ServerLOD", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicAchievement : CLogicalEntity
        {
            public CLogicAchievement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAchievement", "CLogicAchievement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAchievement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAchievement", "CLogicAchievement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAchievement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public string AchievementEventID
            {
                get { return Invoker.CallNative<string>("SDKClass", "AchievementEventID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AchievementEventID", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnFired
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFired", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicActiveAutosave : CLogicAutosave
        {
            public CLogicActiveAutosave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicActiveAutosave", "CLogicActiveAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicActiveAutosave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicActiveAutosave", "CLogicActiveAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicActiveAutosave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TriggerHitPoints
            {
                get { return Invoker.CallNative<int>("SDKClass", "TriggerHitPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriggerHitPoints", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeToTrigger
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeToTrigger", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeToTrigger", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DangerousTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DangerousTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DangerousTime", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicAutosave Parent
            {
                get { return Invoker.CallNative<CLogicAutosave>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicalEntity : CServerOnlyEntity
        {
            public CLogicalEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicalEntity", "CLogicalEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicalEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicalEntity", "CLogicalEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicalEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CServerOnlyEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicAuto : CBaseEntity
        {
            public CLogicAuto(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAuto", "CLogicAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAuto(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAuto", "CLogicAuto", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAuto()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnMapSpawn
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMapSpawn", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnDemoMapSpawn
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDemoMapSpawn", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNewGame
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNewGame", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLoadGame
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLoadGame", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMapTransition
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMapTransition", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBackgroundMap
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBackgroundMap", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMultiNewMap
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMultiNewMap", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMultiNewRound
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMultiNewRound", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnVREnabled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnVREnabled", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnVRNotEnabled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnVRNotEnabled", CallKind.ClassMember, m_classData); }
            }
            public string Globalstate
            {
                get { return Invoker.CallNative<string>("SDKClass", "Globalstate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Globalstate", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicAutosave : CLogicalEntity
        {
            public CLogicAutosave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAutosave", "CLogicAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAutosave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicAutosave", "CLogicAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicAutosave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ForceNewLevelUnit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData, value); }
            }
            public int MinHitPoints
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinHitPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHitPoints", CallKind.ClassMember, m_classData, value); }
            }
            public int MinHitPointsToCommit
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinHitPointsToCommit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHitPointsToCommit", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicBranch : CLogicalEntity
        {
            public CLogicBranch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicBranch", "CLogicBranch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicBranch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicBranch", "CLogicBranch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicBranch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool InValue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InValue", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnTrue
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTrue", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFalse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFalse", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicBranchList : CLogicalEntity
        {
            public CLogicBranchList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicBranchList", "CLogicBranchList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicBranchList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicBranchList", "CLogicBranchList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicBranchList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] LogicBranchNames
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "LogicBranchNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LogicBranchNames", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnAllTrue
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAllTrue", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAllFalse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAllFalse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMixed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMixed", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicCase : CLogicalEntity
        {
            public CLogicCase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCase", "CLogicCase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCase", "CLogicCase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] Case
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Case", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Case", CallKind.ClassMember, m_classData, value); }
            }
            public int ShuffleCases
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShuffleCases", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShuffleCases", CallKind.ClassMember, m_classData, value); }
            }
            public int LastShuffleCase
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastShuffleCase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastShuffleCase", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] UchShuffleCaseMap
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "UchShuffleCaseMap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UchShuffleCaseMap", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicCollisionPair : CLogicalEntity
        {
            public CLogicCollisionPair(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCollisionPair", "CLogicCollisionPair", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCollisionPair(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCollisionPair", "CLogicCollisionPair", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCollisionPair()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool SupportMultipleEntitiesWithSameName
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SupportMultipleEntitiesWithSameName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SupportMultipleEntitiesWithSameName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Succeeded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Succeeded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Succeeded", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicCompare : CLogicalEntity
        {
            public CLogicCompare(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCompare", "CLogicCompare", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCompare(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicCompare", "CLogicCompare", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicCompare()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float InValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "InValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InValue", CallKind.ClassMember, m_classData, value); }
            }
            public float CompareValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "CompareValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompareValue", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicDistanceAutosave : CLogicalEntity
        {
            public CLogicDistanceAutosave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicDistanceAutosave", "CLogicDistanceAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicDistanceAutosave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicDistanceAutosave", "CLogicDistanceAutosave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicDistanceAutosave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetEntity
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceToPlayer
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceToPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceToPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceNewLevelUnit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData, value); }
            }
            public bool CheckCough
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CheckCough", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CheckCough", CallKind.ClassMember, m_classData, value); }
            }
            public bool ThinkDangerous
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ThinkDangerous", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThinkDangerous", CallKind.ClassMember, m_classData, value); }
            }
            public float DangerousTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DangerousTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DangerousTime", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicDistanceCheck : CLogicalEntity
        {
            public CLogicDistanceCheck(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicDistanceCheck", "CLogicDistanceCheck", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicDistanceCheck(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicDistanceCheck", "CLogicDistanceCheck", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicDistanceCheck()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string EntityA
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityA", CallKind.ClassMember, m_classData, value); }
            }
            public string EntityB
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityB", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicEventListener : CLogicalEntity
        {
            public CLogicEventListener(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicEventListener", "CLogicEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicEventListener(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicEventListener", "CLogicEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicEventListener()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrEventName", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public int Team
            {
                get { return Invoker.CallNative<int>("SDKClass", "Team", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Team", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnEventFired
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEventFired", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicGameEvent : CLogicalEntity
        {
            public CLogicGameEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicGameEvent", "CLogicGameEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicGameEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicGameEvent", "CLogicGameEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicGameEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string EventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EventName", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicGameEventListener : CLogicalEntity
        {
            public CLogicGameEventListener(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicGameEventListener", "CLogicGameEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicGameEventListener(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicGameEventListener", "CLogicGameEventListener", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicGameEventListener()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnEventFired
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEventFired", CallKind.ClassMember, m_classData); }
            }
            public string GameEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "GameEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameEventName", CallKind.ClassMember, m_classData, value); }
            }
            public string GameEventItem
            {
                get { return Invoker.CallNative<string>("SDKClass", "GameEventItem", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameEventItem", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicLineToEntity : CLogicalEntity
        {
            public CLogicLineToEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicLineToEntity", "CLogicLineToEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicLineToEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicLineToEntity", "CLogicLineToEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicLineToEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SourceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity StartEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "StartEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity EndEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EndEntity", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicMeasureMovement : CLogicalEntity
        {
            public CLogicMeasureMovement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicMeasureMovement", "CLogicMeasureMovement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicMeasureMovement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicMeasureMovement", "CLogicMeasureMovement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicMeasureMovement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrMeasureTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMeasureTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMeasureTarget", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMeasureReference
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMeasureReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMeasureReference", CallKind.ClassMember, m_classData, value); }
            }
            public string StrTargetReference
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrTargetReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrTargetReference", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity MeasureTarget
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "MeasureTarget", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity MeasureReference
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "MeasureReference", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity TargetReference
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetReference", CallKind.ClassMember, m_classData); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public int MeasureType
            {
                get { return Invoker.CallNative<int>("SDKClass", "MeasureType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeasureType", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicNavigation : CLogicalEntity
        {
            public CLogicNavigation(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNavigation", "CLogicNavigation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNavigation(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNavigation", "CLogicNavigation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNavigation()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsOn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOn", CallKind.ClassMember, m_classData, value); }
            }
            public uint NavProperty
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NavProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NavProperty", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicNPCCounter : CBaseEntity
        {
            public CLogicNPCCounter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounter", "CLogicNPCCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounter", "CLogicNPCCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnMinCountAll
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMinCountAll", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMaxCountAll
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMaxCountAll", CallKind.ClassMember, m_classData); }
            }
            public CEntityInstance Source
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Source", CallKind.ClassMember, m_classData); }
            }
            public string SourceEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public int MinCountAll
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinCountAll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinCountAll", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxCountAll
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxCountAll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCountAll", CallKind.ClassMember, m_classData, value); }
            }
            public int MinFactorAll
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinFactorAll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinFactorAll", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxFactorAll
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxFactorAll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFactorAll", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicNPCCounterAABB : CLogicNPCCounter
        {
            public CLogicNPCCounterAABB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounterAABB", "CLogicNPCCounterAABB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounterAABB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounterAABB", "CLogicNPCCounterAABB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounterAABB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DistanceOuterMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceOuterMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OuterMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OuterMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OuterMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OuterMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicNPCCounter Parent
            {
                get { return Invoker.CallNative<CLogicNPCCounter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicNPCCounterOBB : CLogicNPCCounterAABB
        {
            public CLogicNPCCounterOBB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounterOBB", "CLogicNPCCounterOBB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounterOBB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicNPCCounterOBB", "CLogicNPCCounterOBB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicNPCCounterOBB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLogicNPCCounterAABB Parent
            {
                get { return Invoker.CallNative<CLogicNPCCounterAABB>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicPlayerProxy : CLogicalEntity
        {
            public CLogicPlayerProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicPlayerProxy", "CLogicPlayerProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicPlayerProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicPlayerProxy", "CLogicPlayerProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicPlayerProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Player
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Player", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput PlayerHasAmmo
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "PlayerHasAmmo", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput PlayerHasNoAmmo
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "PlayerHasNoAmmo", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput PlayerDied
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "PlayerDied", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicProximity : CPointEntity
        {
            public CLogicProximity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicProximity", "CLogicProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicProximity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicProximity", "CLogicProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicProximity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicRelay : CLogicalEntity
        {
            public CLogicRelay(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicRelay", "CLogicRelay", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicRelay(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicRelay", "CLogicRelay", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicRelay()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitForRefire
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitForRefire", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitForRefire", CallKind.ClassMember, m_classData, value); }
            }
            public bool TriggerOnce
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TriggerOnce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriggerOnce", CallKind.ClassMember, m_classData, value); }
            }
            public bool FastRetrigger
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FastRetrigger", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FastRetrigger", CallKind.ClassMember, m_classData, value); }
            }
            public bool PassthoughCaller
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PassthoughCaller", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PassthoughCaller", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLogicRelayAPI : ClassData
        {
            public CLogicRelayAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicRelayAPI", "CLogicRelayAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicRelayAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicRelayAPI", "CLogicRelayAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicRelayAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CLogicScript : CPointEntity
        {
            public CLogicScript(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicScript", "CLogicScript", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicScript(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLogicScript", "CLogicScript", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLogicScript()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLookAtUpdateNode : CUnaryUpdateNode
        {
            public CLookAtUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLookAtUpdateNode", "CLookAtUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLookAtUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLookAtUpdateNode", "CLookAtUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLookAtUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public LookAtOpFixedSettings_t OpFixedSettings
            {
                get { return Invoker.CallNative<LookAtOpFixedSettings_t>("SDKClass", "OpFixedSettings", CallKind.ClassMember, m_classData); }
            }
            public uint Target
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle WeightParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "WeightParamIndex", CallKind.ClassMember, m_classData); }
            }
            public bool ResetChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetChild", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CLookComponentUpdater : CAnimComponentUpdater
        {
            public CLookComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLookComponentUpdater", "CLookComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLookComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CLookComponentUpdater", "CLookComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CLookComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle LookHeading
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookHeading", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookHeadingNormalized
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookHeadingNormalized", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookHeadingVelocity
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookHeadingVelocity", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookPitch
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookPitch", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookDistance
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookDistance", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookDirection
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookDirection", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookTarget
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookTarget", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle LookTargetWorldSpace
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "LookTargetWorldSpace", CallKind.ClassMember, m_classData); }
            }
            public bool NetworkLookTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkLookTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkLookTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class ClutterSceneObject_t : ClassData
        {
            public ClutterSceneObject_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ClutterSceneObject_t", "ClutterSceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ClutterSceneObject_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ClutterSceneObject_t", "ClutterSceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ClutterSceneObject_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public AABB_t Bounds
            {
                get { return Invoker.CallNative<AABB_t>("SDKClass", "Bounds", CallKind.ClassMember, m_classData); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public short Layer
            {
                get { return Invoker.CallNative<short>("SDKClass", "Layer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Layer", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] InstancePositions
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "InstancePositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstancePositions", CallKind.ClassMember, m_classData, value); }
            }
            public float[] InstanceScales
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "InstanceScales", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceScales", CallKind.ClassMember, m_classData, value); }
            }
            public double[] InstanceTintSrgb
            {
                get { return Invoker.CallNative<double[]>("SDKClass", "InstanceTintSrgb", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceTintSrgb", CallKind.ClassMember, m_classData, value); }
            }
            public uint MaterialGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MaterialGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroup", CallKind.ClassMember, m_classData, value); }
            }
            public float BeginCullSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "BeginCullSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeginCullSize", CallKind.ClassMember, m_classData, value); }
            }
            public float EndCullSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndCullSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCullSize", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ClutterTile_t : ClassData
        {
            public ClutterTile_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ClutterTile_t", "ClutterTile_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ClutterTile_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ClutterTile_t", "ClutterTile_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ClutterTile_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FirstInstance
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FirstInstance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstInstance", CallKind.ClassMember, m_classData, value); }
            }
            public uint LastInstance
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LastInstance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastInstance", CallKind.ClassMember, m_classData, value); }
            }
            public AABB_t BoundsWs
            {
                get { return Invoker.CallNative<AABB_t>("SDKClass", "BoundsWs", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMapInfo : CPointEntity
        {
            public CMapInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapInfo", "CMapInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapInfo", "CMapInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BuyingStatus
            {
                get { return Invoker.CallNative<int>("SDKClass", "BuyingStatus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuyingStatus", CallKind.ClassMember, m_classData, value); }
            }
            public float BombRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "BombRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombRadius", CallKind.ClassMember, m_classData, value); }
            }
            public int PetPopulation
            {
                get { return Invoker.CallNative<int>("SDKClass", "PetPopulation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PetPopulation", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseNormalSpawnsForDM
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseNormalSpawnsForDM", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseNormalSpawnsForDM", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableAutoGeneratedDMSpawns
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableAutoGeneratedDMSpawns", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableAutoGeneratedDMSpawns", CallKind.ClassMember, m_classData, value); }
            }
            public float BotMaxVisionDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "BotMaxVisionDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BotMaxVisionDistance", CallKind.ClassMember, m_classData, value); }
            }
            public int HostageCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "HostageCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HostageCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool FadePlayerVisibilityFarZ
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FadePlayerVisibilityFarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadePlayerVisibilityFarZ", CallKind.ClassMember, m_classData, value); }
            }
            public bool RainTraceToSkyEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RainTraceToSkyEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RainTraceToSkyEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMapSharedEnvironment : CLogicalEntity
        {
            public CMapSharedEnvironment(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapSharedEnvironment", "CMapSharedEnvironment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapSharedEnvironment(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapSharedEnvironment", "CMapSharedEnvironment", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapSharedEnvironment()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetMapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetMapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetMapName", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMapVetoPickController : CBaseEntity
        {
            public CMapVetoPickController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapVetoPickController", "CMapVetoPickController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapVetoPickController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMapVetoPickController", "CMapVetoPickController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMapVetoPickController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool PlayedIntroVcd
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayedIntroVcd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayedIntroVcd", CallKind.ClassMember, m_classData, value); }
            }
            public bool NeedToPlayFiveSecondsRemaining
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NeedToPlayFiveSecondsRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NeedToPlayFiveSecondsRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public double DblPreMatchDraftSequenceTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "DblPreMatchDraftSequenceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DblPreMatchDraftSequenceTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool PreMatchDraftStateChanged
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreMatchDraftStateChanged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreMatchDraftStateChanged", CallKind.ClassMember, m_classData, value); }
            }
            public int DraftType
            {
                get { return Invoker.CallNative<int>("SDKClass", "DraftType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DraftType", CallKind.ClassMember, m_classData, value); }
            }
            public int TeamWinningCoinToss
            {
                get { return Invoker.CallNative<int>("SDKClass", "TeamWinningCoinToss", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamWinningCoinToss", CallKind.ClassMember, m_classData, value); }
            }
            public int[] TeamWithFirstChoice
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "TeamWithFirstChoice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamWithFirstChoice", CallKind.ClassMember, m_classData, value); }
            }
            public int[] VoteMapIdsList
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "VoteMapIdsList", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoteMapIdsList", CallKind.ClassMember, m_classData, value); }
            }
            public int[] AccountIDs
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "AccountIDs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccountIDs", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentPhase
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentPhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentPhase", CallKind.ClassMember, m_classData, value); }
            }
            public int PhaseStartTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "PhaseStartTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhaseStartTick", CallKind.ClassMember, m_classData, value); }
            }
            public int PhaseDurationTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "PhaseDurationTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhaseDurationTicks", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMarkupVolume : CBaseModelEntity
        {
            public CMarkupVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolume", "CMarkupVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolume", "CMarkupVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMarkupVolumeTagged : CMarkupVolume
        {
            public CMarkupVolumeTagged(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged", "CMarkupVolumeTagged", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged", "CMarkupVolumeTagged", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsGroup", CallKind.ClassMember, m_classData, value); }
            }
            public bool GroupByPrefab
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GroupByPrefab", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupByPrefab", CallKind.ClassMember, m_classData, value); }
            }
            public bool GroupByVolume
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GroupByVolume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupByVolume", CallKind.ClassMember, m_classData, value); }
            }
            public bool GroupOtherGroups
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GroupOtherGroups", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupOtherGroups", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsInGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsInGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsInGroup", CallKind.ClassMember, m_classData, value); }
            }
            public CMarkupVolume Parent
            {
                get { return Invoker.CallNative<CMarkupVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMarkupVolumeTagged_Nav : CMarkupVolumeTagged
        {
            public CMarkupVolumeTagged_Nav(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged_Nav", "CMarkupVolumeTagged_Nav", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged_Nav(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged_Nav", "CMarkupVolumeTagged_Nav", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged_Nav()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Scopes
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Scopes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scopes", CallKind.ClassMember, m_classData, value); }
            }
            public CMarkupVolumeTagged Parent
            {
                get { return Invoker.CallNative<CMarkupVolumeTagged>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMarkupVolumeTagged_NavGame : CMarkupVolumeWithRef
        {
            public CMarkupVolumeTagged_NavGame(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged_NavGame", "CMarkupVolumeTagged_NavGame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged_NavGame(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeTagged_NavGame", "CMarkupVolumeTagged_NavGame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeTagged_NavGame()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Scopes
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Scopes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scopes", CallKind.ClassMember, m_classData, value); }
            }
            public bool FloodFillAttribute
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FloodFillAttribute", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FloodFillAttribute", CallKind.ClassMember, m_classData, value); }
            }
            public bool SplitNavSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SplitNavSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplitNavSpace", CallKind.ClassMember, m_classData, value); }
            }
            public CMarkupVolumeWithRef Parent
            {
                get { return Invoker.CallNative<CMarkupVolumeWithRef>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMarkupVolumeWithRef : CMarkupVolumeTagged
        {
            public CMarkupVolumeWithRef(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeWithRef", "CMarkupVolumeWithRef", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeWithRef(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMarkupVolumeWithRef", "CMarkupVolumeWithRef", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMarkupVolumeWithRef()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool UseRef
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseRef", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseRef", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RefPosEntitySpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RefPosEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefPosEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RefPosWorldSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RefPosWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefPosWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public float RefDot
            {
                get { return Invoker.CallNative<float>("SDKClass", "RefDot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefDot", CallKind.ClassMember, m_classData, value); }
            }
            public CMarkupVolumeTagged Parent
            {
                get { return Invoker.CallNative<CMarkupVolumeTagged>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMaterialAttributeAnimTag : CAnimTagBase
        {
            public CMaterialAttributeAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMaterialAttributeAnimTag", "CMaterialAttributeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMaterialAttributeAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMaterialAttributeAnimTag", "CMaterialAttributeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMaterialAttributeAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AttributeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttributeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeName", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttributeType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttributeType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeType", CallKind.ClassMember, m_classData, value); }
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMaterialDrawDescriptor : ClassData
        {
            public CMaterialDrawDescriptor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMaterialDrawDescriptor", "CMaterialDrawDescriptor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMaterialDrawDescriptor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMaterialDrawDescriptor", "CMaterialDrawDescriptor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMaterialDrawDescriptor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float UvDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "UvDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UvDensity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TintColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Alpha
            {
                get { return Invoker.CallNative<float>("SDKClass", "Alpha", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Alpha", CallKind.ClassMember, m_classData, value); }
            }
            public ushort NumMeshlets
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NumMeshlets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumMeshlets", CallKind.ClassMember, m_classData, value); }
            }
            public uint FirstMeshlet
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FirstMeshlet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstMeshlet", CallKind.ClassMember, m_classData, value); }
            }
            public uint AppliedIndexOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AppliedIndexOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AppliedIndexOffset", CallKind.ClassMember, m_classData, value); }
            }
            public byte DepthVertexBufferIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DepthVertexBufferIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepthVertexBufferIndex", CallKind.ClassMember, m_classData, value); }
            }
            public byte MeshletPackedIVBIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MeshletPackedIVBIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshletPackedIVBIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint PrimitiveType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PrimitiveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrimitiveType", CallKind.ClassMember, m_classData, value); }
            }
            public int BaseVertex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BaseVertex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseVertex", CallKind.ClassMember, m_classData, value); }
            }
            public int VertexCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "VertexCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexCount", CallKind.ClassMember, m_classData, value); }
            }
            public int StartIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int IndexCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "IndexCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndexCount", CallKind.ClassMember, m_classData, value); }
            }
            public CRenderBufferBinding IndexBuffer
            {
                get { return Invoker.CallNative<CRenderBufferBinding>("SDKClass", "IndexBuffer", CallKind.ClassMember, m_classData); }
            }
            public CRenderBufferBinding MeshletPackedIVB
            {
                get { return Invoker.CallNative<CRenderBufferBinding>("SDKClass", "MeshletPackedIVB", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMathColorBlend : CLogicalEntity
        {
            public CMathColorBlend(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathColorBlend", "CMathColorBlend", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathColorBlend(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathColorBlend", "CMathColorBlend", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathColorBlend()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float InMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "InMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InMin", CallKind.ClassMember, m_classData, value); }
            }
            public float InMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "InMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InMax", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMathCounter : CLogicalEntity
        {
            public CMathCounter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathCounter", "CMathCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathCounter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathCounter", "CMathCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathCounter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public float Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
            public bool HitMin
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HitMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitMin", CallKind.ClassMember, m_classData, value); }
            }
            public bool HitMax
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HitMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnHitMin
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnHitMin", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnHitMax
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnHitMax", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnChangedFromMin
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnChangedFromMin", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnChangedFromMax
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnChangedFromMax", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMathRemap : CLogicalEntity
        {
            public CMathRemap(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathRemap", "CMathRemap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathRemap(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMathRemap", "CMathRemap", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMathRemap()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float InMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "InMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InMin", CallKind.ClassMember, m_classData, value); }
            }
            public float InMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "InMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InMax", CallKind.ClassMember, m_classData, value); }
            }
            public float OldInValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldInValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldInValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnRoseAboveMin
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnRoseAboveMin", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnRoseAboveMax
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnRoseAboveMax", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFellBelowMin
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFellBelowMin", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFellBelowMax
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFellBelowMax", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMeshletDescriptor : ClassData
        {
            public CMeshletDescriptor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMeshletDescriptor", "CMeshletDescriptor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMeshletDescriptor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMeshletDescriptor", "CMeshletDescriptor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMeshletDescriptor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CDrawCullingData CullingData
            {
                get { return Invoker.CallNative<CDrawCullingData>("SDKClass", "CullingData", CallKind.ClassMember, m_classData); }
            }
            public uint VertexOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexOffset", CallKind.ClassMember, m_classData, value); }
            }
            public uint TriangleOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TriangleOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriangleOffset", CallKind.ClassMember, m_classData, value); }
            }
            public byte VertexCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "VertexCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexCount", CallKind.ClassMember, m_classData, value); }
            }
            public byte TriangleCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "TriangleCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriangleCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMessage : CPointEntity
        {
            public CMessage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMessage", "CMessage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMessage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMessage", "CMessage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMessage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Message
            {
                get { return Invoker.CallNative<string>("SDKClass", "Message", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Message", CallKind.ClassMember, m_classData, value); }
            }
            public float MessageVolume
            {
                get { return Invoker.CallNative<float>("SDKClass", "MessageVolume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MessageVolume", CallKind.ClassMember, m_classData, value); }
            }
            public int MessageAttenuation
            {
                get { return Invoker.CallNative<int>("SDKClass", "MessageAttenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MessageAttenuation", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public string Noise
            {
                get { return Invoker.CallNative<string>("SDKClass", "Noise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Noise", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnShowMessage
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnShowMessage", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMessageEntity : CPointEntity
        {
            public CMessageEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMessageEntity", "CMessageEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMessageEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMessageEntity", "CMessageEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMessageEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Radius
            {
                get { return Invoker.CallNative<int>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public string MessageText
            {
                get { return Invoker.CallNative<string>("SDKClass", "MessageText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MessageText", CallKind.ClassMember, m_classData, value); }
            }
            public bool DrawText
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DrawText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawText", CallKind.ClassMember, m_classData, value); }
            }
            public bool DeveloperOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DeveloperOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeveloperOnly", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfig : ClassData
        {
            public CModelConfig(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfig", "CModelConfig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfig(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfig", "CModelConfig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfig()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ConfigName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ConfigName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConfigName", CallKind.ClassMember, m_classData, value); }
            }
            public bool TopLevel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TopLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TopLevel", CallKind.ClassMember, m_classData, value); }
            }
            public bool ActiveInEditorByDefault
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ActiveInEditorByDefault", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActiveInEditorByDefault", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CModelConfigElement : ClassData
        {
            public CModelConfigElement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement", "CModelConfigElement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement", "CModelConfigElement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ElementName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ElementName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CModelConfigElement_AttachedModel : CModelConfigElement
        {
            public CModelConfigElement_AttachedModel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_AttachedModel", "CModelConfigElement_AttachedModel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_AttachedModel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_AttachedModel", "CModelConfigElement_AttachedModel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_AttachedModel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string InstanceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "InstanceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InstanceName", CallKind.ClassMember, m_classData, value); }
            }
            public string EntityClass
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityClass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityClass", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector AngOffset
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "AngOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngOffset", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public string LocalAttachmentOffsetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LocalAttachmentOffsetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalAttachmentOffsetName", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachmentType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachmentType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentType", CallKind.ClassMember, m_classData, value); }
            }
            public bool BoneMergeFlex
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BoneMergeFlex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneMergeFlex", CallKind.ClassMember, m_classData, value); }
            }
            public bool UserSpecifiedColor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UserSpecifiedColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UserSpecifiedColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool UserSpecifiedMaterialGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UserSpecifiedMaterialGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UserSpecifiedMaterialGroup", CallKind.ClassMember, m_classData, value); }
            }
            public bool AcceptParentMaterialDrivenDecals
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AcceptParentMaterialDrivenDecals", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AcceptParentMaterialDrivenDecals", CallKind.ClassMember, m_classData, value); }
            }
            public string BodygroupOnOtherModels
            {
                get { return Invoker.CallNative<string>("SDKClass", "BodygroupOnOtherModels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodygroupOnOtherModels", CallKind.ClassMember, m_classData, value); }
            }
            public string MaterialGroupOnOtherModels
            {
                get { return Invoker.CallNative<string>("SDKClass", "MaterialGroupOnOtherModels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroupOnOtherModels", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_Command : CModelConfigElement
        {
            public CModelConfigElement_Command(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_Command", "CModelConfigElement_Command", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_Command(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_Command", "CModelConfigElement_Command", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_Command()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Command
            {
                get { return Invoker.CallNative<string>("SDKClass", "Command", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Command", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_RandomColor : CModelConfigElement
        {
            public CModelConfigElement_RandomColor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_RandomColor", "CModelConfigElement_RandomColor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_RandomColor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_RandomColor", "CModelConfigElement_RandomColor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_RandomColor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_RandomPick : CModelConfigElement
        {
            public CModelConfigElement_RandomPick(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_RandomPick", "CModelConfigElement_RandomPick", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_RandomPick(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_RandomPick", "CModelConfigElement_RandomPick", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_RandomPick()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] Choices
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "Choices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Choices", CallKind.ClassMember, m_classData, value); }
            }
            public float[] ChoiceWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "ChoiceWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChoiceWeights", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_SetBodygroup : CModelConfigElement
        {
            public CModelConfigElement_SetBodygroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetBodygroup", "CModelConfigElement_SetBodygroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetBodygroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetBodygroup", "CModelConfigElement_SetBodygroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetBodygroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Choice
            {
                get { return Invoker.CallNative<int>("SDKClass", "Choice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Choice", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_SetBodygroupOnAttachedModels : CModelConfigElement
        {
            public CModelConfigElement_SetBodygroupOnAttachedModels(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetBodygroupOnAttachedModels", "CModelConfigElement_SetBodygroupOnAttachedModels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetBodygroupOnAttachedModels(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetBodygroupOnAttachedModels", "CModelConfigElement_SetBodygroupOnAttachedModels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetBodygroupOnAttachedModels()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string GroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "GroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupName", CallKind.ClassMember, m_classData, value); }
            }
            public int Choice
            {
                get { return Invoker.CallNative<int>("SDKClass", "Choice", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Choice", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_SetMaterialGroup : CModelConfigElement
        {
            public CModelConfigElement_SetMaterialGroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetMaterialGroup", "CModelConfigElement_SetMaterialGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetMaterialGroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetMaterialGroup", "CModelConfigElement_SetMaterialGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetMaterialGroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MaterialGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_SetMaterialGroupOnAttachedModels : CModelConfigElement
        {
            public CModelConfigElement_SetMaterialGroupOnAttachedModels(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetMaterialGroupOnAttachedModels", "CModelConfigElement_SetMaterialGroupOnAttachedModels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetMaterialGroupOnAttachedModels(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetMaterialGroupOnAttachedModels", "CModelConfigElement_SetMaterialGroupOnAttachedModels", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetMaterialGroupOnAttachedModels()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MaterialGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_SetRenderColor : CModelConfigElement
        {
            public CModelConfigElement_SetRenderColor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetRenderColor", "CModelConfigElement_SetRenderColor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetRenderColor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_SetRenderColor", "CModelConfigElement_SetRenderColor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_SetRenderColor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigElement_UserPick : CModelConfigElement
        {
            public CModelConfigElement_UserPick(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_UserPick", "CModelConfigElement_UserPick", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_UserPick(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigElement_UserPick", "CModelConfigElement_UserPick", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigElement_UserPick()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] Choices
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "Choices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Choices", CallKind.ClassMember, m_classData, value); }
            }
            public CModelConfigElement Parent
            {
                get { return Invoker.CallNative<CModelConfigElement>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelConfigList : ClassData
        {
            public CModelConfigList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigList", "CModelConfigList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelConfigList", "CModelConfigList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelConfigList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool HideMaterialGroupInTools
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HideMaterialGroupInTools", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HideMaterialGroupInTools", CallKind.ClassMember, m_classData, value); }
            }
            public bool HideRenderColorInTools
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HideRenderColorInTools", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HideRenderColorInTools", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CModelPointEntity : CBaseModelEntity
        {
            public CModelPointEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelPointEntity", "CModelPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelPointEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelPointEntity", "CModelPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelPointEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CModelState : ClassData
        {
            public CModelState(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelState", "CModelState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelState(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CModelState", "CModelState", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CModelState()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelName", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClientClothCreationSuppressed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClientClothCreationSuppressed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientClothCreationSuppressed", CallKind.ClassMember, m_classData, value); }
            }
            public ulong MeshGroupMask
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "MeshGroupMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshGroupMask", CallKind.ClassMember, m_classData, value); }
            }
            public int[] BodyGroupChoices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BodyGroupChoices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupChoices", CallKind.ClassMember, m_classData, value); }
            }
            public char IdealMotionType
            {
                get { return Invoker.CallNative<char>("SDKClass", "IdealMotionType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdealMotionType", CallKind.ClassMember, m_classData, value); }
            }
            public char ForceLOD
            {
                get { return Invoker.CallNative<char>("SDKClass", "ForceLOD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceLOD", CallKind.ClassMember, m_classData, value); }
            }
            public char ClothUpdateFlags
            {
                get { return Invoker.CallNative<char>("SDKClass", "ClothUpdateFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClothUpdateFlags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMolotovGrenade : CBaseCSGrenade
        {
            public CMolotovGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMolotovGrenade", "CMolotovGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMolotovGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMolotovGrenade", "CMolotovGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMolotovGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenade Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMolotovProjectile : CBaseCSGrenadeProjectile
        {
            public CMolotovProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMolotovProjectile", "CMolotovProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMolotovProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMolotovProjectile", "CMolotovProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMolotovProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsIncGrenade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsIncGrenade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsIncGrenade", CallKind.ClassMember, m_classData, value); }
            }
            public bool Detonated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Detonated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Detonated", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer StillTimer
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "StillTimer", CallKind.ClassMember, m_classData); }
            }
            public bool HasBouncedOffPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBouncedOffPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBouncedOffPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseCSGrenadeProjectile Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenadeProjectile>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMomentaryRotButton : CRotButton
        {
            public CMomentaryRotButton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMomentaryRotButton", "CMomentaryRotButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMomentaryRotButton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMomentaryRotButton", "CMomentaryRotButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMomentaryRotButton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnUnpressed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUnpressed", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyOpen
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyOpen", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnFullyClosed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFullyClosed", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnReachedPosition
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnReachedPosition", CallKind.ClassMember, m_classData); }
            }
            public int LastUsed
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastUsed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastUsed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Start
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public Vector End
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public float IdealYaw
            {
                get { return Invoker.CallNative<float>("SDKClass", "IdealYaw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdealYaw", CallKind.ClassMember, m_classData, value); }
            }
            public string Noise
            {
                get { return Invoker.CallNative<string>("SDKClass", "Noise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Noise", CallKind.ClassMember, m_classData, value); }
            }
            public bool UpdateTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UpdateTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdateTarget", CallKind.ClassMember, m_classData, value); }
            }
            public int Direction
            {
                get { return Invoker.CallNative<int>("SDKClass", "Direction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Direction", CallKind.ClassMember, m_classData, value); }
            }
            public float ReturnSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReturnSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReturnSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float StartPosition
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPosition", CallKind.ClassMember, m_classData, value); }
            }
            public CRotButton Parent
            {
                get { return Invoker.CallNative<CRotButton>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMoodVData : ClassData
        {
            public CMoodVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoodVData", "CMoodVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoodVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoodVData", "CMoodVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoodVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint MoodType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MoodType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoodType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMorphBundleData : ClassData
        {
            public CMorphBundleData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphBundleData", "CMorphBundleData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphBundleData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphBundleData", "CMorphBundleData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphBundleData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float ULeftSrc
            {
                get { return Invoker.CallNative<float>("SDKClass", "ULeftSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ULeftSrc", CallKind.ClassMember, m_classData, value); }
            }
            public float VTopSrc
            {
                get { return Invoker.CallNative<float>("SDKClass", "VTopSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VTopSrc", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Offsets
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Offsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offsets", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Ranges
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Ranges", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ranges", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMorphConstraint : CBaseConstraint
        {
            public CMorphConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphConstraint", "CMorphConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphConstraint", "CMorphConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetMorph
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetMorph", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetMorph", CallKind.ClassMember, m_classData, value); }
            }
            public int SlaveChannel
            {
                get { return Invoker.CallNative<int>("SDKClass", "SlaveChannel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlaveChannel", CallKind.ClassMember, m_classData, value); }
            }
            public float Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public float Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMorphData : ClassData
        {
            public CMorphData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphData", "CMorphData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphData", "CMorphData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMorphRectData : ClassData
        {
            public CMorphRectData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphRectData", "CMorphRectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphRectData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphRectData", "CMorphRectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphRectData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short XLeftDst
            {
                get { return Invoker.CallNative<short>("SDKClass", "XLeftDst", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XLeftDst", CallKind.ClassMember, m_classData, value); }
            }
            public short YTopDst
            {
                get { return Invoker.CallNative<short>("SDKClass", "YTopDst", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YTopDst", CallKind.ClassMember, m_classData, value); }
            }
            public float UWidthSrc
            {
                get { return Invoker.CallNative<float>("SDKClass", "UWidthSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UWidthSrc", CallKind.ClassMember, m_classData, value); }
            }
            public float VHeightSrc
            {
                get { return Invoker.CallNative<float>("SDKClass", "VHeightSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VHeightSrc", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMorphSetData : ClassData
        {
            public CMorphSetData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphSetData", "CMorphSetData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphSetData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMorphSetData", "CMorphSetData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMorphSetData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Width
            {
                get { return Invoker.CallNative<int>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public int Height
            {
                get { return Invoker.CallNative<int>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] BundleTypes
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "BundleTypes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BundleTypes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotionDataSet : ClassData
        {
            public CMotionDataSet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionDataSet", "CMotionDataSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionDataSet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionDataSet", "CMotionDataSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionDataSet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DimensionCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "DimensionCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DimensionCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotionGraph : ClassData
        {
            public CMotionGraph(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraph", "CMotionGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraph(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraph", "CMotionGraph", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraph()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParamSpanUpdater ParamSpans
            {
                get { return Invoker.CallNative<CParamSpanUpdater>("SDKClass", "ParamSpans", CallKind.ClassMember, m_classData); }
            }
            public int ParameterCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParameterCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParameterCount", CallKind.ClassMember, m_classData, value); }
            }
            public int ConfigStartIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ConfigStartIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConfigStartIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int ConfigCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "ConfigCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConfigCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotionGraphConfig : ClassData
        {
            public CMotionGraphConfig(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphConfig", "CMotionGraphConfig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphConfig(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphConfig", "CMotionGraphConfig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphConfig()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] ParamValues
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "ParamValues", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamValues", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public MotionIndex MotionIndex
            {
                get { return Invoker.CallNative<MotionIndex>("SDKClass", "MotionIndex", CallKind.ClassMember, m_classData); }
            }
            public int SampleStart
            {
                get { return Invoker.CallNative<int>("SDKClass", "SampleStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SampleStart", CallKind.ClassMember, m_classData, value); }
            }
            public int SampleCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "SampleCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SampleCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotionGraphGroup : ClassData
        {
            public CMotionGraphGroup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphGroup", "CMotionGraphGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphGroup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphGroup", "CMotionGraphGroup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphGroup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionSearchDB SearchDB
            {
                get { return Invoker.CallNative<CMotionSearchDB>("SDKClass", "SearchDB", CallKind.ClassMember, m_classData); }
            }
            public int[] SampleToConfig
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SampleToConfig", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SampleToConfig", CallKind.ClassMember, m_classData, value); }
            }
            public AnimScriptHandle IsActiveScript
            {
                get { return Invoker.CallNative<AnimScriptHandle>("SDKClass", "IsActiveScript", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionGraphUpdateNode : CLeafUpdateNode
        {
            public CMotionGraphUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphUpdateNode", "CMotionGraphUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionGraphUpdateNode", "CMotionGraphUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionGraphUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionMatchingUpdateNode : CLeafUpdateNode
        {
            public CMotionMatchingUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionMatchingUpdateNode", "CMotionMatchingUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionMatchingUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionMatchingUpdateNode", "CMotionMatchingUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionMatchingUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionDataSet DataSet
            {
                get { return Invoker.CallNative<CMotionDataSet>("SDKClass", "DataSet", CallKind.ClassMember, m_classData); }
            }
            public float[] Weights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weights", CallKind.ClassMember, m_classData, value); }
            }
            public bool SearchEveryTick
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SearchEveryTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchEveryTick", CallKind.ClassMember, m_classData, value); }
            }
            public float SearchInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "SearchInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchInterval", CallKind.ClassMember, m_classData, value); }
            }
            public bool SearchWhenClipEnds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SearchWhenClipEnds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchWhenClipEnds", CallKind.ClassMember, m_classData, value); }
            }
            public bool SearchWhenGoalChanges
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SearchWhenGoalChanges", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchWhenGoalChanges", CallKind.ClassMember, m_classData, value); }
            }
            public CBlendCurve BlendCurve
            {
                get { return Invoker.CallNative<CBlendCurve>("SDKClass", "BlendCurve", CallKind.ClassMember, m_classData); }
            }
            public float SampleRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "SampleRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SampleRate", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockClipWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockClipWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockClipWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public float SelectionThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "SelectionThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SelectionThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float ReselectionTimeWindow
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReselectionTimeWindow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReselectionTimeWindow", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableRotationCorrection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableRotationCorrection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableRotationCorrection", CallKind.ClassMember, m_classData, value); }
            }
            public bool GoalAssist
            {
                get { return Invoker.CallNative<bool>("SDKClass", "GoalAssist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalAssist", CallKind.ClassMember, m_classData, value); }
            }
            public float GoalAssistDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "GoalAssistDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalAssistDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float GoalAssistTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "GoalAssistTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalAssistTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping DistanceScale_Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "DistanceScale_Damping", CallKind.ClassMember, m_classData); }
            }
            public float DistanceScale_OuterRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceScale_OuterRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceScale_OuterRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceScale_InnerRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceScale_InnerRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceScale_InnerRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceScale_MaxScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceScale_MaxScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceScale_MaxScale", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceScale_MinScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceScale_MinScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceScale_MinScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableDistanceScaling
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableDistanceScaling", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableDistanceScaling", CallKind.ClassMember, m_classData, value); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionMetricEvaluator : ClassData
        {
            public CMotionMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionMetricEvaluator", "CMotionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionMetricEvaluator", "CMotionMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Means
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Means", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Means", CallKind.ClassMember, m_classData, value); }
            }
            public float[] StandardDeviations
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "StandardDeviations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StandardDeviations", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public int DimensionStartIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DimensionStartIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DimensionStartIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotionNode : ClassData
        {
            public CMotionNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNode", "CMotionNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNode", "CMotionNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public AnimNodeID Id
            {
                get { return Invoker.CallNative<AnimNodeID>("SDKClass", "Id", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionNodeBlend1D : CMotionNode
        {
            public CMotionNodeBlend1D(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNodeBlend1D", "CMotionNodeBlend1D", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNodeBlend1D(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNodeBlend1D", "CMotionNodeBlend1D", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNodeBlend1D()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ParamIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionNode Parent
            {
                get { return Invoker.CallNative<CMotionNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionNodeSequence : CMotionNode
        {
            public CMotionNodeSequence(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNodeSequence", "CMotionNodeSequence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNodeSequence(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionNodeSequence", "CMotionNodeSequence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionNodeSequence()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionNode Parent
            {
                get { return Invoker.CallNative<CMotionNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionSearchDB : ClassData
        {
            public CMotionSearchDB(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionSearchDB", "CMotionSearchDB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionSearchDB(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionSearchDB", "CMotionSearchDB", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionSearchDB()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMotionSearchNode RootNode
            {
                get { return Invoker.CallNative<CMotionSearchNode>("SDKClass", "RootNode", CallKind.ClassMember, m_classData); }
            }
            public CProductQuantizer ResidualQuantizer
            {
                get { return Invoker.CallNative<CProductQuantizer>("SDKClass", "ResidualQuantizer", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMotionSearchNode : ClassData
        {
            public CMotionSearchNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionSearchNode", "CMotionSearchNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionSearchNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotionSearchNode", "CMotionSearchNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotionSearchNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVectorQuantizer Quantizer
            {
                get { return Invoker.CallNative<CVectorQuantizer>("SDKClass", "Quantizer", CallKind.ClassMember, m_classData); }
            }
            public int[] SelectableSamples
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SelectableSamples", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SelectableSamples", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMotorController : ClassData
        {
            public CMotorController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotorController", "CMotorController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotorController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMotorController", "CMotorController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMotorController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Speed
            {
                get { return Invoker.CallNative<float>("SDKClass", "Speed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Speed", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTorque
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public float InertiaFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "InertiaFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InertiaFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CMovementComponentUpdater : CAnimComponentUpdater
        {
            public CMovementComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementComponentUpdater", "CMovementComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementComponentUpdater", "CMovementComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimInputDamping FacingDamping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "FacingDamping", CallKind.ClassMember, m_classData); }
            }
            public int DefaultMotorIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DefaultMotorIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultMotorIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultRunSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultRunSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultRunSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool MoveVarsDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MoveVarsDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveVarsDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkPath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkPath", CallKind.ClassMember, m_classData, value); }
            }
            public bool NetworkFacing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NetworkFacing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NetworkFacing", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMovementHandshakeAnimTag : CHandshakeAnimTagBase
        {
            public CMovementHandshakeAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementHandshakeAnimTag", "CMovementHandshakeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementHandshakeAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementHandshakeAnimTag", "CMovementHandshakeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementHandshakeAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CHandshakeAnimTagBase Parent
            {
                get { return Invoker.CallNative<CHandshakeAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMovementStatsProperty : ClassData
        {
            public CMovementStatsProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementStatsProperty", "CMovementStatsProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementStatsProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMovementStatsProperty", "CMovementStatsProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMovementStatsProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int UseCounter
            {
                get { return Invoker.CallNative<int>("SDKClass", "UseCounter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCounter", CallKind.ClassMember, m_classData, value); }
            }
            public CVectorExponentialMovingAverage EmaMovementDirection
            {
                get { return Invoker.CallNative<CVectorExponentialMovingAverage>("SDKClass", "EmaMovementDirection", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMoverPathNode : CPointEntity
        {
            public CMoverPathNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoverPathNode", "CMoverPathNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoverPathNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoverPathNode", "CMoverPathNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoverPathNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D InTangentLocal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InTangentLocal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InTangentLocal", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OutTangentLocal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OutTangentLocal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutTangentLocal", CallKind.ClassMember, m_classData, value); }
            }
            public string ParentPathUniqueID
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParentPathUniqueID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentPathUniqueID", CallKind.ClassMember, m_classData, value); }
            }
            public string PathNodeParameter
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathNodeParameter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodeParameter", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnStartFromOrInSegment
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartFromOrInSegment", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStoppedAtOrInSegment
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStoppedAtOrInSegment", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPassThrough
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPassThrough", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPassThroughForward
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPassThroughForward", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPassThroughReverse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPassThroughReverse", CallKind.ClassMember, m_classData); }
            }
            public CPathMover Mover
            {
                get { return Invoker.CallNative<CPathMover>("SDKClass", "Mover", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMoverUpdateNode : CUnaryUpdateNode
        {
            public CMoverUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoverUpdateNode", "CMoverUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoverUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMoverUpdateNode", "CMoverUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMoverUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint FacingTarget
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle MoveVecParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "MoveVecParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle MoveHeadingParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "MoveHeadingParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TurnToFaceParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TurnToFaceParam", CallKind.ClassMember, m_classData); }
            }
            public float TurnToFaceOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnToFaceOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnToFaceOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float TurnToFaceLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnToFaceLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnToFaceLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool Additive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Additive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Additive", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyMovement", CallKind.ClassMember, m_classData, value); }
            }
            public bool OrientMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OrientMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientMovement", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyRotation", CallKind.ClassMember, m_classData, value); }
            }
            public bool LimitOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LimitOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LimitOnly", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMultiLightProxy : CLogicalEntity
        {
            public CMultiLightProxy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiLightProxy", "CMultiLightProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiLightProxy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiLightProxy", "CMultiLightProxy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiLightProxy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string LightNameFilter
            {
                get { return Invoker.CallNative<string>("SDKClass", "LightNameFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightNameFilter", CallKind.ClassMember, m_classData, value); }
            }
            public string LightClassFilter
            {
                get { return Invoker.CallNative<string>("SDKClass", "LightClassFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightClassFilter", CallKind.ClassMember, m_classData, value); }
            }
            public float LightRadiusFilter
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightRadiusFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightRadiusFilter", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessDelta
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessDelta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessDelta", CallKind.ClassMember, m_classData, value); }
            }
            public bool PerformScreenFade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PerformScreenFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerformScreenFade", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetBrightnessMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetBrightnessMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBrightnessMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentBrightnessMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentBrightnessMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentBrightnessMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMultiplayer_Expresser : CAI_ExpresserWithFollowup
        {
            public CMultiplayer_Expresser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiplayer_Expresser", "CMultiplayer_Expresser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiplayer_Expresser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiplayer_Expresser", "CMultiplayer_Expresser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiplayer_Expresser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool AllowMultipleScenes
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowMultipleScenes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowMultipleScenes", CallKind.ClassMember, m_classData, value); }
            }
            public CAI_ExpresserWithFollowup Parent
            {
                get { return Invoker.CallNative<CAI_ExpresserWithFollowup>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMultiplayRules : CGameRules
        {
            public CMultiplayRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiplayRules", "CMultiplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiplayRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiplayRules", "CMultiplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiplayRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CGameRules Parent
            {
                get { return Invoker.CallNative<CGameRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CMultiSource : CLogicalEntity
        {
            public CMultiSource(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiSource", "CMultiSource", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiSource(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CMultiSource", "CMultiSource", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CMultiSource()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] RgTriggered
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "RgTriggered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RgTriggered", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnTrigger
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTrigger", CallKind.ClassMember, m_classData); }
            }
            public int Total
            {
                get { return Invoker.CallNative<int>("SDKClass", "Total", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Total", CallKind.ClassMember, m_classData, value); }
            }
            public string Globalstate
            {
                get { return Invoker.CallNative<string>("SDKClass", "Globalstate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Globalstate", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavHullPresetVData : ClassData
        {
            public CNavHullPresetVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavHullPresetVData", "CNavHullPresetVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavHullPresetVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavHullPresetVData", "CNavHullPresetVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavHullPresetVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] NavHulls
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "NavHulls", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NavHulls", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNavHullVData : ClassData
        {
            public CNavHullVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavHullVData", "CNavHullVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavHullVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavHullVData", "CNavHullVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavHullVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool AgentEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AgentEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentHeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool AgentShortHeightEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AgentShortHeightEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentShortHeightEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentShortHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentShortHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentShortHeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool AgentCrawlEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AgentCrawlEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentCrawlEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentCrawlHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentCrawlHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentCrawlHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentMaxClimb
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentMaxClimb", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentMaxClimb", CallKind.ClassMember, m_classData, value); }
            }
            public int AgentMaxSlope
            {
                get { return Invoker.CallNative<int>("SDKClass", "AgentMaxSlope", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentMaxSlope", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentMaxJumpDownDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentMaxJumpDownDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentMaxJumpDownDist", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentMaxJumpHorizDistBase
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentMaxJumpHorizDistBase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentMaxJumpHorizDistBase", CallKind.ClassMember, m_classData, value); }
            }
            public float AgentMaxJumpUpDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "AgentMaxJumpUpDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentMaxJumpUpDist", CallKind.ClassMember, m_classData, value); }
            }
            public int AgentBorderErosion
            {
                get { return Invoker.CallNative<int>("SDKClass", "AgentBorderErosion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AgentBorderErosion", CallKind.ClassMember, m_classData, value); }
            }
            public bool FlowMapGenerationEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FlowMapGenerationEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlowMapGenerationEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float FlowMapNodeMaxRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlowMapNodeMaxRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlowMapNodeMaxRadius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNavLinkAnimgraphVar : ClassData
        {
            public CNavLinkAnimgraphVar(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkAnimgraphVar", "CNavLinkAnimgraphVar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkAnimgraphVar(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkAnimgraphVar", "CNavLinkAnimgraphVar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkAnimgraphVar()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint AlignmentDegrees
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AlignmentDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlignmentDegrees", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNavLinkAreaEntity : CPointEntity
        {
            public CNavLinkAreaEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkAreaEntity", "CNavLinkAreaEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkAreaEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkAreaEntity", "CNavLinkAreaEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkAreaEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocatorOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocatorOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocatorOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector LocatorAnglesOffset
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "LocatorAnglesOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocatorAnglesOffset", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMovementForward
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMovementForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMovementForward", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMovementReverse
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMovementReverse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMovementReverse", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowCrossMovableConnections
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowCrossMovableConnections", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowCrossMovableConnections", CallKind.ClassMember, m_classData, value); }
            }
            public string StrFilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrFilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrFilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Filter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNavLinkStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNavLinkStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNavLinkFinish
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNavLinkFinish", CallKind.ClassMember, m_classData); }
            }
            public bool IsTerminus
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsTerminus", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsTerminus", CallKind.ClassMember, m_classData, value); }
            }
            public int Splits
            {
                get { return Invoker.CallNative<int>("SDKClass", "Splits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Splits", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavLinkMovementVData : ClassData
        {
            public CNavLinkMovementVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkMovementVData", "CNavLinkMovementVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkMovementVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavLinkMovementVData", "CNavLinkMovementVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavLinkMovementVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsInterpolated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsInterpolated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsInterpolated", CallKind.ClassMember, m_classData, value); }
            }
            public uint RecommendedDistance
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RecommendedDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecommendedDistance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNavSpaceInfo : CPointEntity
        {
            public CNavSpaceInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavSpaceInfo", "CNavSpaceInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavSpaceInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavSpaceInfo", "CNavSpaceInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavSpaceInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolume : ClassData
        {
            public CNavVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolume", "CNavVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolume", "CNavVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CNavVolumeAll : CNavVolumeVector
        {
            public CNavVolumeAll(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeAll", "CNavVolumeAll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeAll(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeAll", "CNavVolumeAll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeAll()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNavVolumeVector Parent
            {
                get { return Invoker.CallNative<CNavVolumeVector>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeBreadthFirstSearch : CNavVolumeCalculatedVector
        {
            public CNavVolumeBreadthFirstSearch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeBreadthFirstSearch", "CNavVolumeBreadthFirstSearch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeBreadthFirstSearch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeBreadthFirstSearch", "CNavVolumeBreadthFirstSearch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeBreadthFirstSearch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D StartPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StartPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPos", CallKind.ClassMember, m_classData, value); }
            }
            public float SearchDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "SearchDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SearchDist", CallKind.ClassMember, m_classData, value); }
            }
            public CNavVolumeCalculatedVector Parent
            {
                get { return Invoker.CallNative<CNavVolumeCalculatedVector>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeCalculatedVector : CNavVolume
        {
            public CNavVolumeCalculatedVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeCalculatedVector", "CNavVolumeCalculatedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeCalculatedVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeCalculatedVector", "CNavVolumeCalculatedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeCalculatedVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNavVolume Parent
            {
                get { return Invoker.CallNative<CNavVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeMarkupVolume : CNavVolume
        {
            public CNavVolumeMarkupVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeMarkupVolume", "CNavVolumeMarkupVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeMarkupVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeMarkupVolume", "CNavVolumeMarkupVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeMarkupVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNavVolume Parent
            {
                get { return Invoker.CallNative<CNavVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeSphere : CNavVolume
        {
            public CNavVolumeSphere(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeSphere", "CNavVolumeSphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeSphere(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeSphere", "CNavVolumeSphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeSphere()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Center
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CNavVolume Parent
            {
                get { return Invoker.CallNative<CNavVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeSphericalShell : CNavVolumeSphere
        {
            public CNavVolumeSphericalShell(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeSphericalShell", "CNavVolumeSphericalShell", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeSphericalShell(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeSphericalShell", "CNavVolumeSphericalShell", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeSphericalShell()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RadiusInner
            {
                get { return Invoker.CallNative<float>("SDKClass", "RadiusInner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusInner", CallKind.ClassMember, m_classData, value); }
            }
            public CNavVolumeSphere Parent
            {
                get { return Invoker.CallNative<CNavVolumeSphere>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavVolumeVector : CNavVolume
        {
            public CNavVolumeVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeVector", "CNavVolumeVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavVolumeVector", "CNavVolumeVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavVolumeVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool HasBeenPreFiltered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenPreFiltered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenPreFiltered", CallKind.ClassMember, m_classData, value); }
            }
            public CNavVolume Parent
            {
                get { return Invoker.CallNative<CNavVolume>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNavWalkable : CPointEntity
        {
            public CNavWalkable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavWalkable", "CNavWalkable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavWalkable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNavWalkable", "CNavWalkable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNavWalkable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNetworkedSequenceOperation : ClassData
        {
            public CNetworkedSequenceOperation(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkedSequenceOperation", "CNetworkedSequenceOperation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkedSequenceOperation(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkedSequenceOperation", "CNetworkedSequenceOperation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkedSequenceOperation()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevCycle", CallKind.ClassMember, m_classData, value); }
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public bool SequenceChangeNetworked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SequenceChangeNetworked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceChangeNetworked", CallKind.ClassMember, m_classData, value); }
            }
            public bool Discontinuity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Discontinuity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Discontinuity", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevCycleFromDiscontinuity
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevCycleFromDiscontinuity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevCycleFromDiscontinuity", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevCycleForAnimEventDetection
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevCycleForAnimEventDetection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevCycleForAnimEventDetection", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNetworkOriginCellCoordQuantizedVector : ClassData
        {
            public CNetworkOriginCellCoordQuantizedVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkOriginCellCoordQuantizedVector", "CNetworkOriginCellCoordQuantizedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkOriginCellCoordQuantizedVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkOriginCellCoordQuantizedVector", "CNetworkOriginCellCoordQuantizedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkOriginCellCoordQuantizedVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort CellX
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CellX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CellX", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CellY
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CellY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CellY", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CellZ
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CellZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CellZ", CallKind.ClassMember, m_classData, value); }
            }
            public ushort OutsideWorld
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "OutsideWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutsideWorld", CallKind.ClassMember, m_classData, value); }
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public float Z
            {
                get { return Invoker.CallNative<float>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNetworkOriginQuantizedVector : ClassData
        {
            public CNetworkOriginQuantizedVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkOriginQuantizedVector", "CNetworkOriginQuantizedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkOriginQuantizedVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkOriginQuantizedVector", "CNetworkOriginQuantizedVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkOriginQuantizedVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public float Z
            {
                get { return Invoker.CallNative<float>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNetworkTransmitComponent : ClassData
        {
            public CNetworkTransmitComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkTransmitComponent", "CNetworkTransmitComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkTransmitComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkTransmitComponent", "CNetworkTransmitComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkTransmitComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte TransmitStateOwnedCounter
            {
                get { return Invoker.CallNative<byte>("SDKClass", "TransmitStateOwnedCounter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransmitStateOwnedCounter", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNetworkVarChainer : ClassData
        {
            public CNetworkVarChainer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkVarChainer", "CNetworkVarChainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkVarChainer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkVarChainer", "CNetworkVarChainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkVarChainer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ChangeAccessorFieldPathIndex_t PathIndex
            {
                get { return Invoker.CallNative<ChangeAccessorFieldPathIndex_t>("SDKClass", "PathIndex", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNetworkVelocityVector : ClassData
        {
            public CNetworkVelocityVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkVelocityVector", "CNetworkVelocityVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkVelocityVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkVelocityVector", "CNetworkVelocityVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkVelocityVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public float Z
            {
                get { return Invoker.CallNative<float>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNetworkViewOffsetVector : ClassData
        {
            public CNetworkViewOffsetVector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkViewOffsetVector", "CNetworkViewOffsetVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkViewOffsetVector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNetworkViewOffsetVector", "CNetworkViewOffsetVector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNetworkViewOffsetVector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public float Z
            {
                get { return Invoker.CallNative<float>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNewParticleEffect : IParticleEffect
        {
            public CNewParticleEffect(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNewParticleEffect", "CNewParticleEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNewParticleEffect(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNewParticleEffect", "CNewParticleEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNewParticleEffect()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
            public int[] Prev
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Prev", CallKind.ClassMember, m_classData); }
            }
            public int[] Particles
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Particles", CallKind.ClassMember, m_classData); }
            }
            public string DebugName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DebugName", CallKind.ClassMember, m_classData); }
            }
            public Vector2D SortOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SortOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Owner
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public int[] OwningParticleProperty
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "OwningParticleProperty", CallKind.ClassMember, m_classData); }
            }
            public float FreezeTransitionStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreezeTransitionStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTransitionStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FreezeTransitionDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreezeTransitionDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTransitionDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float FreezeTransitionOverride
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreezeTransitionOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTransitionOverride", CallKind.ClassMember, m_classData, value); }
            }
            public bool FreezeTransitionActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FreezeTransitionActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTransitionActive", CallKind.ClassMember, m_classData, value); }
            }
            public bool FreezeTargetState
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FreezeTargetState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTargetState", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanFreeze
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanFreeze", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanFreeze", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastMax", CallKind.ClassMember, m_classData, value); }
            }
            public int SplitScreenUser
            {
                get { return Invoker.CallNative<int>("SDKClass", "SplitScreenUser", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplitScreenUser", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AggregationCenter
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AggregationCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AggregationCenter", CallKind.ClassMember, m_classData, value); }
            }
            public int RefCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "RefCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefCount", CallKind.ClassMember, m_classData, value); }
            }
            public IParticleEffect Parent
            {
                get { return Invoker.CallNative<IParticleEffect>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmAdditiveBlendTask : CNmBlendTaskBase
        {
            public CNmAdditiveBlendTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmAdditiveBlendTask", "CNmAdditiveBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmAdditiveBlendTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmAdditiveBlendTask", "CNmAdditiveBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmAdditiveBlendTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmBlendTaskBase Parent
            {
                get { return Invoker.CallNative<CNmBlendTaskBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmBitFlags : ClassData
        {
            public CNmBitFlags(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBitFlags", "CNmBitFlags", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBitFlags(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBitFlags", "CNmBitFlags", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBitFlags()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmBlendTask : CNmBlendTaskBase
        {
            public CNmBlendTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBlendTask", "CNmBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBlendTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBlendTask", "CNmBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBlendTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmBlendTaskBase Parent
            {
                get { return Invoker.CallNative<CNmBlendTaskBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmBlendTaskBase : CNmPoseTask
        {
            public CNmBlendTaskBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBlendTaskBase", "CNmBlendTaskBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBlendTaskBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBlendTaskBase", "CNmBlendTaskBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBlendTaskBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmBoneWeightList : ClassData
        {
            public CNmBoneWeightList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBoneWeightList", "CNmBoneWeightList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBoneWeightList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmBoneWeightList", "CNmBoneWeightList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmBoneWeightList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Weights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weights", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmCachedPoseReadTask : CNmPoseTask
        {
            public CNmCachedPoseReadTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmCachedPoseReadTask", "CNmCachedPoseReadTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmCachedPoseReadTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmCachedPoseReadTask", "CNmCachedPoseReadTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmCachedPoseReadTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmCachedPoseWriteTask : CNmPoseTask
        {
            public CNmCachedPoseWriteTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmCachedPoseWriteTask", "CNmCachedPoseWriteTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmCachedPoseWriteTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmCachedPoseWriteTask", "CNmCachedPoseWriteTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmCachedPoseWriteTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmChainLookatTask : CNmPoseTask
        {
            public CNmChainLookatTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmChainLookatTask", "CNmChainLookatTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmChainLookatTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmChainLookatTask", "CNmChainLookatTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmChainLookatTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ChainEndBoneIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChainEndBoneIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChainEndBoneIdx", CallKind.ClassMember, m_classData, value); }
            }
            public int NumBonesInChain
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumBonesInChain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBonesInChain", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ChainForwardDir
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ChainForwardDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChainForwardDir", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float HorizontalAngleLimitDegrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "HorizontalAngleLimitDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HorizontalAngleLimitDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public float VerticalAngleLimitDegrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "VerticalAngleLimitDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalAngleLimitDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LookatTarget
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LookatTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookatTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsTargetInWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsTargetInWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsTargetInWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRunningFromDeserializedData
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRunningFromDeserializedData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRunningFromDeserializedData", CallKind.ClassMember, m_classData, value); }
            }
            public float HorizontalAngleDegrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "HorizontalAngleDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HorizontalAngleDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public float VerticalAngleDegrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "VerticalAngleDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalAngleDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmChainSolverTask : CNmPoseTask
        {
            public CNmChainSolverTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmChainSolverTask", "CNmChainSolverTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmChainSolverTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmChainSolverTask", "CNmChainSolverTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmChainSolverTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EffectorBoneIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "EffectorBoneIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectorBoneIdx", CallKind.ClassMember, m_classData, value); }
            }
            public int NumBonesInChain
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumBonesInChain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBonesInChain", CallKind.ClassMember, m_classData, value); }
            }
            public CNmTarget EffectorTarget
            {
                get { return Invoker.CallNative<CNmTarget>("SDKClass", "EffectorTarget", CallKind.ClassMember, m_classData); }
            }
            public byte BlendMode
            {
                get { return Invoker.CallNative<byte>("SDKClass", "BlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsTargetInWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsTargetInWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsTargetInWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRunningFromDeserializedData
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRunningFromDeserializedData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRunningFromDeserializedData", CallKind.ClassMember, m_classData, value); }
            }
            public float DebugTotalChainLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "DebugTotalChainLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugTotalChainLength", CallKind.ClassMember, m_classData, value); }
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmClip : ClassData
        {
            public CNmClip(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmClip", "CNmClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmClip(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmClip", "CNmClip", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmClip()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint NumFrames
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumFrames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumFrames", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] CompressedPoseOffsets
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "CompressedPoseOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompressedPoseOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public CNmSyncTrack SyncTrack
            {
                get { return Invoker.CallNative<CNmSyncTrack>("SDKClass", "SyncTrack", CallKind.ClassMember, m_classData); }
            }
            public CNmRootMotionData RootMotion
            {
                get { return Invoker.CallNative<CNmRootMotionData>("SDKClass", "RootMotion", CallKind.ClassMember, m_classData); }
            }
            public bool IsAdditive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAdditive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAdditive", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ModelSpaceBoneSamplingIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ModelSpaceBoneSamplingIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelSpaceBoneSamplingIndices", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmEvent : ClassData
        {
            public CNmEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEvent", "CNmEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEvent", "CNmEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StartTimeSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTimeSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTimeSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public float DurationSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "DurationSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DurationSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClientOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClientOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientOnly", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmEventConsumer : ClassData
        {
            public CNmEventConsumer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumer", "CNmEventConsumer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumer", "CNmEventConsumer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CNmEventConsumerBody : CNmEventConsumer
        {
            public CNmEventConsumerBody(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerBody", "CNmEventConsumerBody", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerBody(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerBody", "CNmEventConsumerBody", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerBody()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEventConsumer Parent
            {
                get { return Invoker.CallNative<CNmEventConsumer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmEventConsumerHudModelArms : CNmEventConsumerBody
        {
            public CNmEventConsumerHudModelArms(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerHudModelArms", "CNmEventConsumerHudModelArms", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerHudModelArms(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerHudModelArms", "CNmEventConsumerHudModelArms", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerHudModelArms()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEventConsumerBody Parent
            {
                get { return Invoker.CallNative<CNmEventConsumerBody>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmEventConsumerLegacy : CNmEventConsumer
        {
            public CNmEventConsumerLegacy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerLegacy", "CNmEventConsumerLegacy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerLegacy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerLegacy", "CNmEventConsumerLegacy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerLegacy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEventConsumer Parent
            {
                get { return Invoker.CallNative<CNmEventConsumer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmEventConsumerParticle : CNmEventConsumer
        {
            public CNmEventConsumerParticle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerParticle", "CNmEventConsumerParticle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerParticle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerParticle", "CNmEventConsumerParticle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerParticle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEventConsumer Parent
            {
                get { return Invoker.CallNative<CNmEventConsumer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmEventConsumerSound : CNmEventConsumer
        {
            public CNmEventConsumerSound(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerSound", "CNmEventConsumerSound", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerSound(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmEventConsumerSound", "CNmEventConsumerSound", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmEventConsumerSound()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEventConsumer Parent
            {
                get { return Invoker.CallNative<CNmEventConsumer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmFollowBoneTask : CNmPoseTask
        {
            public CNmFollowBoneTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFollowBoneTask", "CNmFollowBoneTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFollowBoneTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFollowBoneTask", "CNmFollowBoneTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFollowBoneTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmFootEvent : CNmEvent
        {
            public CNmFootEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFootEvent", "CNmFootEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFootEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFootEvent", "CNmFootEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFootEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Phase
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Phase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Phase", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmFrameSnapEvent : CNmEvent
        {
            public CNmFrameSnapEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFrameSnapEvent", "CNmFrameSnapEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFrameSnapEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmFrameSnapEvent", "CNmFrameSnapEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmFrameSnapEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FrameSnapMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FrameSnapMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameSnapMode", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmGraphDefinition : ClassData
        {
            public CNmGraphDefinition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmGraphDefinition", "CNmGraphDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmGraphDefinition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmGraphDefinition", "CNmGraphDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmGraphDefinition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short[] PersistentNodeIndices
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "PersistentNodeIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PersistentNodeIndices", CallKind.ClassMember, m_classData, value); }
            }
            public short RootNodeIdx
            {
                get { return Invoker.CallNative<short>("SDKClass", "RootNodeIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootNodeIdx", CallKind.ClassMember, m_classData, value); }
            }
            public short[] VirtualParameterNodeIndices
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "VirtualParameterNodeIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VirtualParameterNodeIndices", CallKind.ClassMember, m_classData, value); }
            }
            public string[] NodePaths
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "NodePaths", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodePaths", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmIDEvent : CNmEvent
        {
            public CNmIDEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIDEvent", "CNmIDEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIDEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIDEvent", "CNmIDEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIDEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmIKBody : ClassData
        {
            public CNmIKBody(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKBody", "CNmIKBody", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKBody(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKBody", "CNmIKBody", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKBody()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Mass
            {
                get { return Invoker.CallNative<float>("SDKClass", "Mass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mass", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocalMassCenter
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalMassCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalMassCenter", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Radius
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Resistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Resistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Resistance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmIKEffector : ClassData
        {
            public CNmIKEffector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKEffector", "CNmIKEffector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKEffector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKEffector", "CNmIKEffector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKEffector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BodyIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TargetPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TargetPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetPosition", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmIKJoint : ClassData
        {
            public CNmIKJoint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKJoint", "CNmIKJoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKJoint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKJoint", "CNmIKJoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKJoint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ParentIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int BodyIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float SwingLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwingLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwingLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinTwistLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinTwistLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinTwistLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTwistLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTwistLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTwistLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmIKRig : ClassData
        {
            public CNmIKRig(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKRig", "CNmIKRig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKRig(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmIKRig", "CNmIKRig", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmIKRig()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CNmLegacyEvent : CNmEvent
        {
            public CNmLegacyEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmLegacyEvent", "CNmLegacyEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmLegacyEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmLegacyEvent", "CNmLegacyEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmLegacyEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AnimEventClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AnimEventClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimEventClassName", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmMaterialAttributeEvent : CNmEvent
        {
            public CNmMaterialAttributeEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmMaterialAttributeEvent", "CNmMaterialAttributeEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmMaterialAttributeEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmMaterialAttributeEvent", "CNmMaterialAttributeEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmMaterialAttributeEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AttributeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttributeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeName", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttributeNameToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttributeNameToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeNameToken", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmModelSpaceBlendTask : CNmBlendTaskBase
        {
            public CNmModelSpaceBlendTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmModelSpaceBlendTask", "CNmModelSpaceBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmModelSpaceBlendTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmModelSpaceBlendTask", "CNmModelSpaceBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmModelSpaceBlendTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmBlendTaskBase Parent
            {
                get { return Invoker.CallNative<CNmBlendTaskBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmOrientationWarpEvent : CNmEvent
        {
            public CNmOrientationWarpEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmOrientationWarpEvent", "CNmOrientationWarpEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmOrientationWarpEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmOrientationWarpEvent", "CNmOrientationWarpEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmOrientationWarpEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmOverlayBlendTask : CNmBlendTaskBase
        {
            public CNmOverlayBlendTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmOverlayBlendTask", "CNmOverlayBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmOverlayBlendTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmOverlayBlendTask", "CNmOverlayBlendTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmOverlayBlendTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmBlendTaskBase Parent
            {
                get { return Invoker.CallNative<CNmBlendTaskBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmParticleEvent : CNmEvent
        {
            public CNmParticleEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmParticleEvent", "CNmParticleEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmParticleEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmParticleEvent", "CNmParticleEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmParticleEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Relevance
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Relevance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Relevance", CallKind.ClassMember, m_classData, value); }
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public string Tags
            {
                get { return Invoker.CallNative<string>("SDKClass", "Tags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tags", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopImmediately
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopImmediately", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopImmediately", CallKind.ClassMember, m_classData, value); }
            }
            public string Config
            {
                get { return Invoker.CallNative<string>("SDKClass", "Config", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Config", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectForConfig
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectForConfig", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectForConfig", CallKind.ClassMember, m_classData, value); }
            }
            public bool DetachFromOwner
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DetachFromOwner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetachFromOwner", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayEndCap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayEndCap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayEndCap", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmPoseTask : ClassData
        {
            public CNmPoseTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmPoseTask", "CNmPoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmPoseTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmPoseTask", "CNmPoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmPoseTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CNmReferencePoseTask : CNmPoseTask
        {
            public CNmReferencePoseTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmReferencePoseTask", "CNmReferencePoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmReferencePoseTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmReferencePoseTask", "CNmReferencePoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmReferencePoseTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmRootMotionData : ClassData
        {
            public CNmRootMotionData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmRootMotionData", "CNmRootMotionData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmRootMotionData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmRootMotionData", "CNmRootMotionData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmRootMotionData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NumFrames
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumFrames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumFrames", CallKind.ClassMember, m_classData, value); }
            }
            public float AverageLinearVelocity
            {
                get { return Invoker.CallNative<float>("SDKClass", "AverageLinearVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AverageLinearVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public float AverageAngularVelocityRadians
            {
                get { return Invoker.CallNative<float>("SDKClass", "AverageAngularVelocityRadians", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AverageAngularVelocityRadians", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmRootMotionEvent : CNmEvent
        {
            public CNmRootMotionEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmRootMotionEvent", "CNmRootMotionEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmRootMotionEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmRootMotionEvent", "CNmRootMotionEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmRootMotionEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float BlendTimeSeconds
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendTimeSeconds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTimeSeconds", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmSampleTask : CNmPoseTask
        {
            public CNmSampleTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSampleTask", "CNmSampleTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSampleTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSampleTask", "CNmSampleTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSampleTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmScaleTask : CNmPoseTask
        {
            public CNmScaleTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmScaleTask", "CNmScaleTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmScaleTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmScaleTask", "CNmScaleTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmScaleTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmSkeleton : ClassData
        {
            public CNmSkeleton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSkeleton", "CNmSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSkeleton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSkeleton", "CNmSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSkeleton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] ParentIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ParentIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentIndices", CallKind.ClassMember, m_classData, value); }
            }
            public int NumBonesToSampleAtLowLOD
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumBonesToSampleAtLowLOD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumBonesToSampleAtLowLOD", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPropSkeleton
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPropSkeleton", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPropSkeleton", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmSoundEvent : CNmEvent
        {
            public CNmSoundEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSoundEvent", "CNmSoundEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSoundEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSoundEvent", "CNmSoundEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSoundEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Relevance
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Relevance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Relevance", CallKind.ClassMember, m_classData, value); }
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint Position
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public string Tags
            {
                get { return Invoker.CallNative<string>("SDKClass", "Tags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tags", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsServerOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsServerOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsServerOnly", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmSyncTrack : ClassData
        {
            public CNmSyncTrack(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSyncTrack", "CNmSyncTrack", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSyncTrack(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmSyncTrack", "CNmSyncTrack", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmSyncTrack()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int StartEventOffset
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartEventOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartEventOffset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmTarget : ClassData
        {
            public CNmTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTarget", "CNmTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTarget", "CNmTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsBoneTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBoneTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBoneTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsUsingBoneSpaceOffsets
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsUsingBoneSpaceOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsUsingBoneSpaceOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasOffsets
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsSet
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsSet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsSet", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNmTargetWarpEvent : CNmEvent
        {
            public CNmTargetWarpEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTargetWarpEvent", "CNmTargetWarpEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTargetWarpEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTargetWarpEvent", "CNmTargetWarpEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTargetWarpEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Rule
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Rule", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rule", CallKind.ClassMember, m_classData, value); }
            }
            public byte Algorithm
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Algorithm", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Algorithm", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmTransitionEvent : CNmEvent
        {
            public CNmTransitionEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTransitionEvent", "CNmTransitionEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTransitionEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmTransitionEvent", "CNmTransitionEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmTransitionEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Rule
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Rule", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rule", CallKind.ClassMember, m_classData, value); }
            }
            public CNmEvent Parent
            {
                get { return Invoker.CallNative<CNmEvent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNmZeroPoseTask : CNmPoseTask
        {
            public CNmZeroPoseTask(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmZeroPoseTask", "CNmZeroPoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmZeroPoseTask(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNmZeroPoseTask", "CNmZeroPoseTask", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNmZeroPoseTask()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmPoseTask Parent
            {
                get { return Invoker.CallNative<CNmPoseTask>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CNPCPhysicsHull : ClassData
        {
            public CNPCPhysicsHull(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNPCPhysicsHull", "CNPCPhysicsHull", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNPCPhysicsHull(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNPCPhysicsHull", "CNPCPhysicsHull", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNPCPhysicsHull()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public float CapsuleHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "CapsuleHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CapsuleHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float CapsuleRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "CapsuleRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CapsuleRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float GroundBoxHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "GroundBoxHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundBoxHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float GroundBoxWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "GroundBoxWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundBoxWidth", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CNullEntity : CBaseEntity
        {
            public CNullEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNullEntity", "CNullEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNullEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CNullEntity", "CNullEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CNullEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CollisionGroupContext_t : ClassData
        {
            public CollisionGroupContext_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CollisionGroupContext_t", "CollisionGroupContext_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CollisionGroupContext_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CollisionGroupContext_t", "CollisionGroupContext_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CollisionGroupContext_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int CollisionGroupNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "CollisionGroupNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionGroupNumber", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class COmniLight : CBarnLight
        {
            public COmniLight(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COmniLight", "COmniLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COmniLight(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COmniLight", "COmniLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COmniLight()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float InnerAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float OuterAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "OuterAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterAngle", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShowLight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShowLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShowLight", CallKind.ClassMember, m_classData, value); }
            }
            public CBarnLight Parent
            {
                get { return Invoker.CallNative<CBarnLight>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CompMatMutatorCondition_t : ClassData
        {
            public CompMatMutatorCondition_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompMatMutatorCondition_t", "CompMatMutatorCondition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompMatMutatorCondition_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompMatMutatorCondition_t", "CompMatMutatorCondition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompMatMutatorCondition_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint MutatorCondition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MutatorCondition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MutatorCondition", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMutatorConditionContainerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMutatorConditionContainerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMutatorConditionContainerName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMutatorConditionContainerVarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMutatorConditionContainerVarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMutatorConditionContainerVarName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMutatorConditionContainerVarValue
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMutatorConditionContainerVarValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMutatorConditionContainerVarValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool PassWhenTrue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PassWhenTrue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PassWhenTrue", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CompMatPropertyMutator_t : ClassData
        {
            public CompMatPropertyMutator_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompMatPropertyMutator_t", "CompMatPropertyMutator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompMatPropertyMutator_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompMatPropertyMutator_t", "CompMatPropertyMutator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompMatPropertyMutator_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public uint MutatorCommandType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MutatorCommandType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MutatorCommandType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrInitWith_Container
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrInitWith_Container", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrInitWith_Container", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyProperty_InputContainerSrc
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyProperty_InputContainerSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyProperty_InputContainerSrc", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyProperty_InputContainerProperty
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyProperty_InputContainerProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyProperty_InputContainerProperty", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyProperty_TargetProperty
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyProperty_TargetProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyProperty_TargetProperty", CallKind.ClassMember, m_classData, value); }
            }
            public string StrRandomRollInputVars_SeedInputVar
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrRandomRollInputVars_SeedInputVar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrRandomRollInputVars_SeedInputVar", CallKind.ClassMember, m_classData, value); }
            }
            public string[] RandomRollInputVars_InputVarsToRoll
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "RandomRollInputVars_InputVarsToRoll", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomRollInputVars_InputVarsToRoll", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyMatchingKeys_InputContainerSrc
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyMatchingKeys_InputContainerSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyMatchingKeys_InputContainerSrc", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyKeysWithSuffix_InputContainerSrc
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyKeysWithSuffix_InputContainerSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyKeysWithSuffix_InputContainerSrc", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyKeysWithSuffix_FindSuffix
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyKeysWithSuffix_FindSuffix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyKeysWithSuffix_FindSuffix", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCopyKeysWithSuffix_ReplaceSuffix
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCopyKeysWithSuffix_ReplaceSuffix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCopyKeysWithSuffix_ReplaceSuffix", CallKind.ClassMember, m_classData, value); }
            }
            public CompositeMaterialInputLooseVariable_t SetValue_Value
            {
                get { return Invoker.CallNative<CompositeMaterialInputLooseVariable_t>("SDKClass", "SetValue_Value", CallKind.ClassMember, m_classData); }
            }
            public string StrGenerateTexture_TargetParam
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrGenerateTexture_TargetParam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrGenerateTexture_TargetParam", CallKind.ClassMember, m_classData, value); }
            }
            public string StrGenerateTexture_InitialContainer
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrGenerateTexture_InitialContainer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrGenerateTexture_InitialContainer", CallKind.ClassMember, m_classData, value); }
            }
            public int Resolution
            {
                get { return Invoker.CallNative<int>("SDKClass", "Resolution", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Resolution", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsScratchTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsScratchTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsScratchTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool SplatDebugInfo
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SplatDebugInfo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplatDebugInfo", CallKind.ClassMember, m_classData, value); }
            }
            public bool CaptureInRenderDoc
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CaptureInRenderDoc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CaptureInRenderDoc", CallKind.ClassMember, m_classData, value); }
            }
            public string StrPopInputQueue_Container
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrPopInputQueue_Container", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrPopInputQueue_Container", CallKind.ClassMember, m_classData, value); }
            }
            public string StrDrawText_InputContainerSrc
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrDrawText_InputContainerSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrDrawText_InputContainerSrc", CallKind.ClassMember, m_classData, value); }
            }
            public string StrDrawText_InputContainerProperty
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrDrawText_InputContainerProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrDrawText_InputContainerProperty", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D DrawText_Position
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "DrawText_Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawText_Position", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColDrawText_Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColDrawText_Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColDrawText_Color", CallKind.ClassMember, m_classData, value); }
            }
            public string StrDrawText_Font
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrDrawText_Font", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrDrawText_Font", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CompositeMaterial_t : ClassData
        {
            public CompositeMaterial_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterial_t", "CompositeMaterial_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterial_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterial_t", "CompositeMaterial_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterial_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CompositeMaterialAssemblyProcedure_t : ClassData
        {
            public CompositeMaterialAssemblyProcedure_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialAssemblyProcedure_t", "CompositeMaterialAssemblyProcedure_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialAssemblyProcedure_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialAssemblyProcedure_t", "CompositeMaterialAssemblyProcedure_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialAssemblyProcedure_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CompositeMaterialEditorPoint_t : ClassData
        {
            public CompositeMaterialEditorPoint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialEditorPoint_t", "CompositeMaterialEditorPoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialEditorPoint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialEditorPoint_t", "CompositeMaterialEditorPoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialEditorPoint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SequenceIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SequenceIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableChildModel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableChildModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableChildModel", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CompositeMaterialInputContainer_t : ClassData
        {
            public CompositeMaterialInputContainer_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialInputContainer_t", "CompositeMaterialInputContainer_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialInputContainer_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialInputContainer_t", "CompositeMaterialInputContainer_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialInputContainer_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public uint CompositeMaterialInputContainerSourceType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CompositeMaterialInputContainerSourceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompositeMaterialInputContainerSourceType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrAttrName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrAttrName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrAttrName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrAlias
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrAlias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrAlias", CallKind.ClassMember, m_classData, value); }
            }
            public string StrAttrNameForVar
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrAttrNameForVar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrAttrNameForVar", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExposeExternally
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExposeExternally", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposeExternally", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CompositeMaterialInputLooseVariable_t : ClassData
        {
            public CompositeMaterialInputLooseVariable_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialInputLooseVariable_t", "CompositeMaterialInputLooseVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialInputLooseVariable_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialInputLooseVariable_t", "CompositeMaterialInputLooseVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialInputLooseVariable_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrName", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExposeExternally
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExposeExternally", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposeExternally", CallKind.ClassMember, m_classData, value); }
            }
            public string StrExposedFriendlyName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrExposedFriendlyName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrExposedFriendlyName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrExposedFriendlyGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrExposedFriendlyGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrExposedFriendlyGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExposedVariableIsFixedRange
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExposedVariableIsFixedRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposedVariableIsFixedRange", CallKind.ClassMember, m_classData, value); }
            }
            public string StrExposedVisibleWhenTrue
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrExposedVisibleWhenTrue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrExposedVisibleWhenTrue", CallKind.ClassMember, m_classData, value); }
            }
            public string StrExposedHiddenWhenTrue
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrExposedHiddenWhenTrue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrExposedHiddenWhenTrue", CallKind.ClassMember, m_classData, value); }
            }
            public string StrExposedValueList
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrExposedValueList", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrExposedValueList", CallKind.ClassMember, m_classData, value); }
            }
            public uint VariableType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VariableType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VariableType", CallKind.ClassMember, m_classData, value); }
            }
            public bool ValueBoolean
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ValueBoolean", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueBoolean", CallKind.ClassMember, m_classData, value); }
            }
            public int ValueIntX
            {
                get { return Invoker.CallNative<int>("SDKClass", "ValueIntX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueIntX", CallKind.ClassMember, m_classData, value); }
            }
            public int ValueIntY
            {
                get { return Invoker.CallNative<int>("SDKClass", "ValueIntY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueIntY", CallKind.ClassMember, m_classData, value); }
            }
            public int ValueIntZ
            {
                get { return Invoker.CallNative<int>("SDKClass", "ValueIntZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueIntZ", CallKind.ClassMember, m_classData, value); }
            }
            public int ValueIntW
            {
                get { return Invoker.CallNative<int>("SDKClass", "ValueIntW", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueIntW", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasFloatBounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasFloatBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasFloatBounds", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatX
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatX", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatX_Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatX_Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatX_Min", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatX_Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatX_Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatX_Max", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatY
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatY", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatY_Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatY_Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatY_Min", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatY_Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatY_Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatY_Max", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatZ", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatZ_Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatZ_Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatZ_Min", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatZ_Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatZ_Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatZ_Max", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatW
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatW", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatW", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatW_Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatW_Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatW_Min", CallKind.ClassMember, m_classData, value); }
            }
            public float ValueFloatW_Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValueFloatW_Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueFloatW_Max", CallKind.ClassMember, m_classData, value); }
            }
            public uint ValueSystemVar
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ValueSystemVar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueSystemVar", CallKind.ClassMember, m_classData, value); }
            }
            public string StrTextureContentAssetPath
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrTextureContentAssetPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrTextureContentAssetPath", CallKind.ClassMember, m_classData, value); }
            }
            public string StrTextureCompilationVtexTemplate
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrTextureCompilationVtexTemplate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrTextureCompilationVtexTemplate", CallKind.ClassMember, m_classData, value); }
            }
            public uint TextureType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TextureType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrString
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrString", CallKind.ClassMember, m_classData, value); }
            }
            public string StrPanoramaPanelPath
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrPanoramaPanelPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrPanoramaPanelPath", CallKind.ClassMember, m_classData, value); }
            }
            public int PanoramaRenderRes
            {
                get { return Invoker.CallNative<int>("SDKClass", "PanoramaRenderRes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanoramaRenderRes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CompositeMaterialMatchFilter_t : ClassData
        {
            public CompositeMaterialMatchFilter_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialMatchFilter_t", "CompositeMaterialMatchFilter_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialMatchFilter_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CompositeMaterialMatchFilter_t", "CompositeMaterialMatchFilter_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CompositeMaterialMatchFilter_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint CompositeMaterialMatchFilterType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CompositeMaterialMatchFilterType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompositeMaterialMatchFilterType", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMatchFilter
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMatchFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMatchFilter", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMatchValue
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMatchValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMatchValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool PassWhenTrue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PassWhenTrue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PassWhenTrue", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ConfigIndex : ClassData
        {
            public ConfigIndex(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConfigIndex", "ConfigIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConfigIndex(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConfigIndex", "ConfigIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConfigIndex()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Group
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Group", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Group", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Config
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Config", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Config", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ConstantInfo_t : ClassData
        {
            public ConstantInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConstantInfo_t", "ConstantInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConstantInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConstantInfo_t", "ConstantInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConstantInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameToken", CallKind.ClassMember, m_classData, value); }
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class constraint_axislimit_t : ClassData
        {
            public constraint_axislimit_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_axislimit_t", "constraint_axislimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_axislimit_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_axislimit_t", "constraint_axislimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_axislimit_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MinRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorTargetAngSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorTargetAngSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorTargetAngSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorMaxTorque
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorMaxTorque", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorMaxTorque", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class constraint_breakableparams_t : ClassData
        {
            public constraint_breakableparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_breakableparams_t", "constraint_breakableparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_breakableparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_breakableparams_t", "constraint_breakableparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_breakableparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Strength
            {
                get { return Invoker.CallNative<float>("SDKClass", "Strength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strength", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float TorqueLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BodyMassScale
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BodyMassScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyMassScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsActive", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class constraint_hingeparams_t : ClassData
        {
            public constraint_hingeparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_hingeparams_t", "constraint_hingeparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_hingeparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("constraint_hingeparams_t", "constraint_hingeparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public constraint_hingeparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D WorldPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WorldPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WorldAxisDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WorldAxisDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldAxisDirection", CallKind.ClassMember, m_classData, value); }
            }
            public constraint_axislimit_t HingeAxis
            {
                get { return Invoker.CallNative<constraint_axislimit_t>("SDKClass", "HingeAxis", CallKind.ClassMember, m_classData); }
            }
            public constraint_breakableparams_t Constraint
            {
                get { return Invoker.CallNative<constraint_breakableparams_t>("SDKClass", "Constraint", CallKind.ClassMember, m_classData); }
            }
        }
        public class ConstraintSoundInfo : ClassData
        {
            public ConstraintSoundInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConstraintSoundInfo", "ConstraintSoundInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConstraintSoundInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ConstraintSoundInfo", "ConstraintSoundInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ConstraintSoundInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public VelocitySampler Sampler
            {
                get { return Invoker.CallNative<VelocitySampler>("SDKClass", "Sampler", CallKind.ClassMember, m_classData); }
            }
            public SimpleConstraintSoundProfile SoundProfile
            {
                get { return Invoker.CallNative<SimpleConstraintSoundProfile>("SDKClass", "SoundProfile", CallKind.ClassMember, m_classData); }
            }
            public Vector2D ForwardAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ForwardAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardAxis", CallKind.ClassMember, m_classData, value); }
            }
            public string TravelSoundFwd
            {
                get { return Invoker.CallNative<string>("SDKClass", "TravelSoundFwd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TravelSoundFwd", CallKind.ClassMember, m_classData, value); }
            }
            public string TravelSoundBack
            {
                get { return Invoker.CallNative<string>("SDKClass", "TravelSoundBack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TravelSoundBack", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] ReversalSounds
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ReversalSounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReversalSounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayTravelSound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayTravelSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayTravelSound", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayReversalSound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayReversalSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayReversalSound", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ControlPointReference_t : ClassData
        {
            public ControlPointReference_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ControlPointReference_t", "ControlPointReference_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ControlPointReference_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ControlPointReference_t", "ControlPointReference_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ControlPointReference_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ControlPointNameString
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPointNameString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPointNameString", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OffsetFromControlPoint
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OffsetFromControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OffsetFromControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public bool OffsetInLocalSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OffsetInLocalSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OffsetInLocalSpace", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class COrientationWarpUpdateNode : CUnaryUpdateNode
        {
            public COrientationWarpUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrientationWarpUpdateNode", "COrientationWarpUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrientationWarpUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrientationWarpUpdateNode", "COrientationWarpUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrientationWarpUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Mode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle TargetParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TargetPositionParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetPositionParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle FallbackTargetPositionParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "FallbackTargetPositionParam", CallKind.ClassMember, m_classData); }
            }
            public uint TargetOffsetMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetOffsetMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetOffsetMode", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle TargetOffsetParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetOffsetParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public uint RootMotionSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RootMotionSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootMotionSource", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRootMotionScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRootMotionScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRootMotionScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnablePreferredRotationDirection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnablePreferredRotationDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnablePreferredRotationDirection", CallKind.ClassMember, m_classData, value); }
            }
            public uint PreferredRotationDirection
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PreferredRotationDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreferredRotationDirection", CallKind.ClassMember, m_classData, value); }
            }
            public float PreferredRotationThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreferredRotationThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreferredRotationThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class COrientConstraint : CBaseConstraint
        {
            public COrientConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrientConstraint", "COrientConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrientConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrientConstraint", "COrientConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrientConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class COrnamentProp : CDynamicProp
        {
            public COrnamentProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrnamentProp", "COrnamentProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrnamentProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("COrnamentProp", "COrnamentProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public COrnamentProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string InitialOwner
            {
                get { return Invoker.CallNative<string>("SDKClass", "InitialOwner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialOwner", CallKind.ClassMember, m_classData, value); }
            }
            public CDynamicProp Parent
            {
                get { return Invoker.CallNative<CDynamicProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CountdownTimer : ClassData
        {
            public CountdownTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CountdownTimer", "CountdownTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CountdownTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CountdownTimer", "CountdownTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CountdownTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float Timestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "Timestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float Timescale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Timescale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timescale", CallKind.ClassMember, m_classData, value); }
            }
            public uint WorldGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CovMatrix3 : ClassData
        {
            public CovMatrix3(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CovMatrix3", "CovMatrix3", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CovMatrix3(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CovMatrix3", "CovMatrix3", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CovMatrix3()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Diag
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Diag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Diag", CallKind.ClassMember, m_classData, value); }
            }
            public float XY
            {
                get { return Invoker.CallNative<float>("SDKClass", "XY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XY", CallKind.ClassMember, m_classData, value); }
            }
            public float XZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "XZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XZ", CallKind.ClassMember, m_classData, value); }
            }
            public float YZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "YZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YZ", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPairedSequenceComponentUpdater : CAnimComponentUpdater
        {
            public CPairedSequenceComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPairedSequenceComponentUpdater", "CPairedSequenceComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPairedSequenceComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPairedSequenceComponentUpdater", "CPairedSequenceComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPairedSequenceComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPairedSequenceUpdateNode : CSequenceUpdateNodeBase
        {
            public CPairedSequenceUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPairedSequenceUpdateNode", "CPairedSequenceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPairedSequenceUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPairedSequenceUpdateNode", "CPairedSequenceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPairedSequenceUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSequenceUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CSequenceUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParamSpanUpdater : ClassData
        {
            public CParamSpanUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParamSpanUpdater", "CParamSpanUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParamSpanUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParamSpanUpdater", "CParamSpanUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParamSpanUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CParentConstraint : CBaseConstraint
        {
            public CParentConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParentConstraint", "CParentConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParentConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParentConstraint", "CParentConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParentConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleAnimTag : CAnimTagBase
        {
            public CParticleAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleAnimTag", "CParticleAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleAnimTag", "CParticleAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ParticleSystemName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParticleSystemName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleSystemName", CallKind.ClassMember, m_classData, value); }
            }
            public string ConfigName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ConfigName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConfigName", CallKind.ClassMember, m_classData, value); }
            }
            public bool DetachFromOwner
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DetachFromOwner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetachFromOwner", CallKind.ClassMember, m_classData, value); }
            }
            public bool Aggregate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Aggregate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Aggregate", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopWhenTagEnds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopWhenTagEnds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopWhenTagEnds", CallKind.ClassMember, m_classData, value); }
            }
            public bool TagEndStopIsInstant
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TagEndStopIsInstant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagEndStopIsInstant", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachmentType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachmentType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentType", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleCollectionFloatInput : CParticleFloatInput
        {
            public CParticleCollectionFloatInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionFloatInput", "CParticleCollectionFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionFloatInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionFloatInput", "CParticleCollectionFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionFloatInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFloatInput Parent
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleCollectionRendererFloatInput : CParticleCollectionFloatInput
        {
            public CParticleCollectionRendererFloatInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionRendererFloatInput", "CParticleCollectionRendererFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionRendererFloatInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionRendererFloatInput", "CParticleCollectionRendererFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionRendererFloatInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleCollectionFloatInput Parent
            {
                get { return Invoker.CallNative<CParticleCollectionFloatInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleCollectionRendererVecInput : ClassData
        {
            public CParticleCollectionRendererVecInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionRendererVecInput", "CParticleCollectionRendererVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionRendererVecInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleCollectionRendererVecInput", "CParticleCollectionRendererVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleCollectionRendererVecInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CParticleFloatInput : CParticleInput
        {
            public CParticleFloatInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFloatInput", "CParticleFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFloatInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFloatInput", "CParticleFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFloatInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public uint MapType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MapType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapType", CallKind.ClassMember, m_classData, value); }
            }
            public float LiteralValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "LiteralValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LiteralValue", CallKind.ClassMember, m_classData, value); }
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleAttributeIndex_t ScalarAttribute
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "ScalarAttribute", CallKind.ClassMember, m_classData); }
            }
            public ParticleAttributeIndex_t VectorAttribute
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "VectorAttribute", CallKind.ClassMember, m_classData); }
            }
            public int VectorComponent
            {
                get { return Invoker.CallNative<int>("SDKClass", "VectorComponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VectorComponent", CallKind.ClassMember, m_classData, value); }
            }
            public float RandomMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "RandomMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomMin", CallKind.ClassMember, m_classData, value); }
            }
            public float RandomMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "RandomMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasRandomSignFlip
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasRandomSignFlip", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasRandomSignFlip", CallKind.ClassMember, m_classData, value); }
            }
            public int RandomSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "RandomSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomSeed", CallKind.ClassMember, m_classData, value); }
            }
            public uint RandomMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RandomMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomMode", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleAttributeIndex_t NoiseInputVectorAttribute
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "NoiseInputVectorAttribute", CallKind.ClassMember, m_classData); }
            }
            public float NoiseOutputMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseOutputMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseOutputMin", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseOutputMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseOutputMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseOutputMax", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseScale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D NoiseOffsetRate
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "NoiseOffsetRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseOffsetRate", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseOffset", CallKind.ClassMember, m_classData, value); }
            }
            public int NoiseOctaves
            {
                get { return Invoker.CallNative<int>("SDKClass", "NoiseOctaves", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseOctaves", CallKind.ClassMember, m_classData, value); }
            }
            public uint NoiseTurbulence
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NoiseTurbulence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseTurbulence", CallKind.ClassMember, m_classData, value); }
            }
            public uint NoiseType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NoiseType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseType", CallKind.ClassMember, m_classData, value); }
            }
            public uint NoiseModifier
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NoiseModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseModifier", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseTurbulenceScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseTurbulenceScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseTurbulenceScale", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseTurbulenceMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseTurbulenceMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseTurbulenceMix", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseImgPreviewScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseImgPreviewScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseImgPreviewScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoiseImgPreviewLive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoiseImgPreviewLive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseImgPreviewLive", CallKind.ClassMember, m_classData, value); }
            }
            public float NoCameraFallback
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoCameraFallback", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoCameraFallback", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseBoundsCenter
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseBoundsCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseBoundsCenter", CallKind.ClassMember, m_classData, value); }
            }
            public uint InputMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "InputMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputMode", CallKind.ClassMember, m_classData, value); }
            }
            public float MultFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "MultFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MultFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float NotchedRangeMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotchedRangeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotchedRangeMin", CallKind.ClassMember, m_classData, value); }
            }
            public float NotchedRangeMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotchedRangeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotchedRangeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float NotchedOutputOutside
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotchedOutputOutside", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotchedOutputOutside", CallKind.ClassMember, m_classData, value); }
            }
            public float NotchedOutputInside
            {
                get { return Invoker.CallNative<float>("SDKClass", "NotchedOutputInside", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotchedOutputInside", CallKind.ClassMember, m_classData, value); }
            }
            public uint RoundType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RoundType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundType", CallKind.ClassMember, m_classData, value); }
            }
            public uint BiasType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BiasType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BiasType", CallKind.ClassMember, m_classData, value); }
            }
            public float BiasParameter
            {
                get { return Invoker.CallNative<float>("SDKClass", "BiasParameter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BiasParameter", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleInput Parent
            {
                get { return Invoker.CallNative<CParticleInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunction : ClassData
        {
            public CParticleFunction(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunction", "CParticleFunction", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunction(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunction", "CParticleFunction", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunction()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleCollectionFloatInput OpStrength
            {
                get { return Invoker.CallNative<CParticleCollectionFloatInput>("SDKClass", "OpStrength", CallKind.ClassMember, m_classData); }
            }
            public uint OpEndCapState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OpEndCapState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpEndCapState", CallKind.ClassMember, m_classData, value); }
            }
            public float OpStartFadeInTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpStartFadeInTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpStartFadeInTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OpEndFadeInTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpEndFadeInTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpEndFadeInTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OpStartFadeOutTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpStartFadeOutTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpStartFadeOutTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OpEndFadeOutTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpEndFadeOutTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpEndFadeOutTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OpFadeOscillatePeriod
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpFadeOscillatePeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpFadeOscillatePeriod", CallKind.ClassMember, m_classData, value); }
            }
            public bool NormalizeToStopTime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NormalizeToStopTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NormalizeToStopTime", CallKind.ClassMember, m_classData, value); }
            }
            public float OpTimeOffsetMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpTimeOffsetMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeOffsetMin", CallKind.ClassMember, m_classData, value); }
            }
            public float OpTimeOffsetMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpTimeOffsetMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeOffsetMax", CallKind.ClassMember, m_classData, value); }
            }
            public int OpTimeOffsetSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "OpTimeOffsetSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeOffsetSeed", CallKind.ClassMember, m_classData, value); }
            }
            public int OpTimeScaleSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "OpTimeScaleSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeScaleSeed", CallKind.ClassMember, m_classData, value); }
            }
            public float OpTimeScaleMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpTimeScaleMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeScaleMin", CallKind.ClassMember, m_classData, value); }
            }
            public float OpTimeScaleMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpTimeScaleMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpTimeScaleMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableOperator
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableOperator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableOperator", CallKind.ClassMember, m_classData, value); }
            }
            public string Notes
            {
                get { return Invoker.CallNative<string>("SDKClass", "Notes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Notes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CParticleFunctionConstraint : CParticleFunction
        {
            public CParticleFunctionConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionConstraint", "CParticleFunctionConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionConstraint", "CParticleFunctionConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionEmitter : CParticleFunction
        {
            public CParticleFunctionEmitter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionEmitter", "CParticleFunctionEmitter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionEmitter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionEmitter", "CParticleFunctionEmitter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionEmitter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EmitterIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "EmitterIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EmitterIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionForce : CParticleFunction
        {
            public CParticleFunctionForce(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionForce", "CParticleFunctionForce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionForce(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionForce", "CParticleFunctionForce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionForce()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionInitializer : CParticleFunction
        {
            public CParticleFunctionInitializer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionInitializer", "CParticleFunctionInitializer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionInitializer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionInitializer", "CParticleFunctionInitializer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionInitializer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int AssociatedEmitterIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "AssociatedEmitterIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AssociatedEmitterIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionOperator : CParticleFunction
        {
            public CParticleFunctionOperator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionOperator", "CParticleFunctionOperator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionOperator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionOperator", "CParticleFunctionOperator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionOperator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionPreEmission : CParticleFunctionOperator
        {
            public CParticleFunctionPreEmission(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionPreEmission", "CParticleFunctionPreEmission", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionPreEmission(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionPreEmission", "CParticleFunctionPreEmission", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionPreEmission()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool RunOnce
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RunOnce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RunOnce", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunctionOperator Parent
            {
                get { return Invoker.CallNative<CParticleFunctionOperator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleFunctionRenderer : CParticleFunction
        {
            public CParticleFunctionRenderer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionRenderer", "CParticleFunctionRenderer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionRenderer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleFunctionRenderer", "CParticleFunctionRenderer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleFunctionRenderer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleVisibilityInputs VisibilityInputs
            {
                get { return Invoker.CallNative<CParticleVisibilityInputs>("SDKClass", "VisibilityInputs", CallKind.ClassMember, m_classData); }
            }
            public bool CannotBeRefracted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CannotBeRefracted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CannotBeRefracted", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkipRenderingOnMobile
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkipRenderingOnMobile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkipRenderingOnMobile", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFunction Parent
            {
                get { return Invoker.CallNative<CParticleFunction>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleInput : ClassData
        {
            public CParticleInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleInput", "CParticleInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleInput", "CParticleInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CParticleMassCalculationParameters : ClassData
        {
            public CParticleMassCalculationParameters(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleMassCalculationParameters", "CParticleMassCalculationParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleMassCalculationParameters(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleMassCalculationParameters", "CParticleMassCalculationParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleMassCalculationParameters()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint MassMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MassMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassMode", CallKind.ClassMember, m_classData, value); }
            }
            public CPerParticleFloatInput Radius
            {
                get { return Invoker.CallNative<CPerParticleFloatInput>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
            }
            public CPerParticleFloatInput NominalRadius
            {
                get { return Invoker.CallNative<CPerParticleFloatInput>("SDKClass", "NominalRadius", CallKind.ClassMember, m_classData); }
            }
            public CPerParticleFloatInput Scale
            {
                get { return Invoker.CallNative<CPerParticleFloatInput>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleModelInput : CParticleInput
        {
            public CParticleModelInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleModelInput", "CParticleModelInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleModelInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleModelInput", "CParticleModelInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleModelInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleInput Parent
            {
                get { return Invoker.CallNative<CParticleInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleProperty : ClassData
        {
            public CParticleProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleProperty", "CParticleProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleProperty", "CParticleProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CParticleRemapFloatInput : CParticleFloatInput
        {
            public CParticleRemapFloatInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleRemapFloatInput", "CParticleRemapFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleRemapFloatInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleRemapFloatInput", "CParticleRemapFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleRemapFloatInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFloatInput Parent
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleSystem : CBaseModelEntity
        {
            public CParticleSystem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleSystem", "CParticleSystem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleSystem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleSystem", "CParticleSystem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleSystem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SnapshotFileName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SnapshotFileName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SnapshotFileName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool Frozen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Frozen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frozen", CallKind.ClassMember, m_classData, value); }
            }
            public float FreezeTransitionDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreezeTransitionDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreezeTransitionDuration", CallKind.ClassMember, m_classData, value); }
            }
            public int StopType
            {
                get { return Invoker.CallNative<int>("SDKClass", "StopType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopType", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimateDuringGameplayPause
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimateDuringGameplayPause", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimateDuringGameplayPause", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float PreSimTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreSimTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreSimTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] ServerControlPoints
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "ServerControlPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ServerControlPoints", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] ServerControlPointAssignments
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "ServerControlPointAssignments", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ServerControlPointAssignments", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoSave
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoSave", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoSave", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoFreeze
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoFreeze", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoFreeze", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoRamp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoRamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoRamp", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartActive", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectName", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] ControlPointNames
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ControlPointNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPointNames", CallKind.ClassMember, m_classData, value); }
            }
            public int DataCP
            {
                get { return Invoker.CallNative<int>("SDKClass", "DataCP", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DataCP", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DataCPValue
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DataCPValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DataCPValue", CallKind.ClassMember, m_classData, value); }
            }
            public int TintCP
            {
                get { return Invoker.CallNative<int>("SDKClass", "TintCP", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintCP", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Tint
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Tint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tint", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleSystemDefinition : ClassData
        {
            public CParticleSystemDefinition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleSystemDefinition", "CParticleSystemDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleSystemDefinition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleSystemDefinition", "CParticleSystemDefinition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleSystemDefinition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BehaviorVersion
            {
                get { return Invoker.CallNative<int>("SDKClass", "BehaviorVersion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BehaviorVersion", CallKind.ClassMember, m_classData, value); }
            }
            public int FirstMultipleOverride_BackwardCompat
            {
                get { return Invoker.CallNative<int>("SDKClass", "FirstMultipleOverride_BackwardCompat", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstMultipleOverride_BackwardCompat", CallKind.ClassMember, m_classData, value); }
            }
            public int InitialParticles
            {
                get { return Invoker.CallNative<int>("SDKClass", "InitialParticles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialParticles", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxParticles
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxParticles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxParticles", CallKind.ClassMember, m_classData, value); }
            }
            public int GroupID
            {
                get { return Invoker.CallNative<int>("SDKClass", "GroupID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupID", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoundingBoxMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoundingBoxMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundingBoxMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoundingBoxMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoundingBoxMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundingBoxMax", CallKind.ClassMember, m_classData, value); }
            }
            public float DepthSortBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "DepthSortBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepthSortBias", CallKind.ClassMember, m_classData, value); }
            }
            public int SortOverridePositionCP
            {
                get { return Invoker.CallNative<int>("SDKClass", "SortOverridePositionCP", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortOverridePositionCP", CallKind.ClassMember, m_classData, value); }
            }
            public bool InfiniteBounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InfiniteBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InfiniteBounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableNamedValues
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableNamedValues", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableNamedValues", CallKind.ClassMember, m_classData, value); }
            }
            public string NamedValueDomain
            {
                get { return Invoker.CallNative<string>("SDKClass", "NamedValueDomain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NamedValueDomain", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ConstantColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ConstantColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantColor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ConstantNormal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ConstantNormal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantNormal", CallKind.ClassMember, m_classData, value); }
            }
            public float ConstantRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ConstantRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float ConstantRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "ConstantRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float ConstantRotationSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "ConstantRotationSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantRotationSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float ConstantLifespan
            {
                get { return Invoker.CallNative<float>("SDKClass", "ConstantLifespan", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantLifespan", CallKind.ClassMember, m_classData, value); }
            }
            public int ConstantSequenceNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "ConstantSequenceNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstantSequenceNumber", CallKind.ClassMember, m_classData, value); }
            }
            public int SnapshotControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "SnapshotControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SnapshotControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public float CullRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "CullRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CullRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float CullFillCost
            {
                get { return Invoker.CallNative<float>("SDKClass", "CullFillCost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CullFillCost", CallKind.ClassMember, m_classData, value); }
            }
            public int CullControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "CullControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CullControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public int FallbackMaxCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "FallbackMaxCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallbackMaxCount", CallKind.ClassMember, m_classData, value); }
            }
            public float PreSimulationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreSimulationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreSimulationTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StopSimulationAfterTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StopSimulationAfterTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopSimulationAfterTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MaximumTimeStep
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaximumTimeStep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaximumTimeStep", CallKind.ClassMember, m_classData, value); }
            }
            public float MaximumSimTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaximumSimTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaximumSimTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MinimumSimTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinimumSimTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimumSimTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MinimumTimeStep
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinimumTimeStep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimumTimeStep", CallKind.ClassMember, m_classData, value); }
            }
            public int MinimumFrames
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinimumFrames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimumFrames", CallKind.ClassMember, m_classData, value); }
            }
            public int MinCPULevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinCPULevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinCPULevel", CallKind.ClassMember, m_classData, value); }
            }
            public int MinGPULevel
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinGPULevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinGPULevel", CallKind.ClassMember, m_classData, value); }
            }
            public float NoDrawTimeToGoToSleep
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoDrawTimeToGoToSleep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoDrawTimeToGoToSleep", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxDrawDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDrawDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDrawDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFadeDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFadeDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFadeDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxCreationDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxCreationDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCreationDistance", CallKind.ClassMember, m_classData, value); }
            }
            public int AggregationMinAvailableParticles
            {
                get { return Invoker.CallNative<int>("SDKClass", "AggregationMinAvailableParticles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AggregationMinAvailableParticles", CallKind.ClassMember, m_classData, value); }
            }
            public float AggregateRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "AggregateRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AggregateRadius", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldBatch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldBatch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldBatch", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldHitboxesFallbackToRenderBounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldHitboxesFallbackToRenderBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldHitboxesFallbackToRenderBounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldHitboxesFallbackToSnapshot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldHitboxesFallbackToSnapshot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldHitboxesFallbackToSnapshot", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldHitboxesFallbackToCollisionHulls
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldHitboxesFallbackToCollisionHulls", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldHitboxesFallbackToCollisionHulls", CallKind.ClassMember, m_classData, value); }
            }
            public uint ViewModelEffect
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ViewModelEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewModelEffect", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScreenSpaceEffect
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScreenSpaceEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScreenSpaceEffect", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetLayerID
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetLayerID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetLayerID", CallKind.ClassMember, m_classData, value); }
            }
            public int SkipRenderControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "SkipRenderControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkipRenderControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public int AllowRenderControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "AllowRenderControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowRenderControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldSort
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldSort", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldSort", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CParticleTransformInput : CParticleInput
        {
            public CParticleTransformInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleTransformInput", "CParticleTransformInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleTransformInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleTransformInput", "CParticleTransformInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleTransformInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public bool FollowNamedValue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FollowNamedValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowNamedValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool SupportsDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SupportsDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SupportsDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseOrientation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseOrientation", CallKind.ClassMember, m_classData, value); }
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public int ControlPointRangeMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPointRangeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPointRangeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float EndCPGrowthTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndCPGrowthTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCPGrowthTime", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleInput Parent
            {
                get { return Invoker.CallNative<CParticleInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleVecInput : CParticleInput
        {
            public CParticleVecInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleVecInput", "CParticleVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleVecInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleVecInput", "CParticleVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleVecInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LiteralValue
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LiteralValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LiteralValue", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle LiteralColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "LiteralColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LiteralColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool FollowNamedValue
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FollowNamedValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowNamedValue", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleAttributeIndex_t VectorAttribute
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "VectorAttribute", CallKind.ClassMember, m_classData); }
            }
            public Vector2D VectorAttributeScale
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "VectorAttributeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VectorAttributeScale", CallKind.ClassMember, m_classData, value); }
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public int DeltaControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "DeltaControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DeltaControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D CPValueScale
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "CPValueScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CPValueScale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D CPRelativePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "CPRelativePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CPRelativePosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D CPRelativeDir
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "CPRelativeDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CPRelativeDir", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleFloatInput FloatComponentX
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "FloatComponentX", CallKind.ClassMember, m_classData); }
            }
            public CParticleFloatInput FloatComponentY
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "FloatComponentY", CallKind.ClassMember, m_classData); }
            }
            public CParticleFloatInput FloatComponentZ
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "FloatComponentZ", CallKind.ClassMember, m_classData); }
            }
            public CParticleFloatInput FloatInterp
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "FloatInterp", CallKind.ClassMember, m_classData); }
            }
            public Vector2D RandomMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RandomMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RandomMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RandomMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomMax", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleInput Parent
            {
                get { return Invoker.CallNative<CParticleInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CParticleVisibilityInputs : ClassData
        {
            public CParticleVisibilityInputs(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleVisibilityInputs", "CParticleVisibilityInputs", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleVisibilityInputs(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CParticleVisibilityInputs", "CParticleVisibilityInputs", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CParticleVisibilityInputs()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float CameraBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "CameraBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CameraBias", CallKind.ClassMember, m_classData, value); }
            }
            public int CPin
            {
                get { return Invoker.CallNative<int>("SDKClass", "CPin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CPin", CallKind.ClassMember, m_classData, value); }
            }
            public float ProxyRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProxyRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProxyRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float InputMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "InputMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputMin", CallKind.ClassMember, m_classData, value); }
            }
            public float InputMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "InputMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputMax", CallKind.ClassMember, m_classData, value); }
            }
            public float InputPixelVisFade
            {
                get { return Invoker.CallNative<float>("SDKClass", "InputPixelVisFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputPixelVisFade", CallKind.ClassMember, m_classData, value); }
            }
            public float NoPixelVisibilityFallback
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoPixelVisibilityFallback", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoPixelVisibilityFallback", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceInputMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceInputMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInputMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceInputMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceInputMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInputMax", CallKind.ClassMember, m_classData, value); }
            }
            public float DotInputMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DotInputMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotInputMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DotInputMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DotInputMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotInputMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool DotCPAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DotCPAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotCPAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool DotCameraAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DotCameraAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotCameraAngles", CallKind.ClassMember, m_classData, value); }
            }
            public float AlphaScaleMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlphaScaleMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlphaScaleMin", CallKind.ClassMember, m_classData, value); }
            }
            public float AlphaScaleMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "AlphaScaleMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlphaScaleMax", CallKind.ClassMember, m_classData, value); }
            }
            public float RadiusScaleMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "RadiusScaleMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusScaleMin", CallKind.ClassMember, m_classData, value); }
            }
            public float RadiusScaleMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "RadiusScaleMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusScaleMax", CallKind.ClassMember, m_classData, value); }
            }
            public float RadiusScaleFOVBase
            {
                get { return Invoker.CallNative<float>("SDKClass", "RadiusScaleFOVBase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RadiusScaleFOVBase", CallKind.ClassMember, m_classData, value); }
            }
            public bool RightEye
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RightEye", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RightEye", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPathAnimMotorUpdater : CPathAnimMotorUpdaterBase
        {
            public CPathAnimMotorUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathAnimMotorUpdater", "CPathAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathAnimMotorUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathAnimMotorUpdater", "CPathAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathAnimMotorUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathAnimMotorUpdaterBase Parent
            {
                get { return Invoker.CallNative<CPathAnimMotorUpdaterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathAnimMotorUpdaterBase : CAnimMotorUpdaterBase
        {
            public CPathAnimMotorUpdaterBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathAnimMotorUpdaterBase", "CPathAnimMotorUpdaterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathAnimMotorUpdaterBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathAnimMotorUpdaterBase", "CPathAnimMotorUpdaterBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathAnimMotorUpdaterBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool LockToPath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockToPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockToPath", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimMotorUpdaterBase Parent
            {
                get { return Invoker.CallNative<CAnimMotorUpdaterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathCorner : CPointEntity
        {
            public CPathCorner(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathCorner", "CPathCorner", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathCorner(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathCorner", "CPathCorner", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathCorner()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Wait
            {
                get { return Invoker.CallNative<float>("SDKClass", "Wait", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Wait", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPass
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPass", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathCornerCrash : CPathCorner
        {
            public CPathCornerCrash(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathCornerCrash", "CPathCornerCrash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathCornerCrash(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathCornerCrash", "CPathCornerCrash", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathCornerCrash()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathCorner Parent
            {
                get { return Invoker.CallNative<CPathCorner>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathHelperUpdateNode : CUnaryUpdateNode
        {
            public CPathHelperUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathHelperUpdateNode", "CPathHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathHelperUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathHelperUpdateNode", "CPathHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathHelperUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StoppingRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "StoppingRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StoppingRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float StoppingSpeedScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StoppingSpeedScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StoppingSpeedScale", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathKeyFrame : CLogicalEntity
        {
            public CPathKeyFrame(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathKeyFrame", "CPathKeyFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathKeyFrame(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathKeyFrame", "CPathKeyFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathKeyFrame()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Origin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Origin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angles", CallKind.ClassMember, m_classData, value); }
            }
            public string NextKey
            {
                get { return Invoker.CallNative<string>("SDKClass", "NextKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextKey", CallKind.ClassMember, m_classData, value); }
            }
            public float NextTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextTime", CallKind.ClassMember, m_classData, value); }
            }
            public int[] PrevKey
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PrevKey", CallKind.ClassMember, m_classData); }
            }
            public float MoveSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathMetricEvaluator : CMotionMetricEvaluator
        {
            public CPathMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathMetricEvaluator", "CPathMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathMetricEvaluator", "CPathMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] PathTimeSamples
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PathTimeSamples", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathTimeSamples", CallKind.ClassMember, m_classData, value); }
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExtrapolateMovement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExtrapolateMovement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtrapolateMovement", CallKind.ClassMember, m_classData, value); }
            }
            public float MinExtrapolationSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinExtrapolationSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinExtrapolationSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathMover : CPathSimple
        {
            public CPathMover(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathMover", "CPathMover", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathMover(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathMover", "CPathMover", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathMover()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathSimple Parent
            {
                get { return Invoker.CallNative<CPathSimple>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathParameters : ClassData
        {
            public CPathParameters(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParameters", "CPathParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParameters(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParameters", "CPathParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParameters()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int StartControlPointNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartControlPointNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartControlPointNumber", CallKind.ClassMember, m_classData, value); }
            }
            public int EndControlPointNumber
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndControlPointNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndControlPointNumber", CallKind.ClassMember, m_classData, value); }
            }
            public int BulgeControl
            {
                get { return Invoker.CallNative<int>("SDKClass", "BulgeControl", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BulgeControl", CallKind.ClassMember, m_classData, value); }
            }
            public float Bulge
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bulge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bulge", CallKind.ClassMember, m_classData, value); }
            }
            public float MidPoint
            {
                get { return Invoker.CallNative<float>("SDKClass", "MidPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MidPoint", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StartPointOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StartPointOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPointOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MidPointOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MidPointOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MidPointOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EndOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EndOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndOffset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPathParticleRope : CBaseEntity
        {
            public CPathParticleRope(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParticleRope", "CPathParticleRope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParticleRope(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParticleRope", "CPathParticleRope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParticleRope()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool StartActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartActive", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSimulationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSimulationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSimulationTime", CallKind.ClassMember, m_classData, value); }
            }
            public string EffectName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EffectName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectName", CallKind.ClassMember, m_classData, value); }
            }
            public string[] PathNodes_Name
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "PathNodes_Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_Name", CallKind.ClassMember, m_classData, value); }
            }
            public float ParticleSpacing
            {
                get { return Invoker.CallNative<float>("SDKClass", "ParticleSpacing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleSpacing", CallKind.ClassMember, m_classData, value); }
            }
            public float Slack
            {
                get { return Invoker.CallNative<float>("SDKClass", "Slack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slack", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorTint
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorTint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTint", CallKind.ClassMember, m_classData, value); }
            }
            public int EffectState
            {
                get { return Invoker.CallNative<int>("SDKClass", "EffectState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectState", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] PathNodes_Position
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PathNodes_Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_Position", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] PathNodes_TangentIn
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PathNodes_TangentIn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_TangentIn", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] PathNodes_TangentOut
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PathNodes_TangentOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_TangentOut", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] PathNodes_Color
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PathNodes_Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_Color", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D[] PathNodes_PinEnabled
            {
                get { return Invoker.CallNative<Vector4D[]>("SDKClass", "PathNodes_PinEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_PinEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float[] PathNodes_RadiusScale
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PathNodes_RadiusScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathNodes_RadiusScale", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathParticleRopeAlias_path_particle_rope_clientside : CPathParticleRope
        {
            public CPathParticleRopeAlias_path_particle_rope_clientside(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParticleRopeAlias_path_particle_rope_clientside", "CPathParticleRopeAlias_path_particle_rope_clientside", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParticleRopeAlias_path_particle_rope_clientside(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathParticleRopeAlias_path_particle_rope_clientside", "CPathParticleRopeAlias_path_particle_rope_clientside", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathParticleRopeAlias_path_particle_rope_clientside()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathParticleRope Parent
            {
                get { return Invoker.CallNative<CPathParticleRope>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathQueryComponent : CEntityComponent
        {
            public CPathQueryComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathQueryComponent", "CPathQueryComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathQueryComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathQueryComponent", "CPathQueryComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathQueryComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathQueryUtil : ClassData
        {
            public CPathQueryUtil(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathQueryUtil", "CPathQueryUtil", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathQueryUtil(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathQueryUtil", "CPathQueryUtil", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathQueryUtil()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public QAngle[] PathSamplePositions
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "PathSamplePositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathSamplePositions", CallKind.ClassMember, m_classData, value); }
            }
            public float[] PathSampleParameters
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PathSampleParameters", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathSampleParameters", CallKind.ClassMember, m_classData, value); }
            }
            public float[] PathSampleDistances
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "PathSampleDistances", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathSampleDistances", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsClosedLoop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsClosedLoop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsClosedLoop", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPathSimple : CBaseEntity
        {
            public CPathSimple(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathSimple", "CPathSimple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathSimple(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathSimple", "CPathSimple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathSimple()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPathQueryComponent CPathQueryComponent
            {
                get { return Invoker.CallNative<CPathQueryComponent>("SDKClass", "CPathQueryComponent", CallKind.ClassMember, m_classData); }
            }
            public string PathString
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathString", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClosedLoop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClosedLoop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClosedLoop", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPathSimpleAPI : ClassData
        {
            public CPathSimpleAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathSimpleAPI", "CPathSimpleAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathSimpleAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathSimpleAPI", "CPathSimpleAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathSimpleAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPathTrack : CPointEntity
        {
            public CPathTrack(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathTrack", "CPathTrack", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathTrack(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPathTrack", "CPathTrack", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPathTrack()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Pnext
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Pnext", CallKind.ClassMember, m_classData); }
            }
            public int[] Pprevious
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Pprevious", CallKind.ClassMember, m_classData); }
            }
            public int[] Paltpath
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Paltpath", CallKind.ClassMember, m_classData); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Length
            {
                get { return Invoker.CallNative<float>("SDKClass", "Length", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Length", CallKind.ClassMember, m_classData, value); }
            }
            public string AltName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AltName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AltName", CallKind.ClassMember, m_classData, value); }
            }
            public int IterVal
            {
                get { return Invoker.CallNative<int>("SDKClass", "IterVal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IterVal", CallKind.ClassMember, m_classData, value); }
            }
            public uint OrientationType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OrientationType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrientationType", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPass
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPass", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPerParticleFloatInput : CParticleFloatInput
        {
            public CPerParticleFloatInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPerParticleFloatInput", "CPerParticleFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPerParticleFloatInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPerParticleFloatInput", "CPerParticleFloatInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPerParticleFloatInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFloatInput Parent
            {
                get { return Invoker.CallNative<CParticleFloatInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPerParticleVecInput : CParticleVecInput
        {
            public CPerParticleVecInput(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPerParticleVecInput", "CPerParticleVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPerParticleVecInput(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPerParticleVecInput", "CPerParticleVecInput", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPerParticleVecInput()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleVecInput Parent
            {
                get { return Invoker.CallNative<CParticleVecInput>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysBallSocket : CPhysConstraint
        {
            public CPhysBallSocket(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysBallSocket", "CPhysBallSocket", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysBallSocket(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysBallSocket", "CPhysBallSocket", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysBallSocket()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float JointFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "JointFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JointFriction", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSwingLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSwingLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSwingLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float SwingLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwingLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwingLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableTwistLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableTwistLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableTwistLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinTwistAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinTwistAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinTwistAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTwistAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTwistAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTwistAngle", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysBox : CBreakable
        {
            public CPhysBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysBox", "CPhysBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysBox", "CPhysBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DamageType
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageType", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageToEnableMotion
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageToEnableMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageToEnableMotion", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceToEnableMotion
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceToEnableMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceToEnableMotion", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HoverPosePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HoverPosePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoverPosePosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector HoverPoseAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "HoverPoseAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoverPoseAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool NotSolidToWorld
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NotSolidToWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotSolidToWorld", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableUseOutput
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableUseOutput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableUseOutput", CallKind.ClassMember, m_classData, value); }
            }
            public byte HoverPoseFlags
            {
                get { return Invoker.CallNative<byte>("SDKClass", "HoverPoseFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoverPoseFlags", CallKind.ClassMember, m_classData, value); }
            }
            public float TouchOutputPerEntityDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "TouchOutputPerEntityDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TouchOutputPerEntityDelay", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnDamaged
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDamaged", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAwakened
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAwakened", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMotionEnabled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMotionEnabled", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerUse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartTouch", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerPawn CarryingPlayer
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "CarryingPlayer", CallKind.ClassMember, m_classData); }
            }
            public CBreakable Parent
            {
                get { return Invoker.CallNative<CBreakable>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysConstraint : CLogicalEntity
        {
            public CPhysConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysConstraint", "CPhysConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysConstraint", "CPhysConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BreakSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "BreakSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakSound", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float TorqueLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinTeleportDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinTeleportDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinTeleportDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool SnapObjectPositions
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SnapObjectPositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SnapObjectPositions", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBreak
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBreak", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysExplosion : CPointEntity
        {
            public CPhysExplosion(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysExplosion", "CPhysExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysExplosion(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysExplosion", "CPhysExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysExplosion()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ExplodeOnSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExplodeOnSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeOnSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public float Magnitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public float InnerRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float PushScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "PushScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConvertToDebrisWhenPossible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConvertToDebrisWhenPossible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConvertToDebrisWhenPossible", CallKind.ClassMember, m_classData, value); }
            }
            public bool AffectInvulnerableEnts
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AffectInvulnerableEnts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AffectInvulnerableEnts", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnPushedPlayer
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPushedPlayer", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysFixed : CPhysConstraint
        {
            public CPhysFixed(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysFixed", "CPhysFixed", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysFixed(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysFixed", "CPhysFixed", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysFixed()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float LinearFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableLinearConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLinearConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLinearConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableAngularConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysForce : CPointEntity
        {
            public CPhysForce(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysForce", "CPhysForce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysForce(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysForce", "CPhysForce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysForce()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string NameAttach
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAttach", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAttach", CallKind.ClassMember, m_classData, value); }
            }
            public float Force
            {
                get { return Invoker.CallNative<float>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity AttachedObject
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "AttachedObject", CallKind.ClassMember, m_classData); }
            }
            public bool WasRestored
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WasRestored", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WasRestored", CallKind.ClassMember, m_classData, value); }
            }
            public CConstantForceController Integrator
            {
                get { return Invoker.CallNative<CConstantForceController>("SDKClass", "Integrator", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysHinge : CPhysConstraint
        {
            public CPhysHinge(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysHinge", "CPhysHinge", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysHinge(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysHinge", "CPhysHinge", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysHinge()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ConstraintSoundInfo SoundInfo
            {
                get { return Invoker.CallNative<ConstraintSoundInfo>("SDKClass", "SoundInfo", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput NotifyMinLimitReached
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "NotifyMinLimitReached", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput NotifyMaxLimitReached
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "NotifyMaxLimitReached", CallKind.ClassMember, m_classData); }
            }
            public bool AtMinLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AtMinLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AtMinLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool AtMaxLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AtMaxLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AtMaxLimit", CallKind.ClassMember, m_classData, value); }
            }
            public constraint_hingeparams_t Hinge
            {
                get { return Invoker.CallNative<constraint_hingeparams_t>("SDKClass", "Hinge", CallKind.ClassMember, m_classData); }
            }
            public float HingeFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "HingeFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HingeFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float SystemLoadScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "SystemLoadScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SystemLoadScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAxisLocal
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAxisLocal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAxisLocal", CallKind.ClassMember, m_classData, value); }
            }
            public float MinRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float InitialRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitialRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleSpeedThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleSpeedThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleSpeedThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnStartMoving
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartMoving", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStopMoving
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStopMoving", CallKind.ClassMember, m_classData); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysHingeAlias_phys_hinge_local : CPhysHinge
        {
            public CPhysHingeAlias_phys_hinge_local(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysHingeAlias_phys_hinge_local", "CPhysHingeAlias_phys_hinge_local", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysHingeAlias_phys_hinge_local(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysHingeAlias_phys_hinge_local", "CPhysHingeAlias_phys_hinge_local", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysHingeAlias_phys_hinge_local()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPhysHinge Parent
            {
                get { return Invoker.CallNative<CPhysHinge>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicalButton : CBaseButton
        {
            public CPhysicalButton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicalButton", "CPhysicalButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicalButton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicalButton", "CPhysicalButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicalButton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseButton Parent
            {
                get { return Invoker.CallNative<CBaseButton>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsBodyGameMarkup : ClassData
        {
            public CPhysicsBodyGameMarkup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsBodyGameMarkup", "CPhysicsBodyGameMarkup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsBodyGameMarkup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsBodyGameMarkup", "CPhysicsBodyGameMarkup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsBodyGameMarkup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetBody
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetBody", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBody", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysicsBodyGameMarkupData : ClassData
        {
            public CPhysicsBodyGameMarkupData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsBodyGameMarkupData", "CPhysicsBodyGameMarkupData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsBodyGameMarkupData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsBodyGameMarkupData", "CPhysicsBodyGameMarkupData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsBodyGameMarkupData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPhysicsEntitySolver : CLogicalEntity
        {
            public CPhysicsEntitySolver(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsEntitySolver", "CPhysicsEntitySolver", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsEntitySolver(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsEntitySolver", "CPhysicsEntitySolver", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsEntitySolver()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity MovingEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "MovingEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity PhysicsBlocker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "PhysicsBlocker", CallKind.ClassMember, m_classData); }
            }
            public float SeparationDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "SeparationDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeparationDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float CancelTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CancelTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CancelTime", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsProp : CBreakableProp
        {
            public CPhysicsProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsProp", "CPhysicsProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsProp", "CPhysicsProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput MotionEnabled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "MotionEnabled", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAwakened
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAwakened", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAwake
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAwake", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnAsleep
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnAsleep", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerUse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnOutOfWorld
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnOutOfWorld", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPlayerPickup
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPlayerPickup", CallKind.ClassMember, m_classData); }
            }
            public bool ForceNavIgnore
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNavIgnore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNavIgnore", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoNavmeshBlocker
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoNavmeshBlocker", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoNavmeshBlocker", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceNpcExclude
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNpcExclude", CallKind.ClassMember, m_classData, value); }
            }
            public float MassScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassScale", CallKind.ClassMember, m_classData, value); }
            }
            public float BuoyancyScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BuoyancyScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuoyancyScale", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageType
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageType", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageToEnableMotion
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageToEnableMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageToEnableMotion", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceToEnableMotion
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceToEnableMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceToEnableMotion", CallKind.ClassMember, m_classData, value); }
            }
            public bool ThrownByPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ThrownByPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThrownByPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool DroppedByPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DroppedByPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DroppedByPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool TouchedByPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TouchedByPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TouchedByPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstCollisionAfterLaunch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstCollisionAfterLaunch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstCollisionAfterLaunch", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasBeenAwakened
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenAwakened", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenAwakened", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsOverrideProp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOverrideProp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOverrideProp", CallKind.ClassMember, m_classData, value); }
            }
            public byte DynamicContinuousContactBehavior
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DynamicContinuousContactBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicContinuousContactBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public float NextCheckDisableMotionContactsTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextCheckDisableMotionContactsTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextCheckDisableMotionContactsTime", CallKind.ClassMember, m_classData, value); }
            }
            public int InitialGlowState
            {
                get { return Invoker.CallNative<int>("SDKClass", "InitialGlowState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialGlowState", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRange
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRange", CallKind.ClassMember, m_classData, value); }
            }
            public int GlowRangeMin
            {
                get { return Invoker.CallNative<int>("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowRangeMin", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle GlowColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "GlowColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowColor", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldAutoConvertBackFromDebris
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldAutoConvertBackFromDebris", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldAutoConvertBackFromDebris", CallKind.ClassMember, m_classData, value); }
            }
            public bool MuteImpactEffects
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MuteImpactEffects", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MuteImpactEffects", CallKind.ClassMember, m_classData, value); }
            }
            public bool AcceptDamageFromHeldObjects
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AcceptDamageFromHeldObjects", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AcceptDamageFromHeldObjects", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableUseOutput
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableUseOutput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableUseOutput", CallKind.ClassMember, m_classData, value); }
            }
            public uint CrateType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CrateType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrateType", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] StrItemClass
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "StrItemClass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrItemClass", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ItemCount
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ItemCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool RemovableForAmmoBalancing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RemovableForAmmoBalancing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemovableForAmmoBalancing", CallKind.ClassMember, m_classData, value); }
            }
            public bool Awake
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Awake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Awake", CallKind.ClassMember, m_classData, value); }
            }
            public bool AttachedToReferenceFrame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AttachedToReferenceFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachedToReferenceFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CBreakableProp Parent
            {
                get { return Invoker.CallNative<CBreakableProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsPropMultiplayer : CPhysicsProp
        {
            public CPhysicsPropMultiplayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropMultiplayer", "CPhysicsPropMultiplayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropMultiplayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropMultiplayer", "CPhysicsPropMultiplayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropMultiplayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPhysicsProp Parent
            {
                get { return Invoker.CallNative<CPhysicsProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsPropOverride : CPhysicsProp
        {
            public CPhysicsPropOverride(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropOverride", "CPhysicsPropOverride", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropOverride(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropOverride", "CPhysicsPropOverride", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropOverride()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPhysicsProp Parent
            {
                get { return Invoker.CallNative<CPhysicsProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsPropRespawnable : CPhysicsProp
        {
            public CPhysicsPropRespawnable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropRespawnable", "CPhysicsPropRespawnable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropRespawnable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsPropRespawnable", "CPhysicsPropRespawnable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsPropRespawnable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D OriginalSpawnOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalSpawnOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector OriginalSpawnAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "OriginalSpawnAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalSpawnAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OriginalMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OriginalMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginalMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public float RespawnDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "RespawnDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RespawnDuration", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysicsProp Parent
            {
                get { return Invoker.CallNative<CPhysicsProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsShake : ClassData
        {
            public CPhysicsShake(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsShake", "CPhysicsShake", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsShake(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsShake", "CPhysicsShake", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsShake()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Force
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysicsSpring : CBaseEntity
        {
            public CPhysicsSpring(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsSpring", "CPhysicsSpring", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsSpring(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsSpring", "CPhysicsSpring", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsSpring()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Frequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frequency", CallKind.ClassMember, m_classData, value); }
            }
            public float DampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "DampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float RestLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "RestLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RestLength", CallKind.ClassMember, m_classData, value); }
            }
            public string NameAttachStart
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAttachStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAttachStart", CallKind.ClassMember, m_classData, value); }
            }
            public string NameAttachEnd
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAttachEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAttachEnd", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Start
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D End
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public uint TeleportTick
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TeleportTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeleportTick", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysicsWire : CBaseEntity
        {
            public CPhysicsWire(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsWire", "CPhysicsWire", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsWire(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysicsWire", "CPhysicsWire", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysicsWire()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Density
            {
                get { return Invoker.CallNative<int>("SDKClass", "Density", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Density", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysImpact : CPointEntity
        {
            public CPhysImpact(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysImpact", "CPhysImpact", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysImpact(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysImpact", "CPhysImpact", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysImpact()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public string DirectionEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DirectionEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectionEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysLength : CPhysConstraint
        {
            public CPhysLength(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysLength", "CPhysLength", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysLength(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysLength", "CPhysLength", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysLength()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] Offset
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Attach
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Attach", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Attach", CallKind.ClassMember, m_classData, value); }
            }
            public float AddLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "AddLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AddLength", CallKind.ClassMember, m_classData, value); }
            }
            public float MinLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinLength", CallKind.ClassMember, m_classData, value); }
            }
            public float TotalLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "TotalLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalLength", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableCollision
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableCollision", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableCollision", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysMagnet : CBaseAnimGraph
        {
            public CPhysMagnet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMagnet", "CPhysMagnet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMagnet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMagnet", "CPhysMagnet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMagnet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnMagnetAttach
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMagnetAttach", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnMagnetDetach
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnMagnetDetach", CallKind.ClassMember, m_classData); }
            }
            public float MassScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float TorqueLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TorqueLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasHitSomething
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasHitSomething", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasHitSomething", CallKind.ClassMember, m_classData, value); }
            }
            public float TotalMass
            {
                get { return Invoker.CallNative<float>("SDKClass", "TotalMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalMass", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float NextSuckTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextSuckTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextSuckTime", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxObjectsAttached
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxObjectsAttached", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxObjectsAttached", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysMotor : CLogicalEntity
        {
            public CPhysMotor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMotor", "CPhysMotor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMotor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMotor", "CPhysMotor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMotor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string NameAttach
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAttach", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAttach", CallKind.ClassMember, m_classData, value); }
            }
            public string NameAnchor
            {
                get { return Invoker.CallNative<string>("SDKClass", "NameAnchor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameAnchor", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity AttachedObject
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "AttachedObject", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity AnchorObject
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "AnchorObject", CallKind.ClassMember, m_classData); }
            }
            public float SpinUp
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpinUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinUp", CallKind.ClassMember, m_classData, value); }
            }
            public float SpinDown
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpinDown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinDown", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float AdditionalAcceleration
            {
                get { return Invoker.CallNative<float>("SDKClass", "AdditionalAcceleration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AdditionalAcceleration", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularAcceleration
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularAcceleration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularAcceleration", CallKind.ClassMember, m_classData, value); }
            }
            public float TorqueScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TorqueScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TorqueScale", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float SpeedWhenSpinUpOrSpinDownStarted
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpeedWhenSpinUpOrSpinDownStarted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeedWhenSpinUpOrSpinDownStarted", CallKind.ClassMember, m_classData, value); }
            }
            public CMotorController Motor
            {
                get { return Invoker.CallNative<CMotorController>("SDKClass", "Motor", CallKind.ClassMember, m_classData); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysMotorAPI : ClassData
        {
            public CPhysMotorAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMotorAPI", "CPhysMotorAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMotorAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysMotorAPI", "CPhysMotorAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysMotorAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPhysPulley : CPhysConstraint
        {
            public CPhysPulley(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysPulley", "CPhysPulley", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysPulley(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysPulley", "CPhysPulley", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysPulley()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] Offset
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public float AddLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "AddLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AddLength", CallKind.ClassMember, m_classData, value); }
            }
            public float GearRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "GearRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GearRatio", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysSlideConstraint : CPhysConstraint
        {
            public CPhysSlideConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSlideConstraint", "CPhysSlideConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSlideConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSlideConstraint", "CPhysSlideConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSlideConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D AxisEnd
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AxisEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxisEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float SlideFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "SlideFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlideFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float SystemLoadScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "SystemLoadScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SystemLoadScale", CallKind.ClassMember, m_classData, value); }
            }
            public float InitialOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitialOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableLinearConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLinearConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLinearConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableAngularConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float MotorDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotorDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotorDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseEntityPivot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseEntityPivot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseEntityPivot", CallKind.ClassMember, m_classData, value); }
            }
            public ConstraintSoundInfo SoundInfo
            {
                get { return Invoker.CallNative<ConstraintSoundInfo>("SDKClass", "SoundInfo", CallKind.ClassMember, m_classData); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysSurfaceProperties : ClassData
        {
            public CPhysSurfaceProperties(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfaceProperties", "CPhysSurfaceProperties", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfaceProperties(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfaceProperties", "CPhysSurfaceProperties", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfaceProperties()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint BaseNameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BaseNameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseNameHash", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hidden
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hidden", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hidden", CallKind.ClassMember, m_classData, value); }
            }
            public string Description
            {
                get { return Invoker.CallNative<string>("SDKClass", "Description", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Description", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysSurfacePropertiesPhysics Physics
            {
                get { return Invoker.CallNative<CPhysSurfacePropertiesPhysics>("SDKClass", "Physics", CallKind.ClassMember, m_classData); }
            }
            public CPhysSurfacePropertiesVehicle VehicleParams
            {
                get { return Invoker.CallNative<CPhysSurfacePropertiesVehicle>("SDKClass", "VehicleParams", CallKind.ClassMember, m_classData); }
            }
            public CPhysSurfacePropertiesSoundNames AudioSounds
            {
                get { return Invoker.CallNative<CPhysSurfacePropertiesSoundNames>("SDKClass", "AudioSounds", CallKind.ClassMember, m_classData); }
            }
            public CPhysSurfacePropertiesAudio AudioParams
            {
                get { return Invoker.CallNative<CPhysSurfacePropertiesAudio>("SDKClass", "AudioParams", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysSurfacePropertiesAudio : ClassData
        {
            public CPhysSurfacePropertiesAudio(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesAudio", "CPhysSurfacePropertiesAudio", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesAudio(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesAudio", "CPhysSurfacePropertiesAudio", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesAudio()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Reflectivity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Reflectivity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Reflectivity", CallKind.ClassMember, m_classData, value); }
            }
            public float HardnessFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "HardnessFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HardnessFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float RoughnessFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "RoughnessFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoughnessFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float RoughThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "RoughThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoughThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float HardThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "HardThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HardThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float HardVelocityThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "HardVelocityThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HardVelocityThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float StaticImpactVolume
            {
                get { return Invoker.CallNative<float>("SDKClass", "StaticImpactVolume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StaticImpactVolume", CallKind.ClassMember, m_classData, value); }
            }
            public float OcclusionFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "OcclusionFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OcclusionFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysSurfacePropertiesPhysics : ClassData
        {
            public CPhysSurfacePropertiesPhysics(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesPhysics", "CPhysSurfacePropertiesPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesPhysics(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesPhysics", "CPhysSurfacePropertiesPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesPhysics()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Friction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Friction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Friction", CallKind.ClassMember, m_classData, value); }
            }
            public float Elasticity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Elasticity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Elasticity", CallKind.ClassMember, m_classData, value); }
            }
            public float Density
            {
                get { return Invoker.CallNative<float>("SDKClass", "Density", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Density", CallKind.ClassMember, m_classData, value); }
            }
            public float Thickness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Thickness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Thickness", CallKind.ClassMember, m_classData, value); }
            }
            public float SoftContactFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "SoftContactFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoftContactFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float SoftContactDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "SoftContactDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoftContactDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysSurfacePropertiesSoundNames : ClassData
        {
            public CPhysSurfacePropertiesSoundNames(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesSoundNames", "CPhysSurfacePropertiesSoundNames", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesSoundNames(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesSoundNames", "CPhysSurfacePropertiesSoundNames", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesSoundNames()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ImpactSoft
            {
                get { return Invoker.CallNative<string>("SDKClass", "ImpactSoft", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImpactSoft", CallKind.ClassMember, m_classData, value); }
            }
            public string ImpactHard
            {
                get { return Invoker.CallNative<string>("SDKClass", "ImpactHard", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImpactHard", CallKind.ClassMember, m_classData, value); }
            }
            public string ScrapeSmooth
            {
                get { return Invoker.CallNative<string>("SDKClass", "ScrapeSmooth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScrapeSmooth", CallKind.ClassMember, m_classData, value); }
            }
            public string ScrapeRough
            {
                get { return Invoker.CallNative<string>("SDKClass", "ScrapeRough", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScrapeRough", CallKind.ClassMember, m_classData, value); }
            }
            public string BulletImpact
            {
                get { return Invoker.CallNative<string>("SDKClass", "BulletImpact", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BulletImpact", CallKind.ClassMember, m_classData, value); }
            }
            public string Rolling
            {
                get { return Invoker.CallNative<string>("SDKClass", "Rolling", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rolling", CallKind.ClassMember, m_classData, value); }
            }
            public string Break
            {
                get { return Invoker.CallNative<string>("SDKClass", "Break", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Break", CallKind.ClassMember, m_classData, value); }
            }
            public string Strain
            {
                get { return Invoker.CallNative<string>("SDKClass", "Strain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strain", CallKind.ClassMember, m_classData, value); }
            }
            public string MeleeImpact
            {
                get { return Invoker.CallNative<string>("SDKClass", "MeleeImpact", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeleeImpact", CallKind.ClassMember, m_classData, value); }
            }
            public string PushOff
            {
                get { return Invoker.CallNative<string>("SDKClass", "PushOff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushOff", CallKind.ClassMember, m_classData, value); }
            }
            public string SkidStop
            {
                get { return Invoker.CallNative<string>("SDKClass", "SkidStop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkidStop", CallKind.ClassMember, m_classData, value); }
            }
            public string Resonant
            {
                get { return Invoker.CallNative<string>("SDKClass", "Resonant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Resonant", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysSurfacePropertiesVehicle : ClassData
        {
            public CPhysSurfacePropertiesVehicle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesVehicle", "CPhysSurfacePropertiesVehicle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesVehicle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysSurfacePropertiesVehicle", "CPhysSurfacePropertiesVehicle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysSurfacePropertiesVehicle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float WheelDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float WheelFrictionScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "WheelFrictionScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WheelFrictionScale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPhysThruster : CPhysForce
        {
            public CPhysThruster(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysThruster", "CPhysThruster", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysThruster(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysThruster", "CPhysThruster", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysThruster()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LocalOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysForce Parent
            {
                get { return Invoker.CallNative<CPhysForce>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysTorque : CPhysForce
        {
            public CPhysTorque(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysTorque", "CPhysTorque", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysTorque(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysTorque", "CPhysTorque", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysTorque()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysForce Parent
            {
                get { return Invoker.CallNative<CPhysForce>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPhysWheelConstraint : CPhysConstraint
        {
            public CPhysWheelConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysWheelConstraint", "CPhysWheelConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysWheelConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPhysWheelConstraint", "CPhysWheelConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPhysWheelConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float SuspensionFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "SuspensionFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuspensionFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float SuspensionDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "SuspensionDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuspensionDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float SuspensionHeightOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "SuspensionHeightOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SuspensionHeightOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSuspensionLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSuspensionLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSuspensionLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinSuspensionOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinSuspensionOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinSuspensionOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSuspensionOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSuspensionOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSuspensionOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSteeringLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSteeringLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSteeringLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float MinSteeringAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinSteeringAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinSteeringAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxSteeringAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxSteeringAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSteeringAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float SteeringAxisFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "SteeringAxisFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SteeringAxisFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float SpinAxisFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpinAxisFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpinAxisFriction", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity SteeringMimicsEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "SteeringMimicsEntity", CallKind.ClassMember, m_classData); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlantedC4 : CBaseAnimGraph
        {
            public CPlantedC4(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlantedC4", "CPlantedC4", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlantedC4(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlantedC4", "CPlantedC4", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlantedC4()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool BombTicking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombTicking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombTicking", CallKind.ClassMember, m_classData, value); }
            }
            public int BombSite
            {
                get { return Invoker.CallNative<int>("SDKClass", "BombSite", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombSite", CallKind.ClassMember, m_classData, value); }
            }
            public int SourceSoundscapeHash
            {
                get { return Invoker.CallNative<int>("SDKClass", "SourceSoundscapeHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceSoundscapeHash", CallKind.ClassMember, m_classData, value); }
            }
            public CAttributeContainer AttributeManager
            {
                get { return Invoker.CallNative<CAttributeContainer>("SDKClass", "AttributeManager", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBombDefused
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombDefused", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBombBeginDefuse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombBeginDefuse", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnBombDefuseAborted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBombDefuseAborted", CallKind.ClassMember, m_classData); }
            }
            public bool CannotBeDefused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CannotBeDefused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CannotBeDefused", CallKind.ClassMember, m_classData, value); }
            }
            public EntitySpottedState_t EntitySpottedState
            {
                get { return Invoker.CallNative<EntitySpottedState_t>("SDKClass", "EntitySpottedState", CallKind.ClassMember, m_classData); }
            }
            public int SpotRules
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotRules", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotRules", CallKind.ClassMember, m_classData, value); }
            }
            public bool TrainingPlacedByPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TrainingPlacedByPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TrainingPlacedByPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasExploded
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasExploded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasExploded", CallKind.ClassMember, m_classData, value); }
            }
            public float TimerLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimerLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimerLength", CallKind.ClassMember, m_classData, value); }
            }
            public bool BeingDefused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BeingDefused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeingDefused", CallKind.ClassMember, m_classData, value); }
            }
            public float LastDefuseTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastDefuseTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastDefuseTime", CallKind.ClassMember, m_classData, value); }
            }
            public float DefuseLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefuseLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefuseLength", CallKind.ClassMember, m_classData, value); }
            }
            public float DefuseCountDown
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefuseCountDown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefuseCountDown", CallKind.ClassMember, m_classData, value); }
            }
            public bool BombDefused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BombDefused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombDefused", CallKind.ClassMember, m_classData, value); }
            }
            public CCSPlayerPawn BombDefuser
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "BombDefuser", CallKind.ClassMember, m_classData); }
            }
            public int ProgressBarTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "ProgressBarTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProgressBarTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool VoiceAlertFired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "VoiceAlertFired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoiceAlertFired", CallKind.ClassMember, m_classData, value); }
            }
            public bool[] VoiceAlertPlayed
            {
                get { return Invoker.CallNative<bool[]>("SDKClass", "VoiceAlertPlayed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoiceAlertPlayed", CallKind.ClassMember, m_classData, value); }
            }
            public float NextBotBeepTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextBotBeepTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextBotBeepTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector CatchUpToPlayerEye
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "CatchUpToPlayerEye", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CatchUpToPlayerEye", CallKind.ClassMember, m_classData, value); }
            }
            public float LastSpinDetectionTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastSpinDetectionTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastSpinDetectionTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlatTrigger : CBaseModelEntity
        {
            public CPlatTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlatTrigger", "CPlatTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlatTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlatTrigger", "CPlatTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlatTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncPlat Platform
            {
                get { return Invoker.CallNative<CFuncPlat>("SDKClass", "Platform", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_AutoaimServices : CPlayerPawnComponent
        {
            public CPlayer_AutoaimServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_AutoaimServices", "CPlayer_AutoaimServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_AutoaimServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_AutoaimServices", "CPlayer_AutoaimServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_AutoaimServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_CameraServices : CPlayerPawnComponent
        {
            public CPlayer_CameraServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_CameraServices", "CPlayer_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_CameraServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_CameraServices", "CPlayer_CameraServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_CameraServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector CsViewPunchAngle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "CsViewPunchAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CsViewPunchAngle", CallKind.ClassMember, m_classData, value); }
            }
            public int CsViewPunchAngleTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "CsViewPunchAngleTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CsViewPunchAngleTick", CallKind.ClassMember, m_classData, value); }
            }
            public float CsViewPunchAngleTickRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "CsViewPunchAngleTickRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CsViewPunchAngleTickRatio", CallKind.ClassMember, m_classData, value); }
            }
            public fogplayerparams_t PlayerFog
            {
                get { return Invoker.CallNative<fogplayerparams_t>("SDKClass", "PlayerFog", CallKind.ClassMember, m_classData); }
            }
            public CColorCorrection ColorCorrectionCtrl
            {
                get { return Invoker.CallNative<CColorCorrection>("SDKClass", "ColorCorrectionCtrl", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity ViewEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "ViewEntity", CallKind.ClassMember, m_classData); }
            }
            public CTonemapController2 TonemapController
            {
                get { return Invoker.CallNative<CTonemapController2>("SDKClass", "TonemapController", CallKind.ClassMember, m_classData); }
            }
            public audioparams_t Audio
            {
                get { return Invoker.CallNative<audioparams_t>("SDKClass", "Audio", CallKind.ClassMember, m_classData); }
            }
            public float OldPlayerZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldPlayerZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldPlayerZ", CallKind.ClassMember, m_classData, value); }
            }
            public float OldPlayerViewOffsetZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldPlayerViewOffsetZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldPlayerViewOffsetZ", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_FlashlightServices : CPlayerPawnComponent
        {
            public CPlayer_FlashlightServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_FlashlightServices", "CPlayer_FlashlightServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_FlashlightServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_FlashlightServices", "CPlayer_FlashlightServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_FlashlightServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_ItemServices : CPlayerPawnComponent
        {
            public CPlayer_ItemServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_ItemServices", "CPlayer_ItemServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_ItemServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_ItemServices", "CPlayer_ItemServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_ItemServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_MovementServices : CPlayerPawnComponent
        {
            public CPlayer_MovementServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_MovementServices", "CPlayer_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_MovementServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_MovementServices", "CPlayer_MovementServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_MovementServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Impulse
            {
                get { return Invoker.CallNative<int>("SDKClass", "Impulse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Impulse", CallKind.ClassMember, m_classData, value); }
            }
            public CInButtonState Buttons
            {
                get { return Invoker.CallNative<CInButtonState>("SDKClass", "Buttons", CallKind.ClassMember, m_classData); }
            }
            public ulong QueuedButtonDownMask
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "QueuedButtonDownMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueuedButtonDownMask", CallKind.ClassMember, m_classData, value); }
            }
            public ulong QueuedButtonChangeMask
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "QueuedButtonChangeMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QueuedButtonChangeMask", CallKind.ClassMember, m_classData, value); }
            }
            public ulong ButtonDoublePressed
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ButtonDoublePressed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ButtonDoublePressed", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] ButtonPressedCmdNumber
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ButtonPressedCmdNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ButtonPressedCmdNumber", CallKind.ClassMember, m_classData, value); }
            }
            public uint LastCommandNumberProcessed
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LastCommandNumberProcessed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastCommandNumberProcessed", CallKind.ClassMember, m_classData, value); }
            }
            public ulong ToggleButtonDownMask
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ToggleButtonDownMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToggleButtonDownMask", CallKind.ClassMember, m_classData, value); }
            }
            public float Maxspeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "Maxspeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxspeed", CallKind.ClassMember, m_classData, value); }
            }
            public float[] ForceSubtickMoveWhen
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "ForceSubtickMoveWhen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceSubtickMoveWhen", CallKind.ClassMember, m_classData, value); }
            }
            public float ForwardMove
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForwardMove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardMove", CallKind.ClassMember, m_classData, value); }
            }
            public float LeftMove
            {
                get { return Invoker.CallNative<float>("SDKClass", "LeftMove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LeftMove", CallKind.ClassMember, m_classData, value); }
            }
            public float UpMove
            {
                get { return Invoker.CallNative<float>("SDKClass", "UpMove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpMove", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastMovementImpulses
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastMovementImpulses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastMovementImpulses", CallKind.ClassMember, m_classData, value); }
            }
            public Vector LastFinishTickViewAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "LastFinishTickViewAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastFinishTickViewAngles", CallKind.ClassMember, m_classData, value); }
            }
            public Vector OldViewAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "OldViewAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldViewAngles", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_MovementServices_Humanoid : CPlayer_MovementServices
        {
            public CPlayer_MovementServices_Humanoid(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_MovementServices_Humanoid", "CPlayer_MovementServices_Humanoid", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_MovementServices_Humanoid(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_MovementServices_Humanoid", "CPlayer_MovementServices_Humanoid", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_MovementServices_Humanoid()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StepSoundTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StepSoundTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StepSoundTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FallVelocity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FallVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FallVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public bool InCrouch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InCrouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InCrouch", CallKind.ClassMember, m_classData, value); }
            }
            public uint CrouchState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CrouchState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrouchState", CallKind.ClassMember, m_classData, value); }
            }
            public float CrouchTransitionStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CrouchTransitionStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrouchTransitionStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool Ducked
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Ducked", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ducked", CallKind.ClassMember, m_classData, value); }
            }
            public bool Ducking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Ducking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ducking", CallKind.ClassMember, m_classData, value); }
            }
            public bool InDuckJump
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InDuckJump", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InDuckJump", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GroundNormal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GroundNormal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundNormal", CallKind.ClassMember, m_classData, value); }
            }
            public float SurfaceFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "SurfaceFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceFriction", CallKind.ClassMember, m_classData, value); }
            }
            public uint SurfaceProps
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SurfaceProps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceProps", CallKind.ClassMember, m_classData, value); }
            }
            public int Stepside
            {
                get { return Invoker.CallNative<int>("SDKClass", "Stepside", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Stepside", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SmoothedVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SmoothedVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothedVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayer_MovementServices Parent
            {
                get { return Invoker.CallNative<CPlayer_MovementServices>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_ObserverServices : CPlayerPawnComponent
        {
            public CPlayer_ObserverServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_ObserverServices", "CPlayer_ObserverServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_ObserverServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_ObserverServices", "CPlayer_ObserverServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_ObserverServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte ObserverMode
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ObserverMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObserverMode", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity ObserverTarget
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "ObserverTarget", CallKind.ClassMember, m_classData); }
            }
            public uint ObserverLastMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ObserverLastMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObserverLastMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForcedObserverMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForcedObserverMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForcedObserverMode", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_UseServices : CPlayerPawnComponent
        {
            public CPlayer_UseServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_UseServices", "CPlayer_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_UseServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_UseServices", "CPlayer_UseServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_UseServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_WaterServices : CPlayerPawnComponent
        {
            public CPlayer_WaterServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_WaterServices", "CPlayer_WaterServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_WaterServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_WaterServices", "CPlayer_WaterServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_WaterServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayer_WeaponServices : CPlayerPawnComponent
        {
            public CPlayer_WeaponServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_WeaponServices", "CPlayer_WeaponServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_WeaponServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayer_WeaponServices", "CPlayer_WeaponServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayer_WeaponServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBasePlayerWeapon ActiveWeapon
            {
                get { return Invoker.CallNative<CBasePlayerWeapon>("SDKClass", "ActiveWeapon", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerWeapon LastWeapon
            {
                get { return Invoker.CallNative<CBasePlayerWeapon>("SDKClass", "LastWeapon", CallKind.ClassMember, m_classData); }
            }
            public ushort[] Ammo
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Ammo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ammo", CallKind.ClassMember, m_classData, value); }
            }
            public bool PreventWeaponPickup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreventWeaponPickup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventWeaponPickup", CallKind.ClassMember, m_classData, value); }
            }
            public CPlayerPawnComponent Parent
            {
                get { return Invoker.CallNative<CPlayerPawnComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerControllerComponent : ClassData
        {
            public CPlayerControllerComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerControllerComponent", "CPlayerControllerComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerControllerComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerControllerComponent", "CPlayerControllerComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerControllerComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerInputAnimMotorUpdater : CAnimMotorUpdaterBase
        {
            public CPlayerInputAnimMotorUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerInputAnimMotorUpdater", "CPlayerInputAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerInputAnimMotorUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerInputAnimMotorUpdater", "CPlayerInputAnimMotorUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerInputAnimMotorUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] SampleTimes
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "SampleTimes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SampleTimes", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringConstant
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData, value); }
            }
            public float AnticipationDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnticipationDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnticipationDistance", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle AnticipationPosParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "AnticipationPosParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle AnticipationHeadingParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "AnticipationHeadingParam", CallKind.ClassMember, m_classData); }
            }
            public bool UseAcceleration
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAcceleration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAcceleration", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimMotorUpdaterBase Parent
            {
                get { return Invoker.CallNative<CAnimMotorUpdaterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerPawnComponent : ClassData
        {
            public CPlayerPawnComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerPawnComponent", "CPlayerPawnComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerPawnComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerPawnComponent", "CPlayerPawnComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerPawnComponent()
            {
            }
            public CBasePlayerPawn GetPawn()
            {
                return Internal_API.Invoker.CallNative<CBasePlayerPawn>("SDKClass", "GetPawn", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerPing : CBaseEntity
        {
            public CPlayerPing(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerPing", "CPlayerPing", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerPing(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerPing", "CPlayerPing", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerPing()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSPlayerPawn Player
            {
                get { return Invoker.CallNative<CCSPlayerPawn>("SDKClass", "Player", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity PingedEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "PingedEntity", CallKind.ClassMember, m_classData); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public bool Urgent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Urgent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Urgent", CallKind.ClassMember, m_classData, value); }
            }
            public string PlaceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PlaceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaceName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerSprayDecal : CModelPointEntity
        {
            public CPlayerSprayDecal(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerSprayDecal", "CPlayerSprayDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerSprayDecal(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerSprayDecal", "CPlayerSprayDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerSprayDecal()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int UniqueID
            {
                get { return Invoker.CallNative<int>("SDKClass", "UniqueID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UniqueID", CallKind.ClassMember, m_classData, value); }
            }
            public uint AccountID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AccountID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AccountID", CallKind.ClassMember, m_classData, value); }
            }
            public uint TraceID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TraceID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceID", CallKind.ClassMember, m_classData, value); }
            }
            public uint RtGcTime
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RtGcTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RtGcTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EndPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EndPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Start
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Left
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Left", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Left", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Normal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Normal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Normal", CallKind.ClassMember, m_classData, value); }
            }
            public int Player
            {
                get { return Invoker.CallNative<int>("SDKClass", "Player", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Player", CallKind.ClassMember, m_classData, value); }
            }
            public int Entity
            {
                get { return Invoker.CallNative<int>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity", CallKind.ClassMember, m_classData, value); }
            }
            public int Hitbox
            {
                get { return Invoker.CallNative<int>("SDKClass", "Hitbox", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hitbox", CallKind.ClassMember, m_classData, value); }
            }
            public float CreationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CreationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreationTime", CallKind.ClassMember, m_classData, value); }
            }
            public int TintID
            {
                get { return Invoker.CallNative<int>("SDKClass", "TintID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TintID", CallKind.ClassMember, m_classData, value); }
            }
            public byte Version
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Version", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Version", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] Signature
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "Signature", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Signature", CallKind.ClassMember, m_classData, value); }
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPlayerSprayDecalRenderHelper : ClassData
        {
            public CPlayerSprayDecalRenderHelper(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerSprayDecalRenderHelper", "CPlayerSprayDecalRenderHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerSprayDecalRenderHelper(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerSprayDecalRenderHelper", "CPlayerSprayDecalRenderHelper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerSprayDecalRenderHelper()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPlayerVisibility : CBaseEntity
        {
            public CPlayerVisibility(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerVisibility", "CPlayerVisibility", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerVisibility(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPlayerVisibility", "CPlayerVisibility", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPlayerVisibility()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float VisibilityStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "VisibilityStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisibilityStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float FogDistanceMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogDistanceMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogDistanceMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxDensityMultiplier
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxDensityMultiplier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxDensityMultiplier", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointAngleSensor : CPointEntity
        {
            public CPointAngleSensor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointAngleSensor", "CPointAngleSensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointAngleSensor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointAngleSensor", "CPointAngleSensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointAngleSensor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public string LookAtName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LookAtName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookAtName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity LookAtEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "LookAtEntity", CallKind.ClassMember, m_classData); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float DotTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "DotTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public float FacingTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FacingTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FacingTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool Fired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Fired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fired", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnFacingLookat
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFacingLookat", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnNotFacingLookat
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnNotFacingLookat", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointAngularVelocitySensor : CPointEntity
        {
            public CPointAngularVelocitySensor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointAngularVelocitySensor", "CPointAngularVelocitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointAngularVelocitySensor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointAngularVelocitySensor", "CPointAngularVelocitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointAngularVelocitySensor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public float Threshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "Threshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Threshold", CallKind.ClassMember, m_classData, value); }
            }
            public int LastCompareResult
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastCompareResult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastCompareResult", CallKind.ClassMember, m_classData, value); }
            }
            public int LastFireResult
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastFireResult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastFireResult", CallKind.ClassMember, m_classData, value); }
            }
            public float FireTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FireInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireInterval", CallKind.ClassMember, m_classData, value); }
            }
            public float LastAngVelocity
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastAngVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAngVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector LastOrientation
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "LastOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastOrientation", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseHelper
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseHelper", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseHelper", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnLessThan
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLessThan", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLessThanOrEqualTo
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLessThanOrEqualTo", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnGreaterThan
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnGreaterThan", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnGreaterThanOrEqualTo
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnGreaterThanOrEqualTo", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEqualTo
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEqualTo", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointBroadcastClientCommand : CPointEntity
        {
            public CPointBroadcastClientCommand(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointBroadcastClientCommand", "CPointBroadcastClientCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointBroadcastClientCommand(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointBroadcastClientCommand", "CPointBroadcastClientCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointBroadcastClientCommand()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointCamera : CBaseEntity
        {
            public CPointCamera(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointCamera", "CPointCamera", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointCamera(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointCamera", "CPointCamera", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointCamera()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "FOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FOV", CallKind.ClassMember, m_classData, value); }
            }
            public float Resolution
            {
                get { return Invoker.CallNative<float>("SDKClass", "Resolution", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Resolution", CallKind.ClassMember, m_classData, value); }
            }
            public bool FogEnable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FogEnable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogEnable", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle FogColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "FogColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogColor", CallKind.ClassMember, m_classData, value); }
            }
            public float FogStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FogEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float FogMaxDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FogMaxDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FogMaxDensity", CallKind.ClassMember, m_classData, value); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseScreenAspectRatio
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseScreenAspectRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseScreenAspectRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AspectRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "AspectRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AspectRatio", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoSky
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoSky", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoSky", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
            public float ZFar
            {
                get { return Invoker.CallNative<float>("SDKClass", "ZFar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZFar", CallKind.ClassMember, m_classData, value); }
            }
            public float ZNear
            {
                get { return Invoker.CallNative<float>("SDKClass", "ZNear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ZNear", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanHLTVUse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanHLTVUse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanHLTVUse", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlignWithParent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlignWithParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlignWithParent", CallKind.ClassMember, m_classData, value); }
            }
            public bool DofEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DofEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public float DofNearBlurry
            {
                get { return Invoker.CallNative<float>("SDKClass", "DofNearBlurry", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofNearBlurry", CallKind.ClassMember, m_classData, value); }
            }
            public float DofNearCrisp
            {
                get { return Invoker.CallNative<float>("SDKClass", "DofNearCrisp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofNearCrisp", CallKind.ClassMember, m_classData, value); }
            }
            public float DofFarCrisp
            {
                get { return Invoker.CallNative<float>("SDKClass", "DofFarCrisp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofFarCrisp", CallKind.ClassMember, m_classData, value); }
            }
            public float DofFarBlurry
            {
                get { return Invoker.CallNative<float>("SDKClass", "DofFarBlurry", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofFarBlurry", CallKind.ClassMember, m_classData, value); }
            }
            public float DofTiltToGround
            {
                get { return Invoker.CallNative<float>("SDKClass", "DofTiltToGround", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DofTiltToGround", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetFOV", CallKind.ClassMember, m_classData, value); }
            }
            public float DegreesPerSecond
            {
                get { return Invoker.CallNative<float>("SDKClass", "DegreesPerSecond", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DegreesPerSecond", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsOn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsOn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsOn", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointCameraVFOV : CPointCamera
        {
            public CPointCameraVFOV(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointCameraVFOV", "CPointCameraVFOV", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointCameraVFOV(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointCameraVFOV", "CPointCameraVFOV", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointCameraVFOV()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float VerticalFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "VerticalFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalFOV", CallKind.ClassMember, m_classData, value); }
            }
            public CPointCamera Parent
            {
                get { return Invoker.CallNative<CPointCamera>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointChildModifier : CPointEntity
        {
            public CPointChildModifier(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointChildModifier", "CPointChildModifier", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointChildModifier(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointChildModifier", "CPointChildModifier", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointChildModifier()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool OrphanInsteadOfDeletingChildrenOnRemove
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OrphanInsteadOfDeletingChildrenOnRemove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrphanInsteadOfDeletingChildrenOnRemove", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointClientCommand : CPointEntity
        {
            public CPointClientCommand(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientCommand", "CPointClientCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientCommand(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientCommand", "CPointClientCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientCommand()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointClientUIDialog : CBaseClientUIEntity
        {
            public CPointClientUIDialog(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIDialog", "CPointClientUIDialog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIDialog(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIDialog", "CPointClientUIDialog", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIDialog()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public bool StartEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseClientUIEntity Parent
            {
                get { return Invoker.CallNative<CBaseClientUIEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointClientUIWorldPanel : CBaseClientUIEntity
        {
            public CPointClientUIWorldPanel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIWorldPanel", "CPointClientUIWorldPanel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIWorldPanel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIWorldPanel", "CPointClientUIWorldPanel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIWorldPanel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IgnoreInput
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreInput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreInput", CallKind.ClassMember, m_classData, value); }
            }
            public bool Lit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Lit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lit", CallKind.ClassMember, m_classData, value); }
            }
            public bool FollowPlayerAcrossTeleport
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FollowPlayerAcrossTeleport", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FollowPlayerAcrossTeleport", CallKind.ClassMember, m_classData, value); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float DPI
            {
                get { return Invoker.CallNative<float>("SDKClass", "DPI", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DPI", CallKind.ClassMember, m_classData, value); }
            }
            public float InteractDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "InteractDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float DepthOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "DepthOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepthOffset", CallKind.ClassMember, m_classData, value); }
            }
            public uint OwnerContext
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OwnerContext", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerContext", CallKind.ClassMember, m_classData, value); }
            }
            public uint HorizontalAlign
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HorizontalAlign", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HorizontalAlign", CallKind.ClassMember, m_classData, value); }
            }
            public uint VerticalAlign
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VerticalAlign", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VerticalAlign", CallKind.ClassMember, m_classData, value); }
            }
            public uint Orientation
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Orientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Orientation", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowInteractionFromAllSceneWorlds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowInteractionFromAllSceneWorlds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowInteractionFromAllSceneWorlds", CallKind.ClassMember, m_classData, value); }
            }
            public string[] CSSClasses
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "CSSClasses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CSSClasses", CallKind.ClassMember, m_classData, value); }
            }
            public bool Opaque
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Opaque", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Opaque", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoDepth
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoDepth", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderBackface
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderBackface", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderBackface", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseOffScreenIndicator
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseOffScreenIndicator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseOffScreenIndicator", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExcludeFromSaveGames
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludeFromSaveGames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeFromSaveGames", CallKind.ClassMember, m_classData, value); }
            }
            public bool Grabbable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Grabbable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Grabbable", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyRenderToTexture
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyRenderToTexture", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyRenderToTexture", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableMipGen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableMipGen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableMipGen", CallKind.ClassMember, m_classData, value); }
            }
            public int ExplicitImageLayout
            {
                get { return Invoker.CallNative<int>("SDKClass", "ExplicitImageLayout", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplicitImageLayout", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseClientUIEntity Parent
            {
                get { return Invoker.CallNative<CBaseClientUIEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointClientUIWorldTextPanel : CPointClientUIWorldPanel
        {
            public CPointClientUIWorldTextPanel(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIWorldTextPanel", "CPointClientUIWorldTextPanel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIWorldTextPanel(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointClientUIWorldTextPanel", "CPointClientUIWorldTextPanel", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointClientUIWorldTextPanel()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MessageText
            {
                get { return Invoker.CallNative<string>("SDKClass", "MessageText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MessageText", CallKind.ClassMember, m_classData, value); }
            }
            public CPointClientUIWorldPanel Parent
            {
                get { return Invoker.CallNative<CPointClientUIWorldPanel>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointConstraint : CBaseConstraint
        {
            public CPointConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointConstraint", "CPointConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointConstraint", "CPointConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointEntity : CBaseEntity
        {
            public CPointEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointEntity", "CPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointEntity", "CPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointEntityFinder : CBaseEntity
        {
            public CPointEntityFinder(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointEntityFinder", "CPointEntityFinder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointEntityFinder(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointEntityFinder", "CPointEntityFinder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointEntityFinder()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Filter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public string RefName
            {
                get { return Invoker.CallNative<string>("SDKClass", "RefName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Reference
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Reference", CallKind.ClassMember, m_classData); }
            }
            public uint FindMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FindMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FindMethod", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnFoundEntity
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnFoundEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointGamestatsCounter : CPointEntity
        {
            public CPointGamestatsCounter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointGamestatsCounter", "CPointGamestatsCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointGamestatsCounter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointGamestatsCounter", "CPointGamestatsCounter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointGamestatsCounter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrStatisticName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrStatisticName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrStatisticName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointGiveAmmo : CPointEntity
        {
            public CPointGiveAmmo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointGiveAmmo", "CPointGiveAmmo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointGiveAmmo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointGiveAmmo", "CPointGiveAmmo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointGiveAmmo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointHurt : CPointEntity
        {
            public CPointHurt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointHurt", "CPointHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointHurt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointHurt", "CPointHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointHurt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Damage
            {
                get { return Invoker.CallNative<int>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public uint BitsDamageType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BitsDamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BitsDamageType", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public string StrTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointOrient : CBaseEntity
        {
            public CPointOrient(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointOrient", "CPointOrient", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointOrient(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointOrient", "CPointOrient", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointOrient()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SpawnTargetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpawnTargetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnTargetName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
            public bool Active
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Active", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Active", CallKind.ClassMember, m_classData, value); }
            }
            public uint GoalDirection
            {
                get { return Invoker.CallNative<uint>("SDKClass", "GoalDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalDirection", CallKind.ClassMember, m_classData, value); }
            }
            public uint Constraint
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Constraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Constraint", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTurnRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTurnRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTurnRate", CallKind.ClassMember, m_classData, value); }
            }
            public float LastGameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastGameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastGameTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointPrefab : CServerOnlyPointEntity
        {
            public CPointPrefab(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointPrefab", "CPointPrefab", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointPrefab(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointPrefab", "CPointPrefab", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointPrefab()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TargetMapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetMapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetMapName", CallKind.ClassMember, m_classData, value); }
            }
            public string ForceWorldGroupID
            {
                get { return Invoker.CallNative<string>("SDKClass", "ForceWorldGroupID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceWorldGroupID", CallKind.ClassMember, m_classData, value); }
            }
            public string AssociatedRelayTargetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AssociatedRelayTargetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AssociatedRelayTargetName", CallKind.ClassMember, m_classData, value); }
            }
            public bool FixupNames
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FixupNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FixupNames", CallKind.ClassMember, m_classData, value); }
            }
            public bool LoadDynamic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoadDynamic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoadDynamic", CallKind.ClassMember, m_classData, value); }
            }
            public CPointPrefab AssociatedRelayEntity
            {
                get { return Invoker.CallNative<CPointPrefab>("SDKClass", "AssociatedRelayEntity", CallKind.ClassMember, m_classData); }
            }
            public CServerOnlyPointEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointProximitySensor : CPointEntity
        {
            public CPointProximitySensor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointProximitySensor", "CPointProximitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointProximitySensor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointProximitySensor", "CPointProximitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointProximitySensor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointPush : CPointEntity
        {
            public CPointPush(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointPush", "CPointPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointPush(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointPush", "CPointPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointPush()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public float Magnitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float InnerRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float ConeOfInfluence
            {
                get { return Invoker.CallNative<float>("SDKClass", "ConeOfInfluence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConeOfInfluence", CallKind.ClassMember, m_classData, value); }
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Filter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointServerCommand : CPointEntity
        {
            public CPointServerCommand(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointServerCommand", "CPointServerCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointServerCommand(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointServerCommand", "CPointServerCommand", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointServerCommand()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointTeleport : CServerOnlyPointEntity
        {
            public CPointTeleport(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTeleport", "CPointTeleport", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTeleport(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTeleport", "CPointTeleport", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTeleport()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D SaveOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SaveOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaveOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector SaveAngles
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "SaveAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaveAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool TeleportParentedEntities
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TeleportParentedEntities", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeleportParentedEntities", CallKind.ClassMember, m_classData, value); }
            }
            public bool TeleportUseCurrentAngle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TeleportUseCurrentAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeleportUseCurrentAngle", CallKind.ClassMember, m_classData, value); }
            }
            public CServerOnlyPointEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointTeleportAPI : ClassData
        {
            public CPointTeleportAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTeleportAPI", "CPointTeleportAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTeleportAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTeleportAPI", "CPointTeleportAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTeleportAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPointTemplate : CLogicalEntity
        {
            public CPointTemplate(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTemplate", "CPointTemplate", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTemplate(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTemplate", "CPointTemplate", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTemplate()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string WorldName
            {
                get { return Invoker.CallNative<string>("SDKClass", "WorldName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldName", CallKind.ClassMember, m_classData, value); }
            }
            public string EntityFilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityFilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityFilterName", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeoutInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeoutInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeoutInterval", CallKind.ClassMember, m_classData, value); }
            }
            public bool AsynchronouslySpawnEntities
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AsynchronouslySpawnEntities", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AsynchronouslySpawnEntities", CallKind.ClassMember, m_classData, value); }
            }
            public uint ClientOnlyEntityBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ClientOnlyEntityBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientOnlyEntityBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public uint OwnerSpawnGroupType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OwnerSpawnGroupType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerSpawnGroupType", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] CreatedSpawnGroupHandles
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "CreatedSpawnGroupHandles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreatedSpawnGroupHandles", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointTemplateAPI : ClassData
        {
            public CPointTemplateAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTemplateAPI", "CPointTemplateAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTemplateAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointTemplateAPI", "CPointTemplateAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointTemplateAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CPointValueRemapper : CBaseEntity
        {
            public CPointValueRemapper(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointValueRemapper", "CPointValueRemapper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointValueRemapper(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointValueRemapper", "CPointValueRemapper", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointValueRemapper()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool UpdateOnClient
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UpdateOnClient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdateOnClient", CallKind.ClassMember, m_classData, value); }
            }
            public uint InputType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "InputType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputType", CallKind.ClassMember, m_classData, value); }
            }
            public string RemapLineStartName
            {
                get { return Invoker.CallNative<string>("SDKClass", "RemapLineStartName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemapLineStartName", CallKind.ClassMember, m_classData, value); }
            }
            public string RemapLineEndName
            {
                get { return Invoker.CallNative<string>("SDKClass", "RemapLineEndName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemapLineEndName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity RemapLineStart
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "RemapLineStart", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity RemapLineEnd
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "RemapLineEnd", CallKind.ClassMember, m_classData); }
            }
            public float MaximumChangePerSecond
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaximumChangePerSecond", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaximumChangePerSecond", CallKind.ClassMember, m_classData, value); }
            }
            public float DisengageDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "DisengageDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisengageDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float EngageDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "EngageDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EngageDistance", CallKind.ClassMember, m_classData, value); }
            }
            public bool RequiresUseKey
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RequiresUseKey", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RequiresUseKey", CallKind.ClassMember, m_classData, value); }
            }
            public uint OutputType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OutputType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputType", CallKind.ClassMember, m_classData, value); }
            }
            public string OutputEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OutputEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public uint HapticsType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HapticsType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HapticsType", CallKind.ClassMember, m_classData, value); }
            }
            public uint MomentumType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MomentumType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MomentumType", CallKind.ClassMember, m_classData, value); }
            }
            public float MomentumModifier
            {
                get { return Invoker.CallNative<float>("SDKClass", "MomentumModifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MomentumModifier", CallKind.ClassMember, m_classData, value); }
            }
            public float SnapValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "SnapValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SnapValue", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentMomentum
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentMomentum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentMomentum", CallKind.ClassMember, m_classData, value); }
            }
            public uint RatchetType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RatchetType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RatchetType", CallKind.ClassMember, m_classData, value); }
            }
            public float RatchetOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "RatchetOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RatchetOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float InputOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "InputOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool Engaged
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Engaged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Engaged", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public float PreviousValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreviousValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviousValue", CallKind.ClassMember, m_classData, value); }
            }
            public float PreviousUpdateTickTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreviousUpdateTickTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviousUpdateTickTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PreviousTestPoint
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PreviousTestPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviousTestPoint", CallKind.ClassMember, m_classData, value); }
            }
            public CBasePlayerPawn UsingPlayer
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "UsingPlayer", CallKind.ClassMember, m_classData); }
            }
            public float CustomOutputValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "CustomOutputValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CustomOutputValue", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundEngage
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundEngage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundEngage", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundDisengage
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundDisengage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundDisengage", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundReachedValueZero
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundReachedValueZero", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundReachedValueZero", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundReachedValueOne
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundReachedValueOne", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundReachedValueOne", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundMovingLoop
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundMovingLoop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundMovingLoop", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnReachedValueZero
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnReachedValueZero", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnReachedValueOne
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnReachedValueOne", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnReachedValueCustom
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnReachedValueCustom", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEngage
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEngage", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnDisengage
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDisengage", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointVelocitySensor : CPointEntity
        {
            public CPointVelocitySensor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointVelocitySensor", "CPointVelocitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointVelocitySensor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointVelocitySensor", "CPointVelocitySensor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointVelocitySensor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevVelocity
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public float AvgInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "AvgInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AvgInterval", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPointWorldText : CModelPointEntity
        {
            public CPointWorldText(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointWorldText", "CPointWorldText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointWorldText(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPointWorldText", "CPointWorldText", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPointWorldText()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MessageText
            {
                get { return Invoker.CallNative<string>("SDKClass", "MessageText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MessageText", CallKind.ClassMember, m_classData, value); }
            }
            public string FontName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FontName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FontName", CallKind.ClassMember, m_classData, value); }
            }
            public string BackgroundMaterialName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BackgroundMaterialName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackgroundMaterialName", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Fullbright
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Fullbright", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fullbright", CallKind.ClassMember, m_classData, value); }
            }
            public float WorldUnitsPerPx
            {
                get { return Invoker.CallNative<float>("SDKClass", "WorldUnitsPerPx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldUnitsPerPx", CallKind.ClassMember, m_classData, value); }
            }
            public float FontSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "FontSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FontSize", CallKind.ClassMember, m_classData, value); }
            }
            public float DepthOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "DepthOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DepthOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool DrawBackground
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DrawBackground", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawBackground", CallKind.ClassMember, m_classData, value); }
            }
            public float BackgroundBorderWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "BackgroundBorderWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackgroundBorderWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float BackgroundBorderHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "BackgroundBorderHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackgroundBorderHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float BackgroundWorldToUV
            {
                get { return Invoker.CallNative<float>("SDKClass", "BackgroundWorldToUV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackgroundWorldToUV", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public uint JustifyHorizontal
            {
                get { return Invoker.CallNative<uint>("SDKClass", "JustifyHorizontal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JustifyHorizontal", CallKind.ClassMember, m_classData, value); }
            }
            public uint JustifyVertical
            {
                get { return Invoker.CallNative<uint>("SDKClass", "JustifyVertical", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "JustifyVertical", CallKind.ClassMember, m_classData, value); }
            }
            public uint ReorientMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ReorientMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReorientMode", CallKind.ClassMember, m_classData, value); }
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPoseHandle : ClassData
        {
            public CPoseHandle(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPoseHandle", "CPoseHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPoseHandle(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPoseHandle", "CPoseHandle", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPoseHandle()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Index
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
            public byte Type
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPostProcessingVolume : CBaseTrigger
        {
            public CPostProcessingVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPostProcessingVolume", "CPostProcessingVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPostProcessingVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPostProcessingVolume", "CPostProcessingVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPostProcessingVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float MinLogExposure
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinLogExposure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinLogExposure", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLogExposure
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLogExposure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLogExposure", CallKind.ClassMember, m_classData, value); }
            }
            public float MinExposure
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinExposure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinExposure", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxExposure
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxExposure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxExposure", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureCompensation
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureCompensation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureCompensation", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureFadeSpeedUp
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureFadeSpeedUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureFadeSpeedUp", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureFadeSpeedDown
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureFadeSpeedDown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureFadeSpeedDown", CallKind.ClassMember, m_classData, value); }
            }
            public float TonemapEVSmoothingRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "TonemapEVSmoothingRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TonemapEVSmoothingRange", CallKind.ClassMember, m_classData, value); }
            }
            public bool Master
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Master", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExposureControl
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExposureControl", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureControl", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPrecipitation : CBaseTrigger
        {
            public CPrecipitation(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitation", "CPrecipitation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitation(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitation", "CPrecipitation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitation()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPrecipitationBlocker : CBaseModelEntity
        {
            public CPrecipitationBlocker(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitationBlocker", "CPrecipitationBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitationBlocker(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitationBlocker", "CPrecipitationBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitationBlocker()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPrecipitationVData : CEntitySubclassVDataBase
        {
            public CPrecipitationVData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitationVData", "CPrecipitationVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitationVData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPrecipitationVData", "CPrecipitationVData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPrecipitationVData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float InnerDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerDistance", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachType", CallKind.ClassMember, m_classData, value); }
            }
            public bool BatchSameVolumeType
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BatchSameVolumeType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BatchSameVolumeType", CallKind.ClassMember, m_classData, value); }
            }
            public int RTEnvCP
            {
                get { return Invoker.CallNative<int>("SDKClass", "RTEnvCP", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RTEnvCP", CallKind.ClassMember, m_classData, value); }
            }
            public int RTEnvCPComponent
            {
                get { return Invoker.CallNative<int>("SDKClass", "RTEnvCPComponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RTEnvCPComponent", CallKind.ClassMember, m_classData, value); }
            }
            public string Modifier
            {
                get { return Invoker.CallNative<string>("SDKClass", "Modifier", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Modifier", CallKind.ClassMember, m_classData, value); }
            }
            public CEntitySubclassVDataBase Parent
            {
                get { return Invoker.CallNative<CEntitySubclassVDataBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CProductQuantizer : ClassData
        {
            public CProductQuantizer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProductQuantizer", "CProductQuantizer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProductQuantizer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProductQuantizer", "CProductQuantizer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProductQuantizer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Dimensions
            {
                get { return Invoker.CallNative<int>("SDKClass", "Dimensions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dimensions", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CProjectedDecal : CPointEntity
        {
            public CProjectedDecal(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProjectedDecal", "CProjectedDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProjectedDecal(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProjectedDecal", "CProjectedDecal", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProjectedDecal()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Texture
            {
                get { return Invoker.CallNative<int>("SDKClass", "Texture", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Texture", CallKind.ClassMember, m_classData, value); }
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CProjectedTextureBase : ClassData
        {
            public CProjectedTextureBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProjectedTextureBase", "CProjectedTextureBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProjectedTextureBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CProjectedTextureBase", "CProjectedTextureBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CProjectedTextureBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public bool State
            {
                get { return Invoker.CallNative<bool>("SDKClass", "State", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "State", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlwaysUpdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public float LightFOV
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightFOV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightFOV", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableShadows
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableShadows", CallKind.ClassMember, m_classData, value); }
            }
            public bool SimpleProjection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SimpleProjection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimpleProjection", CallKind.ClassMember, m_classData, value); }
            }
            public bool LightOnlyTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LightOnlyTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightOnlyTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool LightWorld
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LightWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightWorld", CallKind.ClassMember, m_classData, value); }
            }
            public bool CameraSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CameraSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CameraSpace", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessScale", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle LightColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "LightColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightColor", CallKind.ClassMember, m_classData, value); }
            }
            public float Intensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Intensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Intensity", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearAttenuation
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearAttenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearAttenuation", CallKind.ClassMember, m_classData, value); }
            }
            public float QuadraticAttenuation
            {
                get { return Invoker.CallNative<float>("SDKClass", "QuadraticAttenuation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuadraticAttenuation", CallKind.ClassMember, m_classData, value); }
            }
            public bool Volumetric
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Volumetric", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volumetric", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumetricIntensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumetricIntensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumetricIntensity", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float FlashlightTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlashlightTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlashlightTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint NumPlanes
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NumPlanes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumPlanes", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaneOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaneOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaneOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float ColorTransitionTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ColorTransitionTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTransitionTime", CallKind.ClassMember, m_classData, value); }
            }
            public float Ambient
            {
                get { return Invoker.CallNative<float>("SDKClass", "Ambient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ambient", CallKind.ClassMember, m_classData, value); }
            }
            public string SpotlightTextureName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SpotlightTextureName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightTextureName", CallKind.ClassMember, m_classData, value); }
            }
            public int SpotlightTextureFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpotlightTextureFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightTextureFrame", CallKind.ClassMember, m_classData, value); }
            }
            public uint ShadowQuality
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ShadowQuality", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShadowQuality", CallKind.ClassMember, m_classData, value); }
            }
            public float NearZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearZ", CallKind.ClassMember, m_classData, value); }
            }
            public float FarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarZ", CallKind.ClassMember, m_classData, value); }
            }
            public float ProjectionSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProjectionSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectionSize", CallKind.ClassMember, m_classData, value); }
            }
            public float Rotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "Rotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rotation", CallKind.ClassMember, m_classData, value); }
            }
            public bool FlipHorizontal
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FlipHorizontal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlipHorizontal", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CPropDataComponent : CEntityComponent
        {
            public CPropDataComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDataComponent", "CPropDataComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDataComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDataComponent", "CPropDataComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDataComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DmgModBullet
            {
                get { return Invoker.CallNative<float>("SDKClass", "DmgModBullet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DmgModBullet", CallKind.ClassMember, m_classData, value); }
            }
            public float DmgModClub
            {
                get { return Invoker.CallNative<float>("SDKClass", "DmgModClub", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DmgModClub", CallKind.ClassMember, m_classData, value); }
            }
            public float DmgModExplosive
            {
                get { return Invoker.CallNative<float>("SDKClass", "DmgModExplosive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DmgModExplosive", CallKind.ClassMember, m_classData, value); }
            }
            public float DmgModFire
            {
                get { return Invoker.CallNative<float>("SDKClass", "DmgModFire", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DmgModFire", CallKind.ClassMember, m_classData, value); }
            }
            public string PhysicsDamageTableName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PhysicsDamageTableName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhysicsDamageTableName", CallKind.ClassMember, m_classData, value); }
            }
            public string BasePropData
            {
                get { return Invoker.CallNative<string>("SDKClass", "BasePropData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BasePropData", CallKind.ClassMember, m_classData, value); }
            }
            public int Interactions
            {
                get { return Invoker.CallNative<int>("SDKClass", "Interactions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interactions", CallKind.ClassMember, m_classData, value); }
            }
            public bool SpawnMotionDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SpawnMotionDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnMotionDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public int DisableTakePhysicsDamageSpawnFlag
            {
                get { return Invoker.CallNative<int>("SDKClass", "DisableTakePhysicsDamageSpawnFlag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableTakePhysicsDamageSpawnFlag", CallKind.ClassMember, m_classData, value); }
            }
            public int MotionDisabledSpawnFlag
            {
                get { return Invoker.CallNative<int>("SDKClass", "MotionDisabledSpawnFlag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotionDisabledSpawnFlag", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPropDoorRotating : CBasePropDoor
        {
            public CPropDoorRotating(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDoorRotating", "CPropDoorRotating", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDoorRotating(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDoorRotating", "CPropDoorRotating", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDoorRotating()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public float Distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distance", CallKind.ClassMember, m_classData, value); }
            }
            public uint SpawnPosition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SpawnPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpawnPosition", CallKind.ClassMember, m_classData, value); }
            }
            public uint OpenDirection
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OpenDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpenDirection", CallKind.ClassMember, m_classData, value); }
            }
            public uint CurrentOpenDirection
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CurrentOpenDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentOpenDirection", CallKind.ClassMember, m_classData, value); }
            }
            public float AjarAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "AjarAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AjarAngle", CallKind.ClassMember, m_classData, value); }
            }
            public Vector RotationAjarDeprecated
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "RotationAjarDeprecated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationAjarDeprecated", CallKind.ClassMember, m_classData, value); }
            }
            public Vector RotationClosed
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "RotationClosed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationClosed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector RotationOpenForward
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "RotationOpenForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationOpenForward", CallKind.ClassMember, m_classData, value); }
            }
            public Vector RotationOpenBack
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "RotationOpenBack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotationOpenBack", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Goal
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Goal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Goal", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ForwardBoundsMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ForwardBoundsMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardBoundsMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ForwardBoundsMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ForwardBoundsMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForwardBoundsMax", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BackBoundsMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BackBoundsMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackBoundsMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BackBoundsMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BackBoundsMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BackBoundsMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool AjarDoorShouldntAlwaysOpen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AjarDoorShouldntAlwaysOpen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AjarDoorShouldntAlwaysOpen", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityBlocker EntityBlocker
            {
                get { return Invoker.CallNative<CEntityBlocker>("SDKClass", "EntityBlocker", CallKind.ClassMember, m_classData); }
            }
            public CBasePropDoor Parent
            {
                get { return Invoker.CallNative<CBasePropDoor>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPropDoorRotatingBreakable : CPropDoorRotating
        {
            public CPropDoorRotatingBreakable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDoorRotatingBreakable", "CPropDoorRotatingBreakable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDoorRotatingBreakable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPropDoorRotatingBreakable", "CPropDoorRotatingBreakable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPropDoorRotatingBreakable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Breakable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Breakable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Breakable", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAbleToCloseAreaPortals
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAbleToCloseAreaPortals", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAbleToCloseAreaPortals", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentDamageState
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentDamageState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentDamageState", CallKind.ClassMember, m_classData, value); }
            }
            public string[] DamageStates
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "DamageStates", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageStates", CallKind.ClassMember, m_classData, value); }
            }
            public CPropDoorRotating Parent
            {
                get { return Invoker.CallNative<CPropDoorRotating>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CPushable : CBreakable
        {
            public CPushable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPushable", "CPushable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPushable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CPushable", "CPushable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CPushable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBreakable Parent
            {
                get { return Invoker.CallNative<CBreakable>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollAnimTag : CAnimTagBase
        {
            public CRagdollAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollAnimTag", "CRagdollAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollAnimTag", "CRagdollAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollComponentUpdater : CAnimComponentUpdater
        {
            public CRagdollComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollComponentUpdater", "CRagdollComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollComponentUpdater", "CRagdollComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] BoneIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BoneIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndices", CallKind.ClassMember, m_classData, value); }
            }
            public string[] BoneNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "BoneNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneNames", CallKind.ClassMember, m_classData, value); }
            }
            public int[] BoneToWeightIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BoneToWeightIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneToWeightIndices", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringFrequencyMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringFrequencyMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringFrequencyMin", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringFrequencyMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringFrequencyMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringFrequencyMax", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxStretch
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxStretch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxStretch", CallKind.ClassMember, m_classData, value); }
            }
            public bool SolidCollisionAtZeroWeight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SolidCollisionAtZeroWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidCollisionAtZeroWeight", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollConstraint : CPhysConstraint
        {
            public CRagdollConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollConstraint", "CRagdollConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollConstraint", "CRagdollConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Xmin
            {
                get { return Invoker.CallNative<float>("SDKClass", "Xmin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Xmin", CallKind.ClassMember, m_classData, value); }
            }
            public float Xmax
            {
                get { return Invoker.CallNative<float>("SDKClass", "Xmax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Xmax", CallKind.ClassMember, m_classData, value); }
            }
            public float Ymin
            {
                get { return Invoker.CallNative<float>("SDKClass", "Ymin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ymin", CallKind.ClassMember, m_classData, value); }
            }
            public float Ymax
            {
                get { return Invoker.CallNative<float>("SDKClass", "Ymax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ymax", CallKind.ClassMember, m_classData, value); }
            }
            public float Zmin
            {
                get { return Invoker.CallNative<float>("SDKClass", "Zmin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Zmin", CallKind.ClassMember, m_classData, value); }
            }
            public float Zmax
            {
                get { return Invoker.CallNative<float>("SDKClass", "Zmax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Zmax", CallKind.ClassMember, m_classData, value); }
            }
            public float Xfriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Xfriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Xfriction", CallKind.ClassMember, m_classData, value); }
            }
            public float Yfriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Yfriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Yfriction", CallKind.ClassMember, m_classData, value); }
            }
            public float Zfriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Zfriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Zfriction", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollMagnet : CPointEntity
        {
            public CRagdollMagnet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollMagnet", "CRagdollMagnet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollMagnet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollMagnet", "CRagdollMagnet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollMagnet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Force
            {
                get { return Invoker.CallNative<float>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Axis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Axis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Axis", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollManager : CBaseEntity
        {
            public CRagdollManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollManager", "CRagdollManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollManager", "CRagdollManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public char CurrentMaxRagdollCount
            {
                get { return Invoker.CallNative<char>("SDKClass", "CurrentMaxRagdollCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentMaxRagdollCount", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxRagdollCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxRagdollCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRagdollCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool SaveImportant
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SaveImportant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaveImportant", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanTakeDamage
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanTakeDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanTakeDamage", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollProp : CBaseAnimGraph
        {
            public CRagdollProp(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollProp", "CRagdollProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollProp(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollProp", "CRagdollProp", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollProp()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ragdoll_t Ragdoll
            {
                get { return Invoker.CallNative<ragdoll_t>("SDKClass", "Ragdoll", CallKind.ClassMember, m_classData); }
            }
            public bool StartDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D[] RagEnabled
            {
                get { return Invoker.CallNative<Vector4D[]>("SDKClass", "RagEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] RagPos
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "RagPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagPos", CallKind.ClassMember, m_classData, value); }
            }
            public Color[] RagAngles
            {
                get { return Invoker.CallNative<Color[]>("SDKClass", "RagAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagAngles", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity RagdollSource
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "RagdollSource", CallKind.ClassMember, m_classData); }
            }
            public uint LastUpdateTickCount
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LastUpdateTickCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastUpdateTickCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllAsleep
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllAsleep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllAsleep", CallKind.ClassMember, m_classData, value); }
            }
            public bool FirstCollisionAfterLaunch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstCollisionAfterLaunch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstCollisionAfterLaunch", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity DamageEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "DamageEntity", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Killer
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Killer", CallKind.ClassMember, m_classData); }
            }
            public CBasePlayerPawn PhysicsAttacker
            {
                get { return Invoker.CallNative<CBasePlayerPawn>("SDKClass", "PhysicsAttacker", CallKind.ClassMember, m_classData); }
            }
            public float LastPhysicsInfluenceTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPhysicsInfluenceTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float AwakeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AwakeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AwakeTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastOriginChangeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastOriginChangeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastOriginChangeTime", CallKind.ClassMember, m_classData, value); }
            }
            public string StrOriginClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrOriginClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrOriginClassName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrSourceClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrSourceClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrSourceClassName", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasBeenPhysgunned
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBeenPhysgunned", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBeenPhysgunned", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldTeleportPhysics
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldTeleportPhysics", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldTeleportPhysics", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowStretch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowStretch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowStretch", CallKind.ClassMember, m_classData, value); }
            }
            public float BlendWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultFadeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultFadeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultFadeScale", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] RagdollMins
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "RagdollMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollMins", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] RagdollMaxs
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "RagdollMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDeleteActivationRecord
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDeleteActivationRecord", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDeleteActivationRecord", CallKind.ClassMember, m_classData, value); }
            }
            public bool ValidatePoweredRagdollPose
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ValidatePoweredRagdollPose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValidatePoweredRagdollPose", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollPropAlias_physics_prop_ragdoll : CRagdollProp
        {
            public CRagdollPropAlias_physics_prop_ragdoll(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollPropAlias_physics_prop_ragdoll", "CRagdollPropAlias_physics_prop_ragdoll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollPropAlias_physics_prop_ragdoll(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollPropAlias_physics_prop_ragdoll", "CRagdollPropAlias_physics_prop_ragdoll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollPropAlias_physics_prop_ragdoll()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRagdollProp Parent
            {
                get { return Invoker.CallNative<CRagdollProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollPropAttached : CRagdollProp
        {
            public CRagdollPropAttached(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollPropAttached", "CRagdollPropAttached", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollPropAttached(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollPropAttached", "CRagdollPropAttached", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollPropAttached()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint BoneIndexAttached
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneIndexAttached", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndexAttached", CallKind.ClassMember, m_classData, value); }
            }
            public uint RagdollAttachedObjectIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "RagdollAttachedObjectIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RagdollAttachedObjectIndex", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AttachmentPointBoneSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AttachmentPointBoneSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentPointBoneSpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AttachmentPointRagdollSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AttachmentPointRagdollSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentPointRagdollSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDetach
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDetach", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDetach", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDeleteAttachedActivationRecord
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDeleteAttachedActivationRecord", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDeleteAttachedActivationRecord", CallKind.ClassMember, m_classData, value); }
            }
            public CRagdollProp Parent
            {
                get { return Invoker.CallNative<CRagdollProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRagdollUpdateNode : CUnaryUpdateNode
        {
            public CRagdollUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollUpdateNode", "CRagdollUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRagdollUpdateNode", "CRagdollUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRagdollUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int WeightListIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint PoseControlMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PoseControlMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PoseControlMethod", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRandomNumberGeneratorParameters : ClassData
        {
            public CRandomNumberGeneratorParameters(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandomNumberGeneratorParameters", "CRandomNumberGeneratorParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandomNumberGeneratorParameters(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandomNumberGeneratorParameters", "CRandomNumberGeneratorParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandomNumberGeneratorParameters()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool DistributeEvenly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DistributeEvenly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistributeEvenly", CallKind.ClassMember, m_classData, value); }
            }
            public int Seed
            {
                get { return Invoker.CallNative<int>("SDKClass", "Seed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Seed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRandSimTimer : CSimpleSimTimer
        {
            public CRandSimTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandSimTimer", "CRandSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandSimTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandSimTimer", "CRandSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandSimTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MinInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinInterval", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxInterval", CallKind.ClassMember, m_classData, value); }
            }
            public CSimpleSimTimer Parent
            {
                get { return Invoker.CallNative<CSimpleSimTimer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRandStopwatch : CStopwatchBase
        {
            public CRandStopwatch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandStopwatch", "CRandStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandStopwatch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRandStopwatch", "CRandStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRandStopwatch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MinInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinInterval", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxInterval", CallKind.ClassMember, m_classData, value); }
            }
            public CStopwatchBase Parent
            {
                get { return Invoker.CallNative<CStopwatchBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRangeFloat : ClassData
        {
            public CRangeFloat(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRangeFloat", "CRangeFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRangeFloat(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRangeFloat", "CRangeFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRangeFloat()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Value
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRangeInt : ClassData
        {
            public CRangeInt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRangeInt", "CRangeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRangeInt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRangeInt", "CRangeInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRangeInt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Value
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRectLight : CBarnLight
        {
            public CRectLight(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRectLight", "CRectLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRectLight(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRectLight", "CRectLight", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRectLight()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ShowLight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShowLight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShowLight", CallKind.ClassMember, m_classData, value); }
            }
            public CBarnLight Parent
            {
                get { return Invoker.CallNative<CBarnLight>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRegionSVM : ClassData
        {
            public CRegionSVM(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRegionSVM", "CRegionSVM", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRegionSVM(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRegionSVM", "CRegionSVM", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRegionSVM()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] Nodes
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Nodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Nodes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRelativeLocation : ClassData
        {
            public CRelativeLocation(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRelativeLocation", "CRelativeLocation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRelativeLocation(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRelativeLocation", "CRelativeLocation", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRelativeLocation()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Type
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D RelativeOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "RelativeOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelativeOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D WorldSpacePos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "WorldSpacePos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldSpacePos", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRemapFloat : ClassData
        {
            public CRemapFloat(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapFloat", "CRemapFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapFloat(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapFloat", "CRemapFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapFloat()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Value
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRemapValueComponentUpdater : CAnimComponentUpdater
        {
            public CRemapValueComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapValueComponentUpdater", "CRemapValueComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapValueComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapValueComponentUpdater", "CRemapValueComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapValueComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRemapValueUpdateItem : ClassData
        {
            public CRemapValueUpdateItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapValueUpdateItem", "CRemapValueUpdateItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapValueUpdateItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRemapValueUpdateItem", "CRemapValueUpdateItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRemapValueUpdateItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle ParamIn
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIn", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle ParamOut
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamOut", CallKind.ClassMember, m_classData); }
            }
            public float MinInputValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinInputValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinInputValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxInputValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxInputValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxInputValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MinOutputValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinOutputValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinOutputValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxOutputValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxOutputValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxOutputValue", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRenderBufferBinding : ClassData
        {
            public CRenderBufferBinding(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderBufferBinding", "CRenderBufferBinding", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderBufferBinding(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderBufferBinding", "CRenderBufferBinding", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderBufferBinding()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong Buffer
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "Buffer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Buffer", CallKind.ClassMember, m_classData, value); }
            }
            public uint BindOffsetBytes
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BindOffsetBytes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BindOffsetBytes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRenderComponent : CEntityComponent
        {
            public CRenderComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderComponent", "CRenderComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderComponent", "CRenderComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNetworkVarChainer __pChainEntity
            {
                get { return Invoker.CallNative<CNetworkVarChainer>("SDKClass", "__pChainEntity", CallKind.ClassMember, m_classData); }
            }
            public bool IsRenderingWithViewModels
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRenderingWithViewModels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRenderingWithViewModels", CallKind.ClassMember, m_classData, value); }
            }
            public uint SplitscreenFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SplitscreenFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplitscreenFlags", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableRendering
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableRendering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableRendering", CallKind.ClassMember, m_classData, value); }
            }
            public bool InterpolationReadyToDraw
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InterpolationReadyToDraw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterpolationReadyToDraw", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRenderGroom : ClassData
        {
            public CRenderGroom(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderGroom", "CRenderGroom", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderGroom(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderGroom", "CRenderGroom", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderGroom()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] HairPositionOffsets
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "HairPositionOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HairPositionOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public int[] StrandSegmentCountHist
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "StrandSegmentCountHist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrandSegmentCountHist", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxSegmentsPerHairStrand
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxSegmentsPerHairStrand", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxSegmentsPerHairStrand", CallKind.ClassMember, m_classData, value); }
            }
            public int GuideHairCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "GuideHairCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GuideHairCount", CallKind.ClassMember, m_classData, value); }
            }
            public int HairCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "HairCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HairCount", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalVertexCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalVertexCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalVertexCount", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalSegmentCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalSegmentCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalSegmentCount", CallKind.ClassMember, m_classData, value); }
            }
            public int GroomGroupID
            {
                get { return Invoker.CallNative<int>("SDKClass", "GroomGroupID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroomGroupID", CallKind.ClassMember, m_classData, value); }
            }
            public int AttachBoneIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "AttachBoneIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachBoneIdx", CallKind.ClassMember, m_classData, value); }
            }
            public int AttachMeshIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "AttachMeshIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachMeshIdx", CallKind.ClassMember, m_classData, value); }
            }
            public int AttachMeshDrawCallIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "AttachMeshDrawCallIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachMeshDrawCallIdx", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSimulation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSimulation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSimulation", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRenderMesh : ClassData
        {
            public CRenderMesh(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderMesh", "CRenderMesh", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderMesh(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderMesh", "CRenderMesh", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderMesh()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRenderSkeleton Skeleton
            {
                get { return Invoker.CallNative<CRenderSkeleton>("SDKClass", "Skeleton", CallKind.ClassMember, m_classData); }
            }
            public bool EmbeddedMapMesh
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EmbeddedMapMesh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EmbeddedMapMesh", CallKind.ClassMember, m_classData, value); }
            }
            public DynamicMeshDeformParams_t MeshDeformParams
            {
                get { return Invoker.CallNative<DynamicMeshDeformParams_t>("SDKClass", "MeshDeformParams", CallKind.ClassMember, m_classData); }
            }
            public int[] GroomData
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "GroomData", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRenderSkeleton : ClassData
        {
            public CRenderSkeleton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderSkeleton", "CRenderSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderSkeleton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRenderSkeleton", "CRenderSkeleton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRenderSkeleton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] BoneParents
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BoneParents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneParents", CallKind.ClassMember, m_classData, value); }
            }
            public int BoneWeightCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneWeightCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneWeightCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CReplicationParameters : ClassData
        {
            public CReplicationParameters(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CReplicationParameters", "CReplicationParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CReplicationParameters(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CReplicationParameters", "CReplicationParameters", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CReplicationParameters()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ReplicationMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ReplicationMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReplicationMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScaleChildParticleRadii
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScaleChildParticleRadii", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleChildParticleRadii", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionFloatInput MinRandomRadiusScale
            {
                get { return Invoker.CallNative<CParticleCollectionFloatInput>("SDKClass", "MinRandomRadiusScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionFloatInput MaxRandomRadiusScale
            {
                get { return Invoker.CallNative<CParticleCollectionFloatInput>("SDKClass", "MaxRandomRadiusScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionFloatInput ModellingScale
            {
                get { return Invoker.CallNative<CParticleCollectionFloatInput>("SDKClass", "ModellingScale", CallKind.ClassMember, m_classData); }
            }
        }
        public class CResponseCriteriaSet : ClassData
        {
            public CResponseCriteriaSet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CResponseCriteriaSet", "CResponseCriteriaSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CResponseCriteriaSet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CResponseCriteriaSet", "CResponseCriteriaSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CResponseCriteriaSet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NumPrefixedContexts
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumPrefixedContexts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumPrefixedContexts", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideOnAppend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideOnAppend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideOnAppend", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CResponseQueue : ClassData
        {
            public CResponseQueue(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CResponseQueue", "CResponseQueue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CResponseQueue(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CResponseQueue", "CResponseQueue", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CResponseQueue()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CRetakeGameRules : ClassData
        {
            public CRetakeGameRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRetakeGameRules", "CRetakeGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRetakeGameRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRetakeGameRules", "CRetakeGameRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRetakeGameRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MatchSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "MatchSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchSeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool BlockersPresent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BlockersPresent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockersPresent", CallKind.ClassMember, m_classData, value); }
            }
            public bool RoundInProgress
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RoundInProgress", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundInProgress", CallKind.ClassMember, m_classData, value); }
            }
            public int FirstSecondHalfRound
            {
                get { return Invoker.CallNative<int>("SDKClass", "FirstSecondHalfRound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstSecondHalfRound", CallKind.ClassMember, m_classData, value); }
            }
            public int BombSite
            {
                get { return Invoker.CallNative<int>("SDKClass", "BombSite", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombSite", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRevertSaved : CModelPointEntity
        {
            public CRevertSaved(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRevertSaved", "CRevertSaved", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRevertSaved(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRevertSaved", "CRevertSaved", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRevertSaved()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float LoadTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LoadTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoadTime", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float HoldTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "HoldTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoldTime", CallKind.ClassMember, m_classData, value); }
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRootUpdateNode : CUnaryUpdateNode
        {
            public CRootUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRootUpdateNode", "CRootUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRootUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRootUpdateNode", "CRootUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRootUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRopeKeyframe : CBaseModelEntity
        {
            public CRopeKeyframe(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeKeyframe", "CRopeKeyframe", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeKeyframe(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeKeyframe", "CRopeKeyframe", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeKeyframe()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort RopeFlags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RopeFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RopeFlags", CallKind.ClassMember, m_classData, value); }
            }
            public string NextLinkName
            {
                get { return Invoker.CallNative<string>("SDKClass", "NextLinkName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextLinkName", CallKind.ClassMember, m_classData, value); }
            }
            public short Slack
            {
                get { return Invoker.CallNative<short>("SDKClass", "Slack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slack", CallKind.ClassMember, m_classData, value); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float TextureScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TextureScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureScale", CallKind.ClassMember, m_classData, value); }
            }
            public byte Segments
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Segments", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Segments", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConstrainBetweenEndpoints
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConstrainBetweenEndpoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstrainBetweenEndpoints", CallKind.ClassMember, m_classData, value); }
            }
            public string StrRopeMaterialModel
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrRopeMaterialModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrRopeMaterialModel", CallKind.ClassMember, m_classData, value); }
            }
            public byte Subdiv
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Subdiv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Subdiv", CallKind.ClassMember, m_classData, value); }
            }
            public byte ChangeCount
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ChangeCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChangeCount", CallKind.ClassMember, m_classData, value); }
            }
            public short RopeLength
            {
                get { return Invoker.CallNative<short>("SDKClass", "RopeLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RopeLength", CallKind.ClassMember, m_classData, value); }
            }
            public byte LockedPoints
            {
                get { return Invoker.CallNative<byte>("SDKClass", "LockedPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockedPoints", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreatedFromMapFile
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreatedFromMapFile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreatedFromMapFile", CallKind.ClassMember, m_classData, value); }
            }
            public float ScrollSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "ScrollSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScrollSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartPointValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartPointValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartPointValid", CallKind.ClassMember, m_classData, value); }
            }
            public bool EndPointValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EndPointValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndPointValid", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity StartPoint
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "StartPoint", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity EndPoint
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EndPoint", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRopeKeyframeAlias_move_rope : CRopeKeyframe
        {
            public CRopeKeyframeAlias_move_rope(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeKeyframeAlias_move_rope", "CRopeKeyframeAlias_move_rope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeKeyframeAlias_move_rope(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeKeyframeAlias_move_rope", "CRopeKeyframeAlias_move_rope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeKeyframeAlias_move_rope()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRopeKeyframe Parent
            {
                get { return Invoker.CallNative<CRopeKeyframe>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRopeOverlapHit : ClassData
        {
            public CRopeOverlapHit(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeOverlapHit", "CRopeOverlapHit", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeOverlapHit(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRopeOverlapHit", "CRopeOverlapHit", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRopeOverlapHit()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public int[] OverlappingLinks
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "OverlappingLinks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverlappingLinks", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CRotButton : CBaseButton
        {
            public CRotButton(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRotButton", "CRotButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRotButton(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRotButton", "CRotButton", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRotButton()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseButton Parent
            {
                get { return Invoker.CallNative<CBaseButton>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRotDoor : CBaseDoor
        {
            public CRotDoor(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRotDoor", "CRotDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRotDoor(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRotDoor", "CRotDoor", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRotDoor()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool SolidBsp
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolidBsp", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseDoor Parent
            {
                get { return Invoker.CallNative<CBaseDoor>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRuleBrushEntity : CRuleEntity
        {
            public CRuleBrushEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRuleBrushEntity", "CRuleBrushEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRuleBrushEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRuleBrushEntity", "CRuleBrushEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRuleBrushEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CRuleEntity Parent
            {
                get { return Invoker.CallNative<CRuleEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRuleEntity : CBaseModelEntity
        {
            public CRuleEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRuleEntity", "CRuleEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRuleEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRuleEntity", "CRuleEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRuleEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Master
            {
                get { return Invoker.CallNative<string>("SDKClass", "Master", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Master", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CRulePointEntity : CRuleEntity
        {
            public CRulePointEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRulePointEntity", "CRulePointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRulePointEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CRulePointEntity", "CRulePointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CRulePointEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Score
            {
                get { return Invoker.CallNative<int>("SDKClass", "Score", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Score", CallKind.ClassMember, m_classData, value); }
            }
            public CRuleEntity Parent
            {
                get { return Invoker.CallNative<CRuleEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSAdditionalMatchStats_t : CSAdditionalPerRoundStats_t
        {
            public CSAdditionalMatchStats_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSAdditionalMatchStats_t", "CSAdditionalMatchStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSAdditionalMatchStats_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSAdditionalMatchStats_t", "CSAdditionalMatchStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSAdditionalMatchStats_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NumRoundsSurvived
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumRoundsSurvived", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumRoundsSurvived", CallKind.ClassMember, m_classData, value); }
            }
            public int MaxNumRoundsSurvived
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxNumRoundsSurvived", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxNumRoundsSurvived", CallKind.ClassMember, m_classData, value); }
            }
            public int NumRoundsSurvivedTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumRoundsSurvivedTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumRoundsSurvivedTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundsWonWithoutPurchase
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundsWonWithoutPurchase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundsWonWithoutPurchase", CallKind.ClassMember, m_classData, value); }
            }
            public int RoundsWonWithoutPurchaseTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "RoundsWonWithoutPurchaseTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoundsWonWithoutPurchaseTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int NumFirstKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumFirstKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumFirstKills", CallKind.ClassMember, m_classData, value); }
            }
            public int NumClutchKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumClutchKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumClutchKills", CallKind.ClassMember, m_classData, value); }
            }
            public int NumPistolKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumPistolKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumPistolKills", CallKind.ClassMember, m_classData, value); }
            }
            public int NumSniperKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumSniperKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSniperKills", CallKind.ClassMember, m_classData, value); }
            }
            public int NumSuicides
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumSuicides", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumSuicides", CallKind.ClassMember, m_classData, value); }
            }
            public int NumTeamKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumTeamKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumTeamKills", CallKind.ClassMember, m_classData, value); }
            }
            public int TeamDamage
            {
                get { return Invoker.CallNative<int>("SDKClass", "TeamDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TeamDamage", CallKind.ClassMember, m_classData, value); }
            }
            public CSAdditionalPerRoundStats_t Parent
            {
                get { return Invoker.CallNative<CSAdditionalPerRoundStats_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSAdditionalPerRoundStats_t : ClassData
        {
            public CSAdditionalPerRoundStats_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSAdditionalPerRoundStats_t", "CSAdditionalPerRoundStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSAdditionalPerRoundStats_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSAdditionalPerRoundStats_t", "CSAdditionalPerRoundStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSAdditionalPerRoundStats_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int NumChickensKilled
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumChickensKilled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumChickensKilled", CallKind.ClassMember, m_classData, value); }
            }
            public int KillsWhileBlind
            {
                get { return Invoker.CallNative<int>("SDKClass", "KillsWhileBlind", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KillsWhileBlind", CallKind.ClassMember, m_classData, value); }
            }
            public int BombCarrierkills
            {
                get { return Invoker.CallNative<int>("SDKClass", "BombCarrierkills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BombCarrierkills", CallKind.ClassMember, m_classData, value); }
            }
            public int BurnDamageInflicted
            {
                get { return Invoker.CallNative<int>("SDKClass", "BurnDamageInflicted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BurnDamageInflicted", CallKind.ClassMember, m_classData, value); }
            }
            public int BlastDamageInflicted
            {
                get { return Invoker.CallNative<int>("SDKClass", "BlastDamageInflicted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlastDamageInflicted", CallKind.ClassMember, m_classData, value); }
            }
            public int Dinks
            {
                get { return Invoker.CallNative<int>("SDKClass", "Dinks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dinks", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSceneEntity : CPointEntity
        {
            public CSceneEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEntity", "CSceneEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEntity", "CSceneEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SceneFile
            {
                get { return Invoker.CallNative<string>("SDKClass", "SceneFile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneFile", CallKind.ClassMember, m_classData, value); }
            }
            public string ResumeSceneFile
            {
                get { return Invoker.CallNative<string>("SDKClass", "ResumeSceneFile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResumeSceneFile", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetAttachment
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetAttachment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetAttachment", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlayingBack
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlayingBack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlayingBack", CallKind.ClassMember, m_classData, value); }
            }
            public bool Paused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Paused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Paused", CallKind.ClassMember, m_classData, value); }
            }
            public bool Multiplayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Multiplayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Multiplayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool Autogenerated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Autogenerated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Autogenerated", CallKind.ClassMember, m_classData, value); }
            }
            public float ForceClientTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForceClientTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceClientTime", CallKind.ClassMember, m_classData, value); }
            }
            public float CurrentTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurrentTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool CancelAtNextInterrupt
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CancelAtNextInterrupt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CancelAtNextInterrupt", CallKind.ClassMember, m_classData, value); }
            }
            public float Pitch
            {
                get { return Invoker.CallNative<float>("SDKClass", "Pitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pitch", CallKind.ClassMember, m_classData, value); }
            }
            public bool Automated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Automated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Automated", CallKind.ClassMember, m_classData, value); }
            }
            public int AutomatedAction
            {
                get { return Invoker.CallNative<int>("SDKClass", "AutomatedAction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutomatedAction", CallKind.ClassMember, m_classData, value); }
            }
            public float AutomationDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutomationDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutomationDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float AutomationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutomationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutomationTime", CallKind.ClassMember, m_classData, value); }
            }
            public int SpeechPriority
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpeechPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeechPriority", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity WaitingForThisResumeScene
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "WaitingForThisResumeScene", CallKind.ClassMember, m_classData); }
            }
            public bool WaitingForResumeScene
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitingForResumeScene", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitingForResumeScene", CallKind.ClassMember, m_classData, value); }
            }
            public bool PausedViaInput
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PausedViaInput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PausedViaInput", CallKind.ClassMember, m_classData, value); }
            }
            public bool PauseAtNextInterrupt
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PauseAtNextInterrupt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PauseAtNextInterrupt", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitingForActor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitingForActor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitingForActor", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitingForInterrupt
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitingForInterrupt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitingForInterrupt", CallKind.ClassMember, m_classData, value); }
            }
            public bool InterruptedActorsScenes
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InterruptedActorsScenes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterruptedActorsScenes", CallKind.ClassMember, m_classData, value); }
            }
            public bool BreakOnNonIdle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BreakOnNonIdle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BreakOnNonIdle", CallKind.ClassMember, m_classData, value); }
            }
            public bool SceneFinished
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SceneFinished", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneFinished", CallKind.ClassMember, m_classData, value); }
            }
            public int SceneFlushCounter
            {
                get { return Invoker.CallNative<int>("SDKClass", "SceneFlushCounter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneFlushCounter", CallKind.ClassMember, m_classData, value); }
            }
            public ushort SceneStringIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "SceneStringIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneStringIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnStart
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStart", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCompletion
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCompletion", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCanceled
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCanceled", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPaused
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPaused", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnResumed
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnResumed", CallKind.ClassMember, m_classData); }
            }
            public CSceneEntity InterruptScene
            {
                get { return Invoker.CallNative<CSceneEntity>("SDKClass", "InterruptScene", CallKind.ClassMember, m_classData); }
            }
            public int InterruptCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "InterruptCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterruptCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool SceneMissing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SceneMissing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneMissing", CallKind.ClassMember, m_classData, value); }
            }
            public bool Interrupted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Interrupted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interrupted", CallKind.ClassMember, m_classData, value); }
            }
            public bool CompletedEarly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CompletedEarly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompletedEarly", CallKind.ClassMember, m_classData, value); }
            }
            public bool InterruptSceneFinished
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InterruptSceneFinished", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterruptSceneFinished", CallKind.ClassMember, m_classData, value); }
            }
            public bool Restoring
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Restoring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Restoring", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundName", CallKind.ClassMember, m_classData, value); }
            }
            public string SequenceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SequenceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFlex Actor
            {
                get { return Invoker.CallNative<CBaseFlex>("SDKClass", "Actor", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Activator
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Activator", CallKind.ClassMember, m_classData); }
            }
            public int BusyActor
            {
                get { return Invoker.CallNative<int>("SDKClass", "BusyActor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BusyActor", CallKind.ClassMember, m_classData, value); }
            }
            public uint PlayerDeathBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PlayerDeathBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDeathBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSceneEntityAlias_logic_choreographed_scene : CSceneEntity
        {
            public CSceneEntityAlias_logic_choreographed_scene(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEntityAlias_logic_choreographed_scene", "CSceneEntityAlias_logic_choreographed_scene", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEntityAlias_logic_choreographed_scene(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEntityAlias_logic_choreographed_scene", "CSceneEntityAlias_logic_choreographed_scene", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEntityAlias_logic_choreographed_scene()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSceneEntity Parent
            {
                get { return Invoker.CallNative<CSceneEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSceneEventInfo : ClassData
        {
            public CSceneEventInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEventInfo", "CSceneEventInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEventInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneEventInfo", "CSceneEventInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneEventInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Layer
            {
                get { return Invoker.CallNative<int>("SDKClass", "Layer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Layer", CallKind.ClassMember, m_classData, value); }
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasArrived
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasArrived", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasArrived", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public float Next
            {
                get { return Invoker.CallNative<float>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Next", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsGesture
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsGesture", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsGesture", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldRemove
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldRemove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldRemove", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
            public SceneEventId_t SceneEventId
            {
                get { return Invoker.CallNative<SceneEventId_t>("SDKClass", "SceneEventId", CallKind.ClassMember, m_classData); }
            }
            public bool ClientSide
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClientSide", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientSide", CallKind.ClassMember, m_classData, value); }
            }
            public bool Started
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Started", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Started", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSceneListManager : CLogicalEntity
        {
            public CSceneListManager(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneListManager", "CSceneListManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneListManager(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneListManager", "CSceneListManager", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneListManager()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] Scenes
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Scenes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scenes", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSceneObjectData : ClassData
        {
            public CSceneObjectData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneObjectData", "CSceneObjectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneObjectData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSceneObjectData", "CSceneObjectData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSceneObjectData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D MinBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBounds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CScriptComponent : CEntityComponent
        {
            public CScriptComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptComponent", "CScriptComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptComponent", "CScriptComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ScriptClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ScriptClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScriptClassName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptedSequence : CBaseEntity
        {
            public CScriptedSequence(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptedSequence", "CScriptedSequence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptedSequence(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptedSequence", "CScriptedSequence", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptedSequence()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Entry
            {
                get { return Invoker.CallNative<string>("SDKClass", "Entry", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entry", CallKind.ClassMember, m_classData, value); }
            }
            public string PreIdle
            {
                get { return Invoker.CallNative<string>("SDKClass", "PreIdle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreIdle", CallKind.ClassMember, m_classData, value); }
            }
            public string Play
            {
                get { return Invoker.CallNative<string>("SDKClass", "Play", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Play", CallKind.ClassMember, m_classData, value); }
            }
            public string PostIdle
            {
                get { return Invoker.CallNative<string>("SDKClass", "PostIdle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PostIdle", CallKind.ClassMember, m_classData, value); }
            }
            public string ModifierToAddOnPlay
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModifierToAddOnPlay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModifierToAddOnPlay", CallKind.ClassMember, m_classData, value); }
            }
            public string NextScript
            {
                get { return Invoker.CallNative<string>("SDKClass", "NextScript", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextScript", CallKind.ClassMember, m_classData, value); }
            }
            public string Entity
            {
                get { return Invoker.CallNative<string>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Entity", CallKind.ClassMember, m_classData, value); }
            }
            public string SyncGroup
            {
                get { return Invoker.CallNative<string>("SDKClass", "SyncGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SyncGroup", CallKind.ClassMember, m_classData, value); }
            }
            public uint MoveTo
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MoveTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveTo", CallKind.ClassMember, m_classData, value); }
            }
            public byte MoveToGait
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MoveToGait", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveToGait", CallKind.ClassMember, m_classData, value); }
            }
            public uint HeldWeaponBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HeldWeaponBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeldWeaponBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public uint ForcedCrouchState
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForcedCrouchState", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlayingPreIdle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlayingPreIdle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlayingPreIdle", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlayingEntry
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlayingEntry", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlayingEntry", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlayingAction
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlayingAction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlayingAction", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPlayingPostIdle
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPlayingPostIdle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlayingPostIdle", CallKind.ClassMember, m_classData, value); }
            }
            public bool DontRotateOther
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DontRotateOther", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontRotateOther", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsRepeatable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRepeatable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRepeatable", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldLeaveCorpse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldLeaveCorpse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldLeaveCorpse", CallKind.ClassMember, m_classData, value); }
            }
            public bool StartOnSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartOnSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartOnSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisallowInterrupts
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisallowInterrupts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisallowInterrupts", CallKind.ClassMember, m_classData, value); }
            }
            public bool CanOverrideNPCState
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CanOverrideNPCState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CanOverrideNPCState", CallKind.ClassMember, m_classData, value); }
            }
            public bool DontTeleportAtEnd
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DontTeleportAtEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontTeleportAtEnd", CallKind.ClassMember, m_classData, value); }
            }
            public bool HighPriority
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HighPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HighPriority", CallKind.ClassMember, m_classData, value); }
            }
            public bool HideDebugComplaints
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HideDebugComplaints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HideDebugComplaints", CallKind.ClassMember, m_classData, value); }
            }
            public bool ContinueOnDeath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ContinueOnDeath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ContinueOnDeath", CallKind.ClassMember, m_classData, value); }
            }
            public bool LoopPreIdleSequence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoopPreIdleSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopPreIdleSequence", CallKind.ClassMember, m_classData, value); }
            }
            public bool LoopActionSequence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoopActionSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopActionSequence", CallKind.ClassMember, m_classData, value); }
            }
            public bool LoopPostIdleSequence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LoopPostIdleSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LoopPostIdleSequence", CallKind.ClassMember, m_classData, value); }
            }
            public bool SynchPostIdles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SynchPostIdles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SynchPostIdles", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreLookAt
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreLookAt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreLookAt", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreGravity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreGravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreGravity", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableNPCCollisions
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableNPCCollisions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableNPCCollisions", CallKind.ClassMember, m_classData, value); }
            }
            public bool KeepAnimgraphLockedPost
            {
                get { return Invoker.CallNative<bool>("SDKClass", "KeepAnimgraphLockedPost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KeepAnimgraphLockedPost", CallKind.ClassMember, m_classData, value); }
            }
            public bool DontAddModifiers
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DontAddModifiers", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontAddModifiers", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableAimingWhileMoving
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableAimingWhileMoving", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableAimingWhileMoving", CallKind.ClassMember, m_classData, value); }
            }
            public bool IgnoreRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IgnoreRotation", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Repeat
            {
                get { return Invoker.CallNative<float>("SDKClass", "Repeat", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Repeat", CallKind.ClassMember, m_classData, value); }
            }
            public float PlayAnimFadeInTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlayAnimFadeInTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayAnimFadeInTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveInterpTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveInterpTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveInterpTime", CallKind.ClassMember, m_classData, value); }
            }
            public float AngRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngRate", CallKind.ClassMember, m_classData, value); }
            }
            public float MoveSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitUntilMoveCompletesToStartAnimation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitUntilMoveCompletesToStartAnimation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitUntilMoveCompletesToStartAnimation", CallKind.ClassMember, m_classData, value); }
            }
            public int NotReadySequenceCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "NotReadySequenceCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NotReadySequenceCount", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool WaitForBeginSequence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WaitForBeginSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WaitForBeginSequence", CallKind.ClassMember, m_classData, value); }
            }
            public int Saved_effects
            {
                get { return Invoker.CallNative<int>("SDKClass", "Saved_effects", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Saved_effects", CallKind.ClassMember, m_classData, value); }
            }
            public int SavedFlags
            {
                get { return Invoker.CallNative<int>("SDKClass", "SavedFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SavedFlags", CallKind.ClassMember, m_classData, value); }
            }
            public int SavedCollisionGroup
            {
                get { return Invoker.CallNative<int>("SDKClass", "SavedCollisionGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SavedCollisionGroup", CallKind.ClassMember, m_classData, value); }
            }
            public bool Interruptable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Interruptable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interruptable", CallKind.ClassMember, m_classData, value); }
            }
            public bool SequenceStarted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SequenceStarted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceStarted", CallKind.ClassMember, m_classData, value); }
            }
            public bool PositionRelativeToOtherEntity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PositionRelativeToOtherEntity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PositionRelativeToOtherEntity", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity TargetEnt
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEnt", CallKind.ClassMember, m_classData); }
            }
            public CScriptedSequence NextCine
            {
                get { return Invoker.CallNative<CScriptedSequence>("SDKClass", "NextCine", CallKind.ClassMember, m_classData); }
            }
            public bool Thinking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Thinking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Thinking", CallKind.ClassMember, m_classData, value); }
            }
            public bool InitiatedSelfDelete
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InitiatedSelfDelete", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitiatedSelfDelete", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsTeleportingDueToMoveTo
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsTeleportingDueToMoveTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsTeleportingDueToMoveTo", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowCustomInterruptConditions
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowCustomInterruptConditions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowCustomInterruptConditions", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseAnimGraph ForcedTarget
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "ForcedTarget", CallKind.ClassMember, m_classData); }
            }
            public bool DontCancelOtherSequences
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DontCancelOtherSequences", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontCancelOtherSequences", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceSynch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceSynch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceSynch", CallKind.ClassMember, m_classData, value); }
            }
            public bool PreventUpdateYawOnFinish
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreventUpdateYawOnFinish", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventUpdateYawOnFinish", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnsureOnNavmeshOnFinish
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnsureOnNavmeshOnFinish", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnsureOnNavmeshOnFinish", CallKind.ClassMember, m_classData, value); }
            }
            public uint OnDeathBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OnDeathBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnDeathBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public uint ConflictResponse
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ConflictResponse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConflictResponse", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnBeginSequence
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnBeginSequence", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnActionStartOrLoop
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnActionStartOrLoop", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEndSequence
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEndSequence", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnPostIdleEndSequence
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnPostIdleEndSequence", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCancelSequence
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCancelSequence", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnCancelFailedSequence
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnCancelFailedSequence", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity InteractionMainEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "InteractionMainEntity", CallKind.ClassMember, m_classData); }
            }
            public int PlayerDeathBehavior
            {
                get { return Invoker.CallNative<int>("SDKClass", "PlayerDeathBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerDeathBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public bool SkipFadeIn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SkipFadeIn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkipFadeIn", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptItem : CItem
        {
            public CScriptItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptItem", "CScriptItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptItem", "CScriptItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte MoveTypeOverride
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MoveTypeOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveTypeOverride", CallKind.ClassMember, m_classData, value); }
            }
            public CItem Parent
            {
                get { return Invoker.CallNative<CItem>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptNavBlocker : CFuncNavBlocker
        {
            public CScriptNavBlocker(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptNavBlocker", "CScriptNavBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptNavBlocker(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptNavBlocker", "CScriptNavBlocker", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptNavBlocker()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Extent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Extent", CallKind.ClassMember, m_classData, value); }
            }
            public CFuncNavBlocker Parent
            {
                get { return Invoker.CallNative<CFuncNavBlocker>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptTriggerHurt : CTriggerHurt
        {
            public CScriptTriggerHurt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerHurt", "CScriptTriggerHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerHurt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerHurt", "CScriptTriggerHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerHurt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Extent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Extent", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerHurt Parent
            {
                get { return Invoker.CallNative<CTriggerHurt>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptTriggerMultiple : CTriggerMultiple
        {
            public CScriptTriggerMultiple(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerMultiple", "CScriptTriggerMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerMultiple(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerMultiple", "CScriptTriggerMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerMultiple()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Extent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Extent", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerMultiple Parent
            {
                get { return Invoker.CallNative<CTriggerMultiple>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptTriggerOnce : CTriggerOnce
        {
            public CScriptTriggerOnce(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerOnce", "CScriptTriggerOnce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerOnce(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerOnce", "CScriptTriggerOnce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerOnce()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Extent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Extent", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerOnce Parent
            {
                get { return Invoker.CallNative<CTriggerOnce>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptTriggerPush : CTriggerPush
        {
            public CScriptTriggerPush(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerPush", "CScriptTriggerPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerPush(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptTriggerPush", "CScriptTriggerPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptTriggerPush()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Extent
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Extent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Extent", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerPush Parent
            {
                get { return Invoker.CallNative<CTriggerPush>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CScriptUniformRandomStream : ClassData
        {
            public CScriptUniformRandomStream(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptUniformRandomStream", "CScriptUniformRandomStream", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptUniformRandomStream(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CScriptUniformRandomStream", "CScriptUniformRandomStream", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CScriptUniformRandomStream()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int InitialSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "InitialSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialSeed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSelectorUpdateNode : CAnimUpdateNodeBase
        {
            public CSelectorUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSelectorUpdateNode", "CSelectorUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSelectorUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSelectorUpdateNode", "CSelectorUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSelectorUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public char[] Tags
            {
                get { return Invoker.CallNative<char[]>("SDKClass", "Tags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tags", CallKind.ClassMember, m_classData, value); }
            }
            public CBlendCurve BlendCurve
            {
                get { return Invoker.CallNative<CBlendCurve>("SDKClass", "BlendCurve", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle Parameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Parameter", CallKind.ClassMember, m_classData); }
            }
            public int TagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint TagBehavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TagBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagBehavior", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetOnChange
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetOnChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetOnChange", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public bool SyncCyclesOnChange
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SyncCyclesOnChange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SyncCyclesOnChange", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSeqAutoLayer : ClassData
        {
            public CSeqAutoLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqAutoLayer", "CSeqAutoLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqAutoLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqAutoLayer", "CSeqAutoLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqAutoLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short LocalReference
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalReference", CallKind.ClassMember, m_classData, value); }
            }
            public short LocalPose
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalPose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalPose", CallKind.ClassMember, m_classData, value); }
            }
            public CSeqAutoLayerFlag Flags
            {
                get { return Invoker.CallNative<CSeqAutoLayerFlag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public float Start
            {
                get { return Invoker.CallNative<float>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public float Peak
            {
                get { return Invoker.CallNative<float>("SDKClass", "Peak", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Peak", CallKind.ClassMember, m_classData, value); }
            }
            public float Tail
            {
                get { return Invoker.CallNative<float>("SDKClass", "Tail", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tail", CallKind.ClassMember, m_classData, value); }
            }
            public float End
            {
                get { return Invoker.CallNative<float>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqAutoLayerFlag : ClassData
        {
            public CSeqAutoLayerFlag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqAutoLayerFlag", "CSeqAutoLayerFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqAutoLayerFlag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqAutoLayerFlag", "CSeqAutoLayerFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqAutoLayerFlag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Post
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Post", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Post", CallKind.ClassMember, m_classData, value); }
            }
            public bool Spline
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Spline", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spline", CallKind.ClassMember, m_classData, value); }
            }
            public bool XFade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "XFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XFade", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoBlend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoBlend", CallKind.ClassMember, m_classData, value); }
            }
            public bool Local
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Local", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Local", CallKind.ClassMember, m_classData, value); }
            }
            public bool Pose
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Pose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pose", CallKind.ClassMember, m_classData, value); }
            }
            public bool FetchFrame
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FetchFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FetchFrame", CallKind.ClassMember, m_classData, value); }
            }
            public bool Subtract
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Subtract", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Subtract", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqBoneMaskList : ClassData
        {
            public CSeqBoneMaskList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqBoneMaskList", "CSeqBoneMaskList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqBoneMaskList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqBoneMaskList", "CSeqBoneMaskList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqBoneMaskList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short[] LocalBoneArray
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "LocalBoneArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBoneArray", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BoneWeightArray
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BoneWeightArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneWeightArray", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultMorphCtrlWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultMorphCtrlWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultMorphCtrlWeight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqCmdLayer : ClassData
        {
            public CSeqCmdLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqCmdLayer", "CSeqCmdLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqCmdLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqCmdLayer", "CSeqCmdLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqCmdLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short Cmd
            {
                get { return Invoker.CallNative<short>("SDKClass", "Cmd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cmd", CallKind.ClassMember, m_classData, value); }
            }
            public short LocalReference
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalReference", CallKind.ClassMember, m_classData, value); }
            }
            public short LocalBonemask
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalBonemask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBonemask", CallKind.ClassMember, m_classData, value); }
            }
            public short DstResult
            {
                get { return Invoker.CallNative<short>("SDKClass", "DstResult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DstResult", CallKind.ClassMember, m_classData, value); }
            }
            public short SrcResult
            {
                get { return Invoker.CallNative<short>("SDKClass", "SrcResult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SrcResult", CallKind.ClassMember, m_classData, value); }
            }
            public bool Spline
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Spline", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spline", CallKind.ClassMember, m_classData, value); }
            }
            public short LineNumber
            {
                get { return Invoker.CallNative<short>("SDKClass", "LineNumber", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LineNumber", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqCmdSeqDesc : ClassData
        {
            public CSeqCmdSeqDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqCmdSeqDesc", "CSeqCmdSeqDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqCmdSeqDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqCmdSeqDesc", "CSeqCmdSeqDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqCmdSeqDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSeqSeqDescFlag Flags
            {
                get { return Invoker.CallNative<CSeqSeqDescFlag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public CSeqTransition Transition
            {
                get { return Invoker.CallNative<CSeqTransition>("SDKClass", "Transition", CallKind.ClassMember, m_classData); }
            }
            public short FrameRangeSequence
            {
                get { return Invoker.CallNative<short>("SDKClass", "FrameRangeSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameRangeSequence", CallKind.ClassMember, m_classData, value); }
            }
            public short FrameCount
            {
                get { return Invoker.CallNative<short>("SDKClass", "FrameCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameCount", CallKind.ClassMember, m_classData, value); }
            }
            public float FPS
            {
                get { return Invoker.CallNative<float>("SDKClass", "FPS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FPS", CallKind.ClassMember, m_classData, value); }
            }
            public short SubCycles
            {
                get { return Invoker.CallNative<short>("SDKClass", "SubCycles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubCycles", CallKind.ClassMember, m_classData, value); }
            }
            public short NumLocalResults
            {
                get { return Invoker.CallNative<short>("SDKClass", "NumLocalResults", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumLocalResults", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqIKLock : ClassData
        {
            public CSeqIKLock(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqIKLock", "CSeqIKLock", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqIKLock(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqIKLock", "CSeqIKLock", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqIKLock()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float PosWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "PosWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PosWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleWeight", CallKind.ClassMember, m_classData, value); }
            }
            public short LocalBone
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBone", CallKind.ClassMember, m_classData, value); }
            }
            public bool BonesOrientedAlongPositiveX
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BonesOrientedAlongPositiveX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BonesOrientedAlongPositiveX", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqMultiFetch : ClassData
        {
            public CSeqMultiFetch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqMultiFetch", "CSeqMultiFetch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqMultiFetch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqMultiFetch", "CSeqMultiFetch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqMultiFetch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSeqMultiFetchFlag Flags
            {
                get { return Invoker.CallNative<CSeqMultiFetchFlag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public short[] LocalReferenceArray
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "LocalReferenceArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalReferenceArray", CallKind.ClassMember, m_classData, value); }
            }
            public int[] GroupSize
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "GroupSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupSize", CallKind.ClassMember, m_classData, value); }
            }
            public int[] LocalPose
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "LocalPose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalPose", CallKind.ClassMember, m_classData, value); }
            }
            public int LocalCyclePoseParameter
            {
                get { return Invoker.CallNative<int>("SDKClass", "LocalCyclePoseParameter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalCyclePoseParameter", CallKind.ClassMember, m_classData, value); }
            }
            public bool CalculatePoseParameters
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CalculatePoseParameters", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CalculatePoseParameters", CallKind.ClassMember, m_classData, value); }
            }
            public bool FixedBlendWeight
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FixedBlendWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FixedBlendWeight", CallKind.ClassMember, m_classData, value); }
            }
            public float[] FixedBlendWeightVals
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "FixedBlendWeightVals", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FixedBlendWeightVals", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqMultiFetchFlag : ClassData
        {
            public CSeqMultiFetchFlag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqMultiFetchFlag", "CSeqMultiFetchFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqMultiFetchFlag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqMultiFetchFlag", "CSeqMultiFetchFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqMultiFetchFlag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Realtime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Realtime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Realtime", CallKind.ClassMember, m_classData, value); }
            }
            public bool Cylepose
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Cylepose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cylepose", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqPoseParamDesc : ClassData
        {
            public CSeqPoseParamDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqPoseParamDesc", "CSeqPoseParamDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqPoseParamDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqPoseParamDesc", "CSeqPoseParamDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqPoseParamDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Start
            {
                get { return Invoker.CallNative<float>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public float End
            {
                get { return Invoker.CallNative<float>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public float Loop
            {
                get { return Invoker.CallNative<float>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public bool Looping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Looping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Looping", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqPoseSetting : ClassData
        {
            public CSeqPoseSetting(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqPoseSetting", "CSeqPoseSetting", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqPoseSetting(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqPoseSetting", "CSeqPoseSetting", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqPoseSetting()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public bool X
            {
                get { return Invoker.CallNative<bool>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public bool Y
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
            public bool Z
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Z", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Z", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqS1SeqDesc : ClassData
        {
            public CSeqS1SeqDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqS1SeqDesc", "CSeqS1SeqDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqS1SeqDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqS1SeqDesc", "CSeqS1SeqDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqS1SeqDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSeqSeqDescFlag Flags
            {
                get { return Invoker.CallNative<CSeqSeqDescFlag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public CSeqMultiFetch Fetch
            {
                get { return Invoker.CallNative<CSeqMultiFetch>("SDKClass", "Fetch", CallKind.ClassMember, m_classData); }
            }
            public int LocalWeightlist
            {
                get { return Invoker.CallNative<int>("SDKClass", "LocalWeightlist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalWeightlist", CallKind.ClassMember, m_classData, value); }
            }
            public CSeqTransition Transition
            {
                get { return Invoker.CallNative<CSeqTransition>("SDKClass", "Transition", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSeqScaleSet : ClassData
        {
            public CSeqScaleSet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqScaleSet", "CSeqScaleSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqScaleSet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqScaleSet", "CSeqScaleSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqScaleSet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool RootOffset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RootOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootOffset", CallKind.ClassMember, m_classData, value); }
            }
            public short[] LocalBoneArray
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "LocalBoneArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBoneArray", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BoneScaleArray
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BoneScaleArray", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneScaleArray", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqSeqDescFlag : ClassData
        {
            public CSeqSeqDescFlag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqSeqDescFlag", "CSeqSeqDescFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqSeqDescFlag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqSeqDescFlag", "CSeqSeqDescFlag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqSeqDescFlag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Looping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Looping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Looping", CallKind.ClassMember, m_classData, value); }
            }
            public bool Snap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Snap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Snap", CallKind.ClassMember, m_classData, value); }
            }
            public bool Autoplay
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Autoplay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Autoplay", CallKind.ClassMember, m_classData, value); }
            }
            public bool Post
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Post", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Post", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hidden
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hidden", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hidden", CallKind.ClassMember, m_classData, value); }
            }
            public bool Multi
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Multi", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Multi", CallKind.ClassMember, m_classData, value); }
            }
            public bool LegacyDelta
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LegacyDelta", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyDelta", CallKind.ClassMember, m_classData, value); }
            }
            public bool LegacyWorldspace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LegacyWorldspace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyWorldspace", CallKind.ClassMember, m_classData, value); }
            }
            public bool LegacyCyclepose
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LegacyCyclepose", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyCyclepose", CallKind.ClassMember, m_classData, value); }
            }
            public bool LegacyRealtime
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LegacyRealtime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyRealtime", CallKind.ClassMember, m_classData, value); }
            }
            public bool ModelDoc
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ModelDoc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelDoc", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqSynthAnimDesc : ClassData
        {
            public CSeqSynthAnimDesc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqSynthAnimDesc", "CSeqSynthAnimDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqSynthAnimDesc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqSynthAnimDesc", "CSeqSynthAnimDesc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqSynthAnimDesc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSeqSeqDescFlag Flags
            {
                get { return Invoker.CallNative<CSeqSeqDescFlag>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
            }
            public CSeqTransition Transition
            {
                get { return Invoker.CallNative<CSeqTransition>("SDKClass", "Transition", CallKind.ClassMember, m_classData); }
            }
            public short LocalBaseReference
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalBaseReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBaseReference", CallKind.ClassMember, m_classData, value); }
            }
            public short LocalBoneMask
            {
                get { return Invoker.CallNative<short>("SDKClass", "LocalBoneMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalBoneMask", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSeqTransition : ClassData
        {
            public CSeqTransition(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqTransition", "CSeqTransition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqTransition(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSeqTransition", "CSeqTransition", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSeqTransition()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FadeInTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeInTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeInTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeOutTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeOutTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeOutTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSequenceFinishedAnimTag : CAnimTagBase
        {
            public CSequenceFinishedAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceFinishedAnimTag", "CSequenceFinishedAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceFinishedAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceFinishedAnimTag", "CSequenceFinishedAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceFinishedAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SequenceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SequenceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceName", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSequenceGroupData : ClassData
        {
            public CSequenceGroupData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceGroupData", "CSequenceGroupData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceGroupData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceGroupData", "CSequenceGroupData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceGroupData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSequenceTagSpans : ClassData
        {
            public CSequenceTagSpans(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceTagSpans", "CSequenceTagSpans", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceTagSpans(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceTagSpans", "CSequenceTagSpans", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceTagSpans()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CSequenceUpdateNode : CSequenceUpdateNodeBase
        {
            public CSequenceUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceUpdateNode", "CSequenceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceUpdateNode", "CSequenceUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public CParamSpanUpdater ParamSpans
            {
                get { return Invoker.CallNative<CParamSpanUpdater>("SDKClass", "ParamSpans", CallKind.ClassMember, m_classData); }
            }
            public CSequenceUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CSequenceUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSequenceUpdateNodeBase : CLeafUpdateNode
        {
            public CSequenceUpdateNodeBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceUpdateNodeBase", "CSequenceUpdateNodeBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceUpdateNodeBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSequenceUpdateNodeBase", "CSequenceUpdateNodeBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSequenceUpdateNodeBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float PlaybackSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CServerOnlyEntity : CBaseEntity
        {
            public CServerOnlyEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyEntity", "CServerOnlyEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyEntity", "CServerOnlyEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CServerOnlyModelEntity : CBaseModelEntity
        {
            public CServerOnlyModelEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyModelEntity", "CServerOnlyModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyModelEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyModelEntity", "CServerOnlyModelEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyModelEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CServerOnlyPointEntity : CServerOnlyEntity
        {
            public CServerOnlyPointEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyPointEntity", "CServerOnlyPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyPointEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerOnlyPointEntity", "CServerOnlyPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerOnlyPointEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CServerOnlyEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CServerRagdollTrigger : CBaseTrigger
        {
            public CServerRagdollTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerRagdollTrigger", "CServerRagdollTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerRagdollTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CServerRagdollTrigger", "CServerRagdollTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CServerRagdollTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSetParameterActionUpdater : CAnimActionUpdater
        {
            public CSetParameterActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSetParameterActionUpdater", "CSetParameterActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSetParameterActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSetParameterActionUpdater", "CSetParameterActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSetParameterActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle Param
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Param", CallKind.ClassMember, m_classData); }
            }
            public CAnimActionUpdater Parent
            {
                get { return Invoker.CallNative<CAnimActionUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CShatterGlassShard : ClassData
        {
            public CShatterGlassShard(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShatterGlassShard", "CShatterGlassShard", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShatterGlassShard(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShatterGlassShard", "CShatterGlassShard", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShatterGlassShard()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ShardHandle
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ShardHandle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShardHandle", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] PanelVertices
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "PanelVertices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelVertices", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D LocalPanelSpaceOrigin
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "LocalPanelSpaceOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalPanelSpaceOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public CShatterGlassShardPhysics PhysicsEntity
            {
                get { return Invoker.CallNative<CShatterGlassShardPhysics>("SDKClass", "PhysicsEntity", CallKind.ClassMember, m_classData); }
            }
            public CFuncShatterglass ParentPanel
            {
                get { return Invoker.CallNative<CFuncShatterglass>("SDKClass", "ParentPanel", CallKind.ClassMember, m_classData); }
            }
            public uint ParentShard
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ParentShard", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentShard", CallKind.ClassMember, m_classData, value); }
            }
            public byte ShatterStressType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ShatterStressType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShatterStressType", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StressVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StressVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StressVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreatedModel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreatedModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreatedModel", CallKind.ClassMember, m_classData, value); }
            }
            public float LongestEdge
            {
                get { return Invoker.CallNative<float>("SDKClass", "LongestEdge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LongestEdge", CallKind.ClassMember, m_classData, value); }
            }
            public float ShortestEdge
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShortestEdge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShortestEdge", CallKind.ClassMember, m_classData, value); }
            }
            public float LongestAcross
            {
                get { return Invoker.CallNative<float>("SDKClass", "LongestAcross", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LongestAcross", CallKind.ClassMember, m_classData, value); }
            }
            public float ShortestAcross
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShortestAcross", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShortestAcross", CallKind.ClassMember, m_classData, value); }
            }
            public float SumOfAllEdges
            {
                get { return Invoker.CallNative<float>("SDKClass", "SumOfAllEdges", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SumOfAllEdges", CallKind.ClassMember, m_classData, value); }
            }
            public float Area
            {
                get { return Invoker.CallNative<float>("SDKClass", "Area", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Area", CallKind.ClassMember, m_classData, value); }
            }
            public byte OnFrameEdge
            {
                get { return Invoker.CallNative<byte>("SDKClass", "OnFrameEdge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnFrameEdge", CallKind.ClassMember, m_classData, value); }
            }
            public int SubShardGeneration
            {
                get { return Invoker.CallNative<int>("SDKClass", "SubShardGeneration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubShardGeneration", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D AverageVertPosition
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "AverageVertPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AverageVertPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool AverageVertPositionIsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AverageVertPositionIsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AverageVertPositionIsValid", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D PanelSpaceStressPositionA
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "PanelSpaceStressPositionA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelSpaceStressPositionA", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D PanelSpaceStressPositionB
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "PanelSpaceStressPositionB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelSpaceStressPositionB", CallKind.ClassMember, m_classData, value); }
            }
            public bool StressPositionAIsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StressPositionAIsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StressPositionAIsValid", CallKind.ClassMember, m_classData, value); }
            }
            public bool StressPositionBIsValid
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StressPositionBIsValid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StressPositionBIsValid", CallKind.ClassMember, m_classData, value); }
            }
            public bool FlaggedForRemoval
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FlaggedForRemoval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlaggedForRemoval", CallKind.ClassMember, m_classData, value); }
            }
            public float PhysicsEntitySpawnedAtTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PhysicsEntitySpawnedAtTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhysicsEntitySpawnedAtTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity EntityHittingMe
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EntityHittingMe", CallKind.ClassMember, m_classData); }
            }
            public uint[] Neighbors
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Neighbors", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Neighbors", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CShatterGlassShardPhysics : CPhysicsProp
        {
            public CShatterGlassShardPhysics(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShatterGlassShardPhysics", "CShatterGlassShardPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShatterGlassShardPhysics(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShatterGlassShardPhysics", "CShatterGlassShardPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShatterGlassShardPhysics()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Debris
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Debris", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Debris", CallKind.ClassMember, m_classData, value); }
            }
            public uint ParentShard
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ParentShard", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentShard", CallKind.ClassMember, m_classData, value); }
            }
            public shard_model_desc_t ShardDesc
            {
                get { return Invoker.CallNative<shard_model_desc_t>("SDKClass", "ShardDesc", CallKind.ClassMember, m_classData); }
            }
            public CPhysicsProp Parent
            {
                get { return Invoker.CallNative<CPhysicsProp>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CShower : CModelPointEntity
        {
            public CShower(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShower", "CShower", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShower(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CShower", "CShower", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CShower()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CModelPointEntity Parent
            {
                get { return Invoker.CallNative<CModelPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSimpleMarkupVolumeTagged : CMarkupVolumeTagged
        {
            public CSimpleMarkupVolumeTagged(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleMarkupVolumeTagged", "CSimpleMarkupVolumeTagged", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleMarkupVolumeTagged(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleMarkupVolumeTagged", "CSimpleMarkupVolumeTagged", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleMarkupVolumeTagged()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMarkupVolumeTagged Parent
            {
                get { return Invoker.CallNative<CMarkupVolumeTagged>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSimpleSimTimer : ClassData
        {
            public CSimpleSimTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleSimTimer", "CSimpleSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleSimTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleSimTimer", "CSimpleSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleSimTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Next
            {
                get { return Invoker.CallNative<float>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Next", CallKind.ClassMember, m_classData, value); }
            }
            public uint WorldGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSimpleStopwatch : CStopwatchBase
        {
            public CSimpleStopwatch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleStopwatch", "CSimpleStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleStopwatch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimpleStopwatch", "CSimpleStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimpleStopwatch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CStopwatchBase Parent
            {
                get { return Invoker.CallNative<CStopwatchBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSimTimer : CSimpleSimTimer
        {
            public CSimTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimTimer", "CSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSimTimer", "CSimTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSimTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Interval
            {
                get { return Invoker.CallNative<float>("SDKClass", "Interval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interval", CallKind.ClassMember, m_classData, value); }
            }
            public CSimpleSimTimer Parent
            {
                get { return Invoker.CallNative<CSimpleSimTimer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSingleFrameUpdateNode : CLeafUpdateNode
        {
            public CSingleFrameUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSingleFrameUpdateNode", "CSingleFrameUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSingleFrameUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSingleFrameUpdateNode", "CSingleFrameUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSingleFrameUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CPoseHandle PoseCacheHandle
            {
                get { return Invoker.CallNative<CPoseHandle>("SDKClass", "PoseCacheHandle", CallKind.ClassMember, m_classData); }
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSingleplayRules : CGameRules
        {
            public CSingleplayRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSingleplayRules", "CSingleplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSingleplayRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSingleplayRules", "CSingleplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSingleplayRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool SinglePlayerGameEnding
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SinglePlayerGameEnding", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SinglePlayerGameEnding", CallKind.ClassMember, m_classData, value); }
            }
            public CGameRules Parent
            {
                get { return Invoker.CallNative<CGameRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSkeletonAnimationController : ISkeletonAnimationController
        {
            public CSkeletonAnimationController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkeletonAnimationController", "CSkeletonAnimationController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkeletonAnimationController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkeletonAnimationController", "CSkeletonAnimationController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkeletonAnimationController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] SkeletonInstance
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "SkeletonInstance", CallKind.ClassMember, m_classData); }
            }
            public ISkeletonAnimationController Parent
            {
                get { return Invoker.CallNative<ISkeletonAnimationController>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSkeletonInstance : CGameSceneNode
        {
            public CSkeletonInstance(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkeletonInstance", "CSkeletonInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkeletonInstance(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkeletonInstance", "CSkeletonInstance", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkeletonInstance()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CModelState ModelState
            {
                get { return Invoker.CallNative<CModelState>("SDKClass", "ModelState", CallKind.ClassMember, m_classData); }
            }
            public bool IsAnimationEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAnimationEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAnimationEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseParentRenderBounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseParentRenderBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseParentRenderBounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableSolidCollisionsForHierarchy
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableSolidCollisionsForHierarchy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableSolidCollisionsForHierarchy", CallKind.ClassMember, m_classData, value); }
            }
            public uint MaterialGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MaterialGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroup", CallKind.ClassMember, m_classData, value); }
            }
            public byte HitboxSet
            {
                get { return Invoker.CallNative<byte>("SDKClass", "HitboxSet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitboxSet", CallKind.ClassMember, m_classData, value); }
            }
            public CGameSceneNode Parent
            {
                get { return Invoker.CallNative<CGameSceneNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSkillDamage : ClassData
        {
            public CSkillDamage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillDamage", "CSkillDamage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillDamage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillDamage", "CSkillDamage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillDamage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSkillFloat Damage
            {
                get { return Invoker.CallNative<CSkillFloat>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
            }
            public float NPCDamageScalarVsNPC
            {
                get { return Invoker.CallNative<float>("SDKClass", "NPCDamageScalarVsNPC", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NPCDamageScalarVsNPC", CallKind.ClassMember, m_classData, value); }
            }
            public float PhysicsForceDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "PhysicsForceDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhysicsForceDamage", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSkillFloat : ClassData
        {
            public CSkillFloat(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillFloat", "CSkillFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillFloat(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillFloat", "CSkillFloat", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillFloat()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Value
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSkillInt : ClassData
        {
            public CSkillInt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillInt", "CSkillInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillInt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkillInt", "CSkillInt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkillInt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Value
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSkyboxReference : CBaseEntity
        {
            public CSkyboxReference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkyboxReference", "CSkyboxReference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkyboxReference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkyboxReference", "CSkyboxReference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkyboxReference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint WorldGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData, value); }
            }
            public CSkyCamera SkyCamera
            {
                get { return Invoker.CallNative<CSkyCamera>("SDKClass", "SkyCamera", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSkyCamera : CBaseEntity
        {
            public CSkyCamera(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkyCamera", "CSkyCamera", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkyCamera(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSkyCamera", "CSkyCamera", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSkyCamera()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public sky3dparams_t SkyboxData
            {
                get { return Invoker.CallNative<sky3dparams_t>("SDKClass", "SkyboxData", CallKind.ClassMember, m_classData); }
            }
            public uint SkyboxSlotToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SkyboxSlotToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyboxSlotToken", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAngles", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Next
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSlopeComponentUpdater : CAnimComponentUpdater
        {
            public CSlopeComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSlopeComponentUpdater", "CSlopeComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSlopeComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSlopeComponentUpdater", "CSlopeComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSlopeComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TraceDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceDistance", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle SlopeAngle
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeAngle", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle SlopeAngleFront
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeAngleFront", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle SlopeAngleSide
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeAngleSide", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle SlopeHeading
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeHeading", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle SlopeNormal
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeNormal", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle SlopeNormal_WorldSpace
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "SlopeNormal_WorldSpace", CallKind.ClassMember, m_classData); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSlowDownOnSlopesUpdateNode : CUnaryUpdateNode
        {
            public CSlowDownOnSlopesUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSlowDownOnSlopesUpdateNode", "CSlowDownOnSlopesUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSlowDownOnSlopesUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSlowDownOnSlopesUpdateNode", "CSlowDownOnSlopesUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSlowDownOnSlopesUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float SlowDownStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SlowDownStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlowDownStrength", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSMatchStats_t : CSPerRoundStats_t
        {
            public CSMatchStats_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSMatchStats_t", "CSMatchStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSMatchStats_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSMatchStats_t", "CSMatchStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSMatchStats_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EnemyKnifeKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "EnemyKnifeKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyKnifeKills", CallKind.ClassMember, m_classData, value); }
            }
            public int EnemyTaserKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "EnemyTaserKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemyTaserKills", CallKind.ClassMember, m_classData, value); }
            }
            public int Utility_Count
            {
                get { return Invoker.CallNative<int>("SDKClass", "Utility_Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Utility_Count", CallKind.ClassMember, m_classData, value); }
            }
            public int Utility_Successes
            {
                get { return Invoker.CallNative<int>("SDKClass", "Utility_Successes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Utility_Successes", CallKind.ClassMember, m_classData, value); }
            }
            public int Utility_Enemies
            {
                get { return Invoker.CallNative<int>("SDKClass", "Utility_Enemies", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Utility_Enemies", CallKind.ClassMember, m_classData, value); }
            }
            public int Flash_Count
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flash_Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flash_Count", CallKind.ClassMember, m_classData, value); }
            }
            public int Flash_Successes
            {
                get { return Invoker.CallNative<int>("SDKClass", "Flash_Successes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flash_Successes", CallKind.ClassMember, m_classData, value); }
            }
            public int HealthPointsRemovedTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthPointsRemovedTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthPointsRemovedTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int HealthPointsDealtTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthPointsDealtTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthPointsDealtTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int ShotsFiredTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShotsFiredTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShotsFiredTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int ShotsOnTargetTotal
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShotsOnTargetTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShotsOnTargetTotal", CallKind.ClassMember, m_classData, value); }
            }
            public int EntryCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntryCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntryCount", CallKind.ClassMember, m_classData, value); }
            }
            public int EntryWins
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntryWins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntryWins", CallKind.ClassMember, m_classData, value); }
            }
            public CSPerRoundStats_t Parent
            {
                get { return Invoker.CallNative<CSPerRoundStats_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSmokeGrenade : CBaseCSGrenade
        {
            public CSmokeGrenade(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmokeGrenade", "CSmokeGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmokeGrenade(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmokeGrenade", "CSmokeGrenade", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmokeGrenade()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseCSGrenade Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenade>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSmokeGrenadeProjectile : CBaseCSGrenadeProjectile
        {
            public CSmokeGrenadeProjectile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmokeGrenadeProjectile", "CSmokeGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmokeGrenadeProjectile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmokeGrenadeProjectile", "CSmokeGrenadeProjectile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmokeGrenadeProjectile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SmokeEffectTickBegin
            {
                get { return Invoker.CallNative<int>("SDKClass", "SmokeEffectTickBegin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmokeEffectTickBegin", CallKind.ClassMember, m_classData, value); }
            }
            public bool DidSmokeEffect
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DidSmokeEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DidSmokeEffect", CallKind.ClassMember, m_classData, value); }
            }
            public int RandomSeed
            {
                get { return Invoker.CallNative<int>("SDKClass", "RandomSeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomSeed", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SmokeColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SmokeColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmokeColor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SmokeDetonationPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SmokeDetonationPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmokeDetonationPos", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] VoxelFrameData
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "VoxelFrameData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoxelFrameData", CallKind.ClassMember, m_classData, value); }
            }
            public int VoxelFrameDataSize
            {
                get { return Invoker.CallNative<int>("SDKClass", "VoxelFrameDataSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoxelFrameDataSize", CallKind.ClassMember, m_classData, value); }
            }
            public int VoxelUpdate
            {
                get { return Invoker.CallNative<int>("SDKClass", "VoxelUpdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VoxelUpdate", CallKind.ClassMember, m_classData, value); }
            }
            public float LastBounce
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastBounce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastBounce", CallKind.ClassMember, m_classData, value); }
            }
            public float FllastSimulationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FllastSimulationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FllastSimulationTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExplodeFromInferno
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExplodeFromInferno", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExplodeFromInferno", CallKind.ClassMember, m_classData, value); }
            }
            public bool DidGroundScorch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DidGroundScorch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DidGroundScorch", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseCSGrenadeProjectile Parent
            {
                get { return Invoker.CallNative<CBaseCSGrenadeProjectile>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSmoothFunc : ClassData
        {
            public CSmoothFunc(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmoothFunc", "CSmoothFunc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmoothFunc(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSmoothFunc", "CSmoothFunc", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSmoothFunc()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float SmoothAmplitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "SmoothAmplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothAmplitude", CallKind.ClassMember, m_classData, value); }
            }
            public float SmoothBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "SmoothBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothBias", CallKind.ClassMember, m_classData, value); }
            }
            public float SmoothDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "SmoothDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float SmoothRemainingTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SmoothRemainingTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothRemainingTime", CallKind.ClassMember, m_classData, value); }
            }
            public int SmoothDir
            {
                get { return Invoker.CallNative<int>("SDKClass", "SmoothDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothDir", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSolveIKChainUpdateNode : CUnaryUpdateNode
        {
            public CSolveIKChainUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSolveIKChainUpdateNode", "CSolveIKChainUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSolveIKChainUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSolveIKChainUpdateNode", "CSolveIKChainUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSolveIKChainUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SolveIKChainPoseOpFixedSettings_t OpFixedData
            {
                get { return Invoker.CallNative<SolveIKChainPoseOpFixedSettings_t>("SDKClass", "OpFixedData", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSolveIKTargetHandle_t : ClassData
        {
            public CSolveIKTargetHandle_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSolveIKTargetHandle_t", "CSolveIKTargetHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSolveIKTargetHandle_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSolveIKTargetHandle_t", "CSolveIKTargetHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSolveIKTargetHandle_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle PositionHandle
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "PositionHandle", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle OrientationHandle
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "OrientationHandle", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionLimitSchema : CSosGroupActionSchema
        {
            public CSosGroupActionLimitSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionLimitSchema", "CSosGroupActionLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionLimitSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionLimitSchema", "CSosGroupActionLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionLimitSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MaxCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint StopType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "StopType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopType", CallKind.ClassMember, m_classData, value); }
            }
            public uint SortType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SortType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortType", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionMemberCountEnvelopeSchema : CSosGroupActionSchema
        {
            public CSosGroupActionMemberCountEnvelopeSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionMemberCountEnvelopeSchema", "CSosGroupActionMemberCountEnvelopeSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionMemberCountEnvelopeSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionMemberCountEnvelopeSchema", "CSosGroupActionMemberCountEnvelopeSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionMemberCountEnvelopeSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BaseCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BaseCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseCount", CallKind.ClassMember, m_classData, value); }
            }
            public int TargetCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetCount", CallKind.ClassMember, m_classData, value); }
            }
            public float BaseValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "BaseValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseValue", CallKind.ClassMember, m_classData, value); }
            }
            public float TargetValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "TargetValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetValue", CallKind.ClassMember, m_classData, value); }
            }
            public float Attack
            {
                get { return Invoker.CallNative<float>("SDKClass", "Attack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Attack", CallKind.ClassMember, m_classData, value); }
            }
            public float Decay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Decay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Decay", CallKind.ClassMember, m_classData, value); }
            }
            public string ResultVarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ResultVarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResultVarName", CallKind.ClassMember, m_classData, value); }
            }
            public bool SaveToGroup
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SaveToGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaveToGroup", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionSchema : ClassData
        {
            public CSosGroupActionSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSchema", "CSosGroupActionSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSchema", "CSosGroupActionSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint ActionType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ActionType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActionType", CallKind.ClassMember, m_classData, value); }
            }
            public uint ActionInstanceType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ActionInstanceType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActionInstanceType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSosGroupActionSetSoundeventParameterSchema : CSosGroupActionSchema
        {
            public CSosGroupActionSetSoundeventParameterSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSetSoundeventParameterSchema", "CSosGroupActionSetSoundeventParameterSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSetSoundeventParameterSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSetSoundeventParameterSchema", "CSosGroupActionSetSoundeventParameterSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSetSoundeventParameterSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MaxCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCount", CallKind.ClassMember, m_classData, value); }
            }
            public float MinValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinValue", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxValue", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarName", CallKind.ClassMember, m_classData, value); }
            }
            public uint SortType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SortType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SortType", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionSoundeventClusterSchema : CSosGroupActionSchema
        {
            public CSosGroupActionSoundeventClusterSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventClusterSchema", "CSosGroupActionSoundeventClusterSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventClusterSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventClusterSchema", "CSosGroupActionSoundeventClusterSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventClusterSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MinNearby
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinNearby", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinNearby", CallKind.ClassMember, m_classData, value); }
            }
            public float ClusterEpsilon
            {
                get { return Invoker.CallNative<float>("SDKClass", "ClusterEpsilon", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClusterEpsilon", CallKind.ClassMember, m_classData, value); }
            }
            public string ShouldPlayOpvar
            {
                get { return Invoker.CallNative<string>("SDKClass", "ShouldPlayOpvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldPlayOpvar", CallKind.ClassMember, m_classData, value); }
            }
            public string ShouldPlayClusterChild
            {
                get { return Invoker.CallNative<string>("SDKClass", "ShouldPlayClusterChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldPlayClusterChild", CallKind.ClassMember, m_classData, value); }
            }
            public string ClusterSizeOpvar
            {
                get { return Invoker.CallNative<string>("SDKClass", "ClusterSizeOpvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClusterSizeOpvar", CallKind.ClassMember, m_classData, value); }
            }
            public string GroupBoundingBoxMinsOpvar
            {
                get { return Invoker.CallNative<string>("SDKClass", "GroupBoundingBoxMinsOpvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupBoundingBoxMinsOpvar", CallKind.ClassMember, m_classData, value); }
            }
            public string GroupBoundingBoxMaxsOpvar
            {
                get { return Invoker.CallNative<string>("SDKClass", "GroupBoundingBoxMaxsOpvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroupBoundingBoxMaxsOpvar", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionSoundeventCountSchema : CSosGroupActionSchema
        {
            public CSosGroupActionSoundeventCountSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventCountSchema", "CSosGroupActionSoundeventCountSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventCountSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventCountSchema", "CSosGroupActionSoundeventCountSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventCountSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ExcludeStoppedSounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludeStoppedSounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeStoppedSounds", CallKind.ClassMember, m_classData, value); }
            }
            public string StrCountKeyName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrCountKeyName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrCountKeyName", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionSoundeventMinMaxValuesSchema : CSosGroupActionSchema
        {
            public CSosGroupActionSoundeventMinMaxValuesSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventMinMaxValuesSchema", "CSosGroupActionSoundeventMinMaxValuesSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventMinMaxValuesSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventMinMaxValuesSchema", "CSosGroupActionSoundeventMinMaxValuesSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventMinMaxValuesSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrQueryPublicFieldName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrQueryPublicFieldName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrQueryPublicFieldName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrDelayPublicFieldName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrDelayPublicFieldName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrDelayPublicFieldName", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExcludeStoppedSounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludeStoppedSounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeStoppedSounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExcludeDelayedSounds
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludeDelayedSounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeDelayedSounds", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExcludeSoundsBelowThreshold
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludeSoundsBelowThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeSoundsBelowThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float ExcludeSoundsMinThresholdValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExcludeSoundsMinThresholdValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeSoundsMinThresholdValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool ExcludSoundsAboveThreshold
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ExcludSoundsAboveThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludSoundsAboveThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float ExcludeSoundsMaxThresholdValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExcludeSoundsMaxThresholdValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExcludeSoundsMaxThresholdValue", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMinValueName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMinValueName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMinValueName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrMaxValueName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMaxValueName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMaxValueName", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionSoundeventPrioritySchema : CSosGroupActionSchema
        {
            public CSosGroupActionSoundeventPrioritySchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventPrioritySchema", "CSosGroupActionSoundeventPrioritySchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventPrioritySchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionSoundeventPrioritySchema", "CSosGroupActionSoundeventPrioritySchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionSoundeventPrioritySchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string PriorityValue
            {
                get { return Invoker.CallNative<string>("SDKClass", "PriorityValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PriorityValue", CallKind.ClassMember, m_classData, value); }
            }
            public string PriorityVolumeScalar
            {
                get { return Invoker.CallNative<string>("SDKClass", "PriorityVolumeScalar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PriorityVolumeScalar", CallKind.ClassMember, m_classData, value); }
            }
            public string PriorityContributeButDontRead
            {
                get { return Invoker.CallNative<string>("SDKClass", "PriorityContributeButDontRead", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PriorityContributeButDontRead", CallKind.ClassMember, m_classData, value); }
            }
            public string PriorityReadButDontContribute
            {
                get { return Invoker.CallNative<string>("SDKClass", "PriorityReadButDontContribute", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PriorityReadButDontContribute", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionTimeBlockLimitSchema : CSosGroupActionSchema
        {
            public CSosGroupActionTimeBlockLimitSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionTimeBlockLimitSchema", "CSosGroupActionTimeBlockLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionTimeBlockLimitSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionTimeBlockLimitSchema", "CSosGroupActionTimeBlockLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionTimeBlockLimitSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int MaxCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "MaxCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxCount", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDuration", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupActionTimeLimitSchema : CSosGroupActionSchema
        {
            public CSosGroupActionTimeLimitSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionTimeLimitSchema", "CSosGroupActionTimeLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionTimeLimitSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupActionTimeLimitSchema", "CSosGroupActionTimeLimitSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupActionTimeLimitSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MaxDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDuration", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupActionSchema Parent
            {
                get { return Invoker.CallNative<CSosGroupActionSchema>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosGroupBranchPattern : ClassData
        {
            public CSosGroupBranchPattern(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupBranchPattern", "CSosGroupBranchPattern", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupBranchPattern(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupBranchPattern", "CSosGroupBranchPattern", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupBranchPattern()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool MatchEventName
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchEventName", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchEventSubString
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchEventSubString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchEventSubString", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchEntIndex
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchEntIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchEntIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchOpvar
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchOpvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchOpvar", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchString
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchString", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSosGroupMatchPattern : CSosGroupBranchPattern
        {
            public CSosGroupMatchPattern(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupMatchPattern", "CSosGroupMatchPattern", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupMatchPattern(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosGroupMatchPattern", "CSosGroupMatchPattern", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosGroupMatchPattern()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MatchSoundEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MatchSoundEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchSoundEventName", CallKind.ClassMember, m_classData, value); }
            }
            public string MatchSoundEventSubString
            {
                get { return Invoker.CallNative<string>("SDKClass", "MatchSoundEventSubString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchSoundEventSubString", CallKind.ClassMember, m_classData, value); }
            }
            public float EntIndex
            {
                get { return Invoker.CallNative<float>("SDKClass", "EntIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float Opvar
            {
                get { return Invoker.CallNative<float>("SDKClass", "Opvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Opvar", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarString
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarString", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupBranchPattern Parent
            {
                get { return Invoker.CallNative<CSosGroupBranchPattern>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSosSoundEventGroupListSchema : ClassData
        {
            public CSosSoundEventGroupListSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosSoundEventGroupListSchema", "CSosSoundEventGroupListSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosSoundEventGroupListSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosSoundEventGroupListSchema", "CSosSoundEventGroupListSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosSoundEventGroupListSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CSosSoundEventGroupSchema : ClassData
        {
            public CSosSoundEventGroupSchema(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosSoundEventGroupSchema", "CSosSoundEventGroupSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosSoundEventGroupSchema(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSosSoundEventGroupSchema", "CSosSoundEventGroupSchema", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSosSoundEventGroupSchema()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsBlocking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsBlocking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsBlocking", CallKind.ClassMember, m_classData, value); }
            }
            public int BlockMaxCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BlockMaxCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockMaxCount", CallKind.ClassMember, m_classData, value); }
            }
            public bool InvertMatch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InvertMatch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InvertMatch", CallKind.ClassMember, m_classData, value); }
            }
            public CSosGroupMatchPattern MatchPattern
            {
                get { return Invoker.CallNative<CSosGroupMatchPattern>("SDKClass", "MatchPattern", CallKind.ClassMember, m_classData); }
            }
            public CSosGroupBranchPattern BranchPattern
            {
                get { return Invoker.CallNative<CSosGroupBranchPattern>("SDKClass", "BranchPattern", CallKind.ClassMember, m_classData); }
            }
            public float LifeSpanTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LifeSpanTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LifeSpanTime", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Actions
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Actions", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundAreaEntityBase : CBaseEntity
        {
            public CSoundAreaEntityBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntityBase", "CSoundAreaEntityBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntityBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntityBase", "CSoundAreaEntityBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntityBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundAreaType
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundAreaType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundAreaType", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Pos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Pos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pos", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundAreaEntityOrientedBox : CSoundAreaEntityBase
        {
            public CSoundAreaEntityOrientedBox(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntityOrientedBox", "CSoundAreaEntityOrientedBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntityOrientedBox(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntityOrientedBox", "CSoundAreaEntityOrientedBox", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntityOrientedBox()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Min
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Max
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundAreaEntityBase Parent
            {
                get { return Invoker.CallNative<CSoundAreaEntityBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundAreaEntitySphere : CSoundAreaEntityBase
        {
            public CSoundAreaEntitySphere(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntitySphere", "CSoundAreaEntitySphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntitySphere(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundAreaEntitySphere", "CSoundAreaEntitySphere", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundAreaEntitySphere()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundAreaEntityBase Parent
            {
                get { return Invoker.CallNative<CSoundAreaEntityBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundContainerReference : ClassData
        {
            public CSoundContainerReference(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundContainerReference", "CSoundContainerReference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundContainerReference(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundContainerReference", "CSoundContainerReference", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundContainerReference()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool UseReference
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseReference", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Sound
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Sound", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundContainerReferenceArray : ClassData
        {
            public CSoundContainerReferenceArray(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundContainerReferenceArray", "CSoundContainerReferenceArray", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundContainerReferenceArray(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundContainerReferenceArray", "CSoundContainerReferenceArray", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundContainerReferenceArray()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool UseReference
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseReference", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseReference", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSoundEnvelope : ClassData
        {
            public CSoundEnvelope(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEnvelope", "CSoundEnvelope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEnvelope(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEnvelope", "CSoundEnvelope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEnvelope()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Current
            {
                get { return Invoker.CallNative<float>("SDKClass", "Current", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Current", CallKind.ClassMember, m_classData, value); }
            }
            public float Target
            {
                get { return Invoker.CallNative<float>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public float Rate
            {
                get { return Invoker.CallNative<float>("SDKClass", "Rate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Rate", CallKind.ClassMember, m_classData, value); }
            }
            public bool Forceupdate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Forceupdate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Forceupdate", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSoundEventAABBEntity : CSoundEventEntity
        {
            public CSoundEventAABBEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventAABBEntity", "CSoundEventAABBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventAABBEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventAABBEntity", "CSoundEventAABBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventAABBEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Mins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Mins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Maxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Maxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxs", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundEventEntity Parent
            {
                get { return Invoker.CallNative<CSoundEventEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventEntity : CBaseEntity
        {
            public CSoundEventEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventEntity", "CSoundEventEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventEntity", "CSoundEventEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool StartOnSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StartOnSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartOnSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public bool ToLocalPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ToLocalPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToLocalPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool StopOnNew
            {
                get { return Invoker.CallNative<bool>("SDKClass", "StopOnNew", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StopOnNew", CallKind.ClassMember, m_classData, value); }
            }
            public bool SaveRestore
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SaveRestore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SaveRestore", CallKind.ClassMember, m_classData, value); }
            }
            public bool SavedIsPlaying
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SavedIsPlaying", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SavedIsPlaying", CallKind.ClassMember, m_classData, value); }
            }
            public float SavedElapsedTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SavedElapsedTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SavedElapsedTime", CallKind.ClassMember, m_classData, value); }
            }
            public string SourceEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnSoundFinished
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnSoundFinished", CallKind.ClassMember, m_classData); }
            }
            public float ClientCullRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ClientCullRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientCullRadius", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Source
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Source", CallKind.ClassMember, m_classData); }
            }
            public int EntityIndexSelection
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntityIndexSelection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityIndexSelection", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventEntityAlias_snd_event_point : CSoundEventEntity
        {
            public CSoundEventEntityAlias_snd_event_point(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventEntityAlias_snd_event_point", "CSoundEventEntityAlias_snd_event_point", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventEntityAlias_snd_event_point(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventEntityAlias_snd_event_point", "CSoundEventEntityAlias_snd_event_point", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventEntityAlias_snd_event_point()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundEventEntity Parent
            {
                get { return Invoker.CallNative<CSoundEventEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventMetaData : ClassData
        {
            public CSoundEventMetaData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventMetaData", "CSoundEventMetaData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventMetaData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventMetaData", "CSoundEventMetaData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventMetaData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CSoundEventOBBEntity : CSoundEventEntity
        {
            public CSoundEventOBBEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventOBBEntity", "CSoundEventOBBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventOBBEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventOBBEntity", "CSoundEventOBBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventOBBEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Mins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Mins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Maxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Maxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxs", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundEventEntity Parent
            {
                get { return Invoker.CallNative<CSoundEventEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventParameter : CBaseEntity
        {
            public CSoundEventParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventParameter", "CSoundEventParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventParameter", "CSoundEventParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ParamName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParamName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamName", CallKind.ClassMember, m_classData, value); }
            }
            public float FloatValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "FloatValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FloatValue", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventPathCornerEntity : CSoundEventEntity
        {
            public CSoundEventPathCornerEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventPathCornerEntity", "CSoundEventPathCornerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventPathCornerEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventPathCornerEntity", "CSoundEventPathCornerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventPathCornerEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string PathCorner
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathCorner", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathCorner", CallKind.ClassMember, m_classData, value); }
            }
            public int CountMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "CountMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CountMax", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData, value); }
            }
            public float DistMaxSqr
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistMaxSqr", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistMaxSqr", CallKind.ClassMember, m_classData, value); }
            }
            public float DotProductMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DotProductMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DotProductMax", CallKind.ClassMember, m_classData, value); }
            }
            public bool Playing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Playing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Playing", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundEventEntity Parent
            {
                get { return Invoker.CallNative<CSoundEventEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundEventSphereEntity : CSoundEventEntity
        {
            public CSoundEventSphereEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventSphereEntity", "CSoundEventSphereEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventSphereEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundEventSphereEntity", "CSoundEventSphereEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundEventSphereEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundEventEntity Parent
            {
                get { return Invoker.CallNative<CSoundEventEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundInfoHeader : ClassData
        {
            public CSoundInfoHeader(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundInfoHeader", "CSoundInfoHeader", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundInfoHeader(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundInfoHeader", "CSoundInfoHeader", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundInfoHeader()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CSoundOpvarSetAABBEntity : CSoundOpvarSetPointEntity
        {
            public CSoundOpvarSetAABBEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetAABBEntity", "CSoundOpvarSetAABBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetAABBEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetAABBEntity", "CSoundOpvarSetAABBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetAABBEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DistanceInnerMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceInnerMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInnerMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceInnerMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceInnerMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceInnerMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceOuterMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceOuterMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceOuterMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public int AABBDirection
            {
                get { return Invoker.CallNative<int>("SDKClass", "AABBDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AABBDirection", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D InnerMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InnerMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D InnerMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "InnerMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OuterMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OuterMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OuterMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OuterMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundOpvarSetPointEntity Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetAutoRoomEntity : CSoundOpvarSetPointEntity
        {
            public CSoundOpvarSetAutoRoomEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetAutoRoomEntity", "CSoundOpvarSetAutoRoomEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetAutoRoomEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetAutoRoomEntity", "CSoundOpvarSetAutoRoomEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetAutoRoomEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Size
            {
                get { return Invoker.CallNative<float>("SDKClass", "Size", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Size", CallKind.ClassMember, m_classData, value); }
            }
            public float HeightTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "HeightTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeightTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public float SizeSqr
            {
                get { return Invoker.CallNative<float>("SDKClass", "SizeSqr", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeSqr", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundOpvarSetPointEntity Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetEntity : CBaseEntity
        {
            public CSoundOpvarSetEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetEntity", "CSoundOpvarSetEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetEntity", "CSoundOpvarSetEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StackName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackName", CallKind.ClassMember, m_classData, value); }
            }
            public string OperatorName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OperatorName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OperatorName", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarName", CallKind.ClassMember, m_classData, value); }
            }
            public int OpvarType
            {
                get { return Invoker.CallNative<int>("SDKClass", "OpvarType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarType", CallKind.ClassMember, m_classData, value); }
            }
            public int OpvarIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "OpvarIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float OpvarValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "OpvarValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarValue", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarValueString
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarValueString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarValueString", CallKind.ClassMember, m_classData, value); }
            }
            public bool SetOnSpawn
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SetOnSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SetOnSpawn", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetOBBEntity : CSoundOpvarSetAABBEntity
        {
            public CSoundOpvarSetOBBEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetOBBEntity", "CSoundOpvarSetOBBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetOBBEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetOBBEntity", "CSoundOpvarSetOBBEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetOBBEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundOpvarSetAABBEntity Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetAABBEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetOBBWindEntity : CSoundOpvarSetPointBase
        {
            public CSoundOpvarSetOBBWindEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetOBBWindEntity", "CSoundOpvarSetOBBWindEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetOBBWindEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetOBBWindEntity", "CSoundOpvarSetOBBWindEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetOBBWindEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Mins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Mins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Maxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Maxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxs", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceMins
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceMins", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMins", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DistanceMaxs
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DistanceMaxs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMaxs", CallKind.ClassMember, m_classData, value); }
            }
            public float WindMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindMin", CallKind.ClassMember, m_classData, value); }
            }
            public float WindMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindMax", CallKind.ClassMember, m_classData, value); }
            }
            public float WindMapMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindMapMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindMapMin", CallKind.ClassMember, m_classData, value); }
            }
            public float WindMapMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindMapMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindMapMax", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundOpvarSetPointBase Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetPointBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetPathCornerEntity : CSoundOpvarSetPointEntity
        {
            public CSoundOpvarSetPathCornerEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPathCornerEntity", "CSoundOpvarSetPathCornerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPathCornerEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPathCornerEntity", "CSoundOpvarSetPathCornerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPathCornerEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DistMinSqr
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistMinSqr", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistMinSqr", CallKind.ClassMember, m_classData, value); }
            }
            public float DistMaxSqr
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistMaxSqr", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistMaxSqr", CallKind.ClassMember, m_classData, value); }
            }
            public string PathCornerEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathCornerEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathCornerEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundOpvarSetPointEntity Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetPointBase : CBaseEntity
        {
            public CSoundOpvarSetPointBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPointBase", "CSoundOpvarSetPointBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPointBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPointBase", "CSoundOpvarSetPointBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPointBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Disabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Source
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Source", CallKind.ClassMember, m_classData); }
            }
            public string SourceEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastPosition", CallKind.ClassMember, m_classData, value); }
            }
            public string StackName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackName", CallKind.ClassMember, m_classData, value); }
            }
            public string OperatorName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OperatorName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OperatorName", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarName", CallKind.ClassMember, m_classData, value); }
            }
            public int OpvarIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "OpvarIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseAutoCompare
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseAutoCompare", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseAutoCompare", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundOpvarSetPointEntity : CSoundOpvarSetPointBase
        {
            public CSoundOpvarSetPointEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPointEntity", "CSoundOpvarSetPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPointEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundOpvarSetPointEntity", "CSoundOpvarSetPointEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundOpvarSetPointEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnEnter
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEnter", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnExit
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnExit", CallKind.ClassMember, m_classData); }
            }
            public bool AutoDisable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AutoDisable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoDisable", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMax", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMapMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMapMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMapMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceMapMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceMapMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceMapMax", CallKind.ClassMember, m_classData, value); }
            }
            public float OcclusionRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "OcclusionRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OcclusionRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float OcclusionMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "OcclusionMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OcclusionMin", CallKind.ClassMember, m_classData, value); }
            }
            public float OcclusionMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "OcclusionMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OcclusionMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ValSetOnDisable
            {
                get { return Invoker.CallNative<float>("SDKClass", "ValSetOnDisable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValSetOnDisable", CallKind.ClassMember, m_classData, value); }
            }
            public bool SetValueOnDisable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SetValueOnDisable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SetValueOnDisable", CallKind.ClassMember, m_classData, value); }
            }
            public bool Reloading
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Reloading", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Reloading", CallKind.ClassMember, m_classData, value); }
            }
            public int SimulationMode
            {
                get { return Invoker.CallNative<int>("SDKClass", "SimulationMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimulationMode", CallKind.ClassMember, m_classData, value); }
            }
            public int VisibilitySamples
            {
                get { return Invoker.CallNative<int>("SDKClass", "VisibilitySamples", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisibilitySamples", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DynamicProxyPoint
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DynamicProxyPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicProxyPoint", CallKind.ClassMember, m_classData, value); }
            }
            public float DynamicMaximumOcclusion
            {
                get { return Invoker.CallNative<float>("SDKClass", "DynamicMaximumOcclusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicMaximumOcclusion", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance DynamicEntity
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "DynamicEntity", CallKind.ClassMember, m_classData); }
            }
            public string DynamicEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DynamicEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public float PathingDistanceNormFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "PathingDistanceNormFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathingDistanceNormFactor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PathingSourcePos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PathingSourcePos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathingSourcePos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PathingListenerPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PathingListenerPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathingListenerPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PathingDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PathingDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathingDirection", CallKind.ClassMember, m_classData, value); }
            }
            public int PathingSourceIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "PathingSourceIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathingSourceIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundOpvarSetPointBase Parent
            {
                get { return Invoker.CallNative<CSoundOpvarSetPointBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSoundPatch : ClassData
        {
            public CSoundPatch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundPatch", "CSoundPatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundPatch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundPatch", "CSoundPatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundPatch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundEnvelope Pitch
            {
                get { return Invoker.CallNative<CSoundEnvelope>("SDKClass", "Pitch", CallKind.ClassMember, m_classData); }
            }
            public CSoundEnvelope Volume
            {
                get { return Invoker.CallNative<CSoundEnvelope>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
            }
            public float ShutdownTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShutdownTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShutdownTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTime", CallKind.ClassMember, m_classData, value); }
            }
            public string SoundScriptName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundScriptName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundScriptName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Ent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Ent", CallKind.ClassMember, m_classData); }
            }
            public int SoundEntityIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundEntityIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundEntityIndex", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SoundOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SoundOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public int IsPlaying
            {
                get { return Invoker.CallNative<int>("SDKClass", "IsPlaying", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPlaying", CallKind.ClassMember, m_classData, value); }
            }
            public CCopyRecipientFilter Filter
            {
                get { return Invoker.CallNative<CCopyRecipientFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public float CloseCaptionDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "CloseCaptionDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CloseCaptionDuration", CallKind.ClassMember, m_classData, value); }
            }
            public bool UpdatedSoundOrigin
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UpdatedSoundOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpdatedSoundOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public string ClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClassName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSoundStackSave : CLogicalEntity
        {
            public CSoundStackSave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundStackSave", "CSoundStackSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundStackSave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSoundStackSave", "CSoundStackSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSoundStackSave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StackName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackName", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSpeedScaleUpdateNode : CUnaryUpdateNode
        {
            public CSpeedScaleUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpeedScaleUpdateNode", "CSpeedScaleUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpeedScaleUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpeedScaleUpdateNode", "CSpeedScaleUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpeedScaleUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle ParamIndex
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "ParamIndex", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSPerRoundStats_t : ClassData
        {
            public CSPerRoundStats_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSPerRoundStats_t", "CSPerRoundStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSPerRoundStats_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSPerRoundStats_t", "CSPerRoundStats_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSPerRoundStats_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Kills
            {
                get { return Invoker.CallNative<int>("SDKClass", "Kills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Kills", CallKind.ClassMember, m_classData, value); }
            }
            public int Deaths
            {
                get { return Invoker.CallNative<int>("SDKClass", "Deaths", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Deaths", CallKind.ClassMember, m_classData, value); }
            }
            public int Assists
            {
                get { return Invoker.CallNative<int>("SDKClass", "Assists", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Assists", CallKind.ClassMember, m_classData, value); }
            }
            public int Damage
            {
                get { return Invoker.CallNative<int>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public int EquipmentValue
            {
                get { return Invoker.CallNative<int>("SDKClass", "EquipmentValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EquipmentValue", CallKind.ClassMember, m_classData, value); }
            }
            public int MoneySaved
            {
                get { return Invoker.CallNative<int>("SDKClass", "MoneySaved", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoneySaved", CallKind.ClassMember, m_classData, value); }
            }
            public int KillReward
            {
                get { return Invoker.CallNative<int>("SDKClass", "KillReward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KillReward", CallKind.ClassMember, m_classData, value); }
            }
            public int LiveTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "LiveTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LiveTime", CallKind.ClassMember, m_classData, value); }
            }
            public int HeadShotKills
            {
                get { return Invoker.CallNative<int>("SDKClass", "HeadShotKills", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeadShotKills", CallKind.ClassMember, m_classData, value); }
            }
            public int Objective
            {
                get { return Invoker.CallNative<int>("SDKClass", "Objective", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Objective", CallKind.ClassMember, m_classData, value); }
            }
            public int CashEarned
            {
                get { return Invoker.CallNative<int>("SDKClass", "CashEarned", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CashEarned", CallKind.ClassMember, m_classData, value); }
            }
            public int UtilityDamage
            {
                get { return Invoker.CallNative<int>("SDKClass", "UtilityDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UtilityDamage", CallKind.ClassMember, m_classData, value); }
            }
            public int EnemiesFlashed
            {
                get { return Invoker.CallNative<int>("SDKClass", "EnemiesFlashed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnemiesFlashed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSpinUpdateBase : CParticleFunctionOperator
        {
            public CSpinUpdateBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpinUpdateBase", "CSpinUpdateBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpinUpdateBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpinUpdateBase", "CSpinUpdateBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpinUpdateBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleFunctionOperator Parent
            {
                get { return Invoker.CallNative<CParticleFunctionOperator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSplineConstraint : CPhysConstraint
        {
            public CSplineConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSplineConstraint", "CSplineConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSplineConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSplineConstraint", "CSplineConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSplineConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D AnchorOffsetRestore
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AnchorOffsetRestore", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnchorOffsetRestore", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity SplineEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "SplineEntity", CallKind.ClassMember, m_classData); }
            }
            public bool EnableLateralConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLateralConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLateralConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableVerticalConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableVerticalConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableVerticalConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableAngularConstraint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableAngularConstraint", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLimit", CallKind.ClassMember, m_classData, value); }
            }
            public bool FireEventsOnPath
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FireEventsOnPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireEventsOnPath", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float LinarDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinarDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinarDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PreSolveAnchorPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PreSolveAnchorPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreSolveAnchorPos", CallKind.ClassMember, m_classData, value); }
            }
            public CPhysConstraint Parent
            {
                get { return Invoker.CallNative<CPhysConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSpotlightEnd : CBaseModelEntity
        {
            public CSpotlightEnd(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpotlightEnd", "CSpotlightEnd", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpotlightEnd(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpotlightEnd", "CSpotlightEnd", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpotlightEnd()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float LightScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "LightScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightScale", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpotlightDir
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpotlightDir", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightDir", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SpotlightOrg
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SpotlightOrg", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpotlightOrg", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSprite : CBaseModelEntity
        {
            public CSprite(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSprite", "CSprite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSprite(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSprite", "CSprite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSprite()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity AttachedToEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "AttachedToEntity", CallKind.ClassMember, m_classData); }
            }
            public float SpriteFramerate
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpriteFramerate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteFramerate", CallKind.ClassMember, m_classData, value); }
            }
            public float Frame
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frame", CallKind.ClassMember, m_classData, value); }
            }
            public float DieTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DieTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DieTime", CallKind.ClassMember, m_classData, value); }
            }
            public uint Brightness
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float SpriteScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpriteScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ScaleDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "ScaleDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleDuration", CallKind.ClassMember, m_classData, value); }
            }
            public bool WorldSpaceScale
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WorldSpaceScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldSpaceScale", CallKind.ClassMember, m_classData, value); }
            }
            public float GlowProxySize
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlowProxySize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlowProxySize", CallKind.ClassMember, m_classData, value); }
            }
            public float HDRColorScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData, value); }
            }
            public float LastTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTime", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFrame", CallKind.ClassMember, m_classData, value); }
            }
            public float StartScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartScale", CallKind.ClassMember, m_classData, value); }
            }
            public float DestScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DestScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ScaleTimeStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "ScaleTimeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleTimeStart", CallKind.ClassMember, m_classData, value); }
            }
            public int StartBrightness
            {
                get { return Invoker.CallNative<int>("SDKClass", "StartBrightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartBrightness", CallKind.ClassMember, m_classData, value); }
            }
            public int DestBrightness
            {
                get { return Invoker.CallNative<int>("SDKClass", "DestBrightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestBrightness", CallKind.ClassMember, m_classData, value); }
            }
            public float BrightnessTimeStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "BrightnessTimeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BrightnessTimeStart", CallKind.ClassMember, m_classData, value); }
            }
            public int SpriteWidth
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpriteWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteWidth", CallKind.ClassMember, m_classData, value); }
            }
            public int SpriteHeight
            {
                get { return Invoker.CallNative<int>("SDKClass", "SpriteHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpriteHeight", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSpriteAlias_env_glow : CSprite
        {
            public CSpriteAlias_env_glow(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpriteAlias_env_glow", "CSpriteAlias_env_glow", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpriteAlias_env_glow(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpriteAlias_env_glow", "CSpriteAlias_env_glow", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpriteAlias_env_glow()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSprite Parent
            {
                get { return Invoker.CallNative<CSprite>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSpriteOriented : CSprite
        {
            public CSpriteOriented(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpriteOriented", "CSpriteOriented", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpriteOriented(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSpriteOriented", "CSpriteOriented", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSpriteOriented()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSprite Parent
            {
                get { return Invoker.CallNative<CSprite>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSSDSEndFrameViewInfo : ClassData
        {
            public CSSDSEndFrameViewInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSEndFrameViewInfo", "CSSDSEndFrameViewInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSEndFrameViewInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSEndFrameViewInfo", "CSSDSEndFrameViewInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSEndFrameViewInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong ViewId
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ViewId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewId", CallKind.ClassMember, m_classData, value); }
            }
            public string ViewName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ViewName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSSDSMsg_EndFrame : ClassData
        {
            public CSSDSMsg_EndFrame(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_EndFrame", "CSSDSMsg_EndFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_EndFrame(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_EndFrame", "CSSDSMsg_EndFrame", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_EndFrame()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CSSDSMsg_LayerBase : ClassData
        {
            public CSSDSMsg_LayerBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_LayerBase", "CSSDSMsg_LayerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_LayerBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_LayerBase", "CSSDSMsg_LayerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_LayerBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SceneViewId_t ViewId
            {
                get { return Invoker.CallNative<SceneViewId_t>("SDKClass", "ViewId", CallKind.ClassMember, m_classData); }
            }
            public string ViewName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ViewName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewName", CallKind.ClassMember, m_classData, value); }
            }
            public ulong LayerId
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "LayerId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayerId", CallKind.ClassMember, m_classData, value); }
            }
            public string LayerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "LayerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayerName", CallKind.ClassMember, m_classData, value); }
            }
            public string DisplayText
            {
                get { return Invoker.CallNative<string>("SDKClass", "DisplayText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisplayText", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSSDSMsg_PostLayer : CSSDSMsg_LayerBase
        {
            public CSSDSMsg_PostLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_PostLayer", "CSSDSMsg_PostLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_PostLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_PostLayer", "CSSDSMsg_PostLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_PostLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSSDSMsg_LayerBase Parent
            {
                get { return Invoker.CallNative<CSSDSMsg_LayerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSSDSMsg_PreLayer : CSSDSMsg_LayerBase
        {
            public CSSDSMsg_PreLayer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_PreLayer", "CSSDSMsg_PreLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_PreLayer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_PreLayer", "CSSDSMsg_PreLayer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_PreLayer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSSDSMsg_LayerBase Parent
            {
                get { return Invoker.CallNative<CSSDSMsg_LayerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSSDSMsg_ViewRender : ClassData
        {
            public CSSDSMsg_ViewRender(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewRender", "CSSDSMsg_ViewRender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewRender(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewRender", "CSSDSMsg_ViewRender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewRender()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SceneViewId_t ViewId
            {
                get { return Invoker.CallNative<SceneViewId_t>("SDKClass", "ViewId", CallKind.ClassMember, m_classData); }
            }
            public string ViewName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ViewName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSSDSMsg_ViewTarget : ClassData
        {
            public CSSDSMsg_ViewTarget(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewTarget", "CSSDSMsg_ViewTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewTarget(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewTarget", "CSSDSMsg_ViewTarget", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewTarget()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public ulong TextureId
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "TextureId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureId", CallKind.ClassMember, m_classData, value); }
            }
            public int Width
            {
                get { return Invoker.CallNative<int>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public int Height
            {
                get { return Invoker.CallNative<int>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public int RequestedWidth
            {
                get { return Invoker.CallNative<int>("SDKClass", "RequestedWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RequestedWidth", CallKind.ClassMember, m_classData, value); }
            }
            public int RequestedHeight
            {
                get { return Invoker.CallNative<int>("SDKClass", "RequestedHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RequestedHeight", CallKind.ClassMember, m_classData, value); }
            }
            public int NumMipLevels
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumMipLevels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumMipLevels", CallKind.ClassMember, m_classData, value); }
            }
            public int Depth
            {
                get { return Invoker.CallNative<int>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public int MultisampleNumSamples
            {
                get { return Invoker.CallNative<int>("SDKClass", "MultisampleNumSamples", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MultisampleNumSamples", CallKind.ClassMember, m_classData, value); }
            }
            public int Format
            {
                get { return Invoker.CallNative<int>("SDKClass", "Format", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Format", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CSSDSMsg_ViewTargetList : ClassData
        {
            public CSSDSMsg_ViewTargetList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewTargetList", "CSSDSMsg_ViewTargetList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewTargetList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSSDSMsg_ViewTargetList", "CSSDSMsg_ViewTargetList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSSDSMsg_ViewTargetList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public SceneViewId_t ViewId
            {
                get { return Invoker.CallNative<SceneViewId_t>("SDKClass", "ViewId", CallKind.ClassMember, m_classData); }
            }
            public string ViewName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ViewName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CStanceOverrideUpdateNode : CUnaryUpdateNode
        {
            public CStanceOverrideUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStanceOverrideUpdateNode", "CStanceOverrideUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStanceOverrideUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStanceOverrideUpdateNode", "CStanceOverrideUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStanceOverrideUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimUpdateNodeRef StanceSourceNode
            {
                get { return Invoker.CallNative<CAnimUpdateNodeRef>("SDKClass", "StanceSourceNode", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle Parameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Parameter", CallKind.ClassMember, m_classData); }
            }
            public uint Mode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStanceScaleUpdateNode : CUnaryUpdateNode
        {
            public CStanceScaleUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStanceScaleUpdateNode", "CStanceScaleUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStanceScaleUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStanceScaleUpdateNode", "CStanceScaleUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStanceScaleUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle Param
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Param", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStateActionUpdater : ClassData
        {
            public CStateActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateActionUpdater", "CStateActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateActionUpdater", "CStateActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Behavior
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Behavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Behavior", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CStateMachineComponentUpdater : CAnimComponentUpdater
        {
            public CStateMachineComponentUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateMachineComponentUpdater", "CStateMachineComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateMachineComponentUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateMachineComponentUpdater", "CStateMachineComponentUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateMachineComponentUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimStateMachineUpdater StateMachine
            {
                get { return Invoker.CallNative<CAnimStateMachineUpdater>("SDKClass", "StateMachine", CallKind.ClassMember, m_classData); }
            }
            public CAnimComponentUpdater Parent
            {
                get { return Invoker.CallNative<CAnimComponentUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStateMachineUpdateNode : CAnimUpdateNodeBase
        {
            public CStateMachineUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateMachineUpdateNode", "CStateMachineUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateMachineUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateMachineUpdateNode", "CStateMachineUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateMachineUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimStateMachineUpdater StateMachine
            {
                get { return Invoker.CallNative<CAnimStateMachineUpdater>("SDKClass", "StateMachine", CallKind.ClassMember, m_classData); }
            }
            public bool BlockWaningTags
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BlockWaningTags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockWaningTags", CallKind.ClassMember, m_classData, value); }
            }
            public bool LockStateWhenWaning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LockStateWhenWaning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockStateWhenWaning", CallKind.ClassMember, m_classData, value); }
            }
            public bool ResetWhenActivated
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ResetWhenActivated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ResetWhenActivated", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStateNodeStateData : ClassData
        {
            public CStateNodeStateData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateNodeStateData", "CStateNodeStateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateNodeStateData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateNodeStateData", "CStateNodeStateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateNodeStateData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimUpdateNodeRef Child
            {
                get { return Invoker.CallNative<CAnimUpdateNodeRef>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStateNodeTransitionData : ClassData
        {
            public CStateNodeTransitionData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateNodeTransitionData", "CStateNodeTransitionData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateNodeTransitionData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateNodeTransitionData", "CStateNodeTransitionData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateNodeTransitionData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBlendCurve Curve
            {
                get { return Invoker.CallNative<CBlendCurve>("SDKClass", "Curve", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStateUpdateData : ClassData
        {
            public CStateUpdateData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateUpdateData", "CStateUpdateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateUpdateData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStateUpdateData", "CStateUpdateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStateUpdateData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public AnimScriptHandle Script
            {
                get { return Invoker.CallNative<AnimScriptHandle>("SDKClass", "Script", CallKind.ClassMember, m_classData); }
            }
            public int[] TransitionIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "TransitionIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionIndices", CallKind.ClassMember, m_classData, value); }
            }
            public AnimStateID StateID
            {
                get { return Invoker.CallNative<AnimStateID>("SDKClass", "StateID", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStaticPoseCache : ClassData
        {
            public CStaticPoseCache(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStaticPoseCache", "CStaticPoseCache", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStaticPoseCache(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStaticPoseCache", "CStaticPoseCache", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStaticPoseCache()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneCount", CallKind.ClassMember, m_classData, value); }
            }
            public int MorphCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "MorphCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CStaticPoseCacheBuilder : CStaticPoseCache
        {
            public CStaticPoseCacheBuilder(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStaticPoseCacheBuilder", "CStaticPoseCacheBuilder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStaticPoseCacheBuilder(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStaticPoseCacheBuilder", "CStaticPoseCacheBuilder", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStaticPoseCacheBuilder()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CStaticPoseCache Parent
            {
                get { return Invoker.CallNative<CStaticPoseCache>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStepsRemainingMetricEvaluator : CMotionMetricEvaluator
        {
            public CStepsRemainingMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStepsRemainingMetricEvaluator", "CStepsRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStepsRemainingMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStepsRemainingMetricEvaluator", "CStepsRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStepsRemainingMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] FootIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FootIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndices", CallKind.ClassMember, m_classData, value); }
            }
            public float MinStepsRemaining
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinStepsRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinStepsRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStopAtGoalUpdateNode : CUnaryUpdateNode
        {
            public CStopAtGoalUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopAtGoalUpdateNode", "CStopAtGoalUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopAtGoalUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopAtGoalUpdateNode", "CStopAtGoalUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopAtGoalUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float OuterRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "OuterRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OuterRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float InnerRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InnerRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxScale", CallKind.ClassMember, m_classData, value); }
            }
            public float MinScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinScale", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStopwatch : CStopwatchBase
        {
            public CStopwatch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopwatch", "CStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopwatch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopwatch", "CStopwatch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopwatch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Interval
            {
                get { return Invoker.CallNative<float>("SDKClass", "Interval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interval", CallKind.ClassMember, m_classData, value); }
            }
            public CStopwatchBase Parent
            {
                get { return Invoker.CallNative<CStopwatchBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStopwatchBase : CSimpleSimTimer
        {
            public CStopwatchBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopwatchBase", "CStopwatchBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopwatchBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStopwatchBase", "CStopwatchBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStopwatchBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsRunning
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRunning", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRunning", CallKind.ClassMember, m_classData, value); }
            }
            public CSimpleSimTimer Parent
            {
                get { return Invoker.CallNative<CSimpleSimTimer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CStringAnimTag : CAnimTagBase
        {
            public CStringAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStringAnimTag", "CStringAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStringAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CStringAnimTag", "CStringAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CStringAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSubtractUpdateNode : CBinaryUpdateNode
        {
            public CSubtractUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSubtractUpdateNode", "CSubtractUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSubtractUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSubtractUpdateNode", "CSubtractUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSubtractUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FootMotionTiming
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootMotionTiming", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyToFootMotion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyToFootMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyToFootMotion", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyChannelsSeparately
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyChannelsSeparately", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyChannelsSeparately", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseModelSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseModelSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseModelSpace", CallKind.ClassMember, m_classData, value); }
            }
            public CBinaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CBinaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CSymbolAnimParameter : CConcreteAnimParameter
        {
            public CSymbolAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSymbolAnimParameter", "CSymbolAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSymbolAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CSymbolAnimParameter", "CSymbolAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CSymbolAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTakeDamageInfo : ClassData
        {
            public CTakeDamageInfo(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageInfo", "CTakeDamageInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageInfo(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageInfo", "CTakeDamageInfo", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageInfo()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DamageForce
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DamageForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageForce", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DamagePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DamagePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamagePosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ReportedPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ReportedPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReportedPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DamageDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DamageDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageDirection", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Inflictor
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Inflictor", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Attacker
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Attacker", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Ability
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Ability", CallKind.ClassMember, m_classData); }
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public float TotalledDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "TotalledDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalledDamage", CallKind.ClassMember, m_classData, value); }
            }
            public uint BitsDamageType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BitsDamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BitsDamageType", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageCustom
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageCustom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageCustom", CallKind.ClassMember, m_classData, value); }
            }
            public uint AmmoType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AmmoType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AmmoType", CallKind.ClassMember, m_classData, value); }
            }
            public float OriginalDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "OriginalDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalDamage", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldBleed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldBleed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldBleed", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldSpark
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldSpark", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldSpark", CallKind.ClassMember, m_classData, value); }
            }
            public float DamageAbsorbed
            {
                get { return Invoker.CallNative<float>("SDKClass", "DamageAbsorbed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageAbsorbed", CallKind.ClassMember, m_classData, value); }
            }
            public ulong DamageFlags
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "DamageFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageFlags", CallKind.ClassMember, m_classData, value); }
            }
            public uint HitGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "HitGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitGroupId", CallKind.ClassMember, m_classData, value); }
            }
            public int NumObjectsPenetrated
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumObjectsPenetrated", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumObjectsPenetrated", CallKind.ClassMember, m_classData, value); }
            }
            public float FriendlyFireDamageReductionRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "FriendlyFireDamageReductionRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FriendlyFireDamageReductionRatio", CallKind.ClassMember, m_classData, value); }
            }
            public bool InTakeDamageFlow
            {
                get { return Invoker.CallNative<bool>("SDKClass", "InTakeDamageFlow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InTakeDamageFlow", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CTakeDamageInfoAPI : ClassData
        {
            public CTakeDamageInfoAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageInfoAPI", "CTakeDamageInfoAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageInfoAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageInfoAPI", "CTakeDamageInfoAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageInfoAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CTakeDamageResult : ClassData
        {
            public CTakeDamageResult(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageResult", "CTakeDamageResult", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageResult(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageResult", "CTakeDamageResult", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageResult()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] OriginatingInfo
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "OriginatingInfo", CallKind.ClassMember, m_classData); }
            }
            public int HealthLost
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthLost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthLost", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageTaken
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageTaken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageTaken", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalledHealthLost
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalledHealthLost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalledHealthLost", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalledDamageTaken
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalledDamageTaken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalledDamageTaken", CallKind.ClassMember, m_classData, value); }
            }
            public float TotalledDamageAbsorbed
            {
                get { return Invoker.CallNative<float>("SDKClass", "TotalledDamageAbsorbed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalledDamageAbsorbed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CTakeDamageSummaryScopeGuard : ClassData
        {
            public CTakeDamageSummaryScopeGuard(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageSummaryScopeGuard", "CTakeDamageSummaryScopeGuard", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageSummaryScopeGuard(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTakeDamageSummaryScopeGuard", "CTakeDamageSummaryScopeGuard", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTakeDamageSummaryScopeGuard()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CTankTargetChange : CPointEntity
        {
            public CTankTargetChange(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTankTargetChange", "CTankTargetChange", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTankTargetChange(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTankTargetChange", "CTankTargetChange", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTankTargetChange()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string NewTargetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "NewTargetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewTargetName", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTankTrainAI : CPointEntity
        {
            public CTankTrainAI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTankTrainAI", "CTankTrainAI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTankTrainAI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTankTrainAI", "CTankTrainAI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTankTrainAI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFuncTrackTrain Train
            {
                get { return Invoker.CallNative<CFuncTrackTrain>("SDKClass", "Train", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity TargetEntity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "TargetEntity", CallKind.ClassMember, m_classData); }
            }
            public int SoundPlaying
            {
                get { return Invoker.CallNative<int>("SDKClass", "SoundPlaying", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundPlaying", CallKind.ClassMember, m_classData, value); }
            }
            public string StartSoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StartSoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartSoundName", CallKind.ClassMember, m_classData, value); }
            }
            public string EngineSoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EngineSoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EngineSoundName", CallKind.ClassMember, m_classData, value); }
            }
            public string MovementSoundName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MovementSoundName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MovementSoundName", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetEntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetEntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetEntityName", CallKind.ClassMember, m_classData, value); }
            }
            public CPointEntity Parent
            {
                get { return Invoker.CallNative<CPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTargetSelectorUpdateNode : CAnimUpdateNodeBase
        {
            public CTargetSelectorUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTargetSelectorUpdateNode", "CTargetSelectorUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTargetSelectorUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTargetSelectorUpdateNode", "CTargetSelectorUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTargetSelectorUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint AngleMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AngleMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleMode", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle TargetPosition
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetPosition", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TargetFacePositionParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetFacePositionParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle MoveHeadingParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "MoveHeadingParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle DesiredMoveHeadingParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "DesiredMoveHeadingParameter", CallKind.ClassMember, m_classData); }
            }
            public bool TargetPositionIsWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetPositionIsWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetPositionIsWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetFacePositionIsWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetFacePositionIsWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetFacePositionIsWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnablePhaseMatching
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnablePhaseMatching", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnablePhaseMatching", CallKind.ClassMember, m_classData, value); }
            }
            public float PhaseMatchingMaxRootMotionSkip
            {
                get { return Invoker.CallNative<float>("SDKClass", "PhaseMatchingMaxRootMotionSkip", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhaseMatchingMaxRootMotionSkip", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTargetWarpUpdateNode : CUnaryUpdateNode
        {
            public CTargetWarpUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTargetWarpUpdateNode", "CTargetWarpUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTargetWarpUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTargetWarpUpdateNode", "CTargetWarpUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTargetWarpUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint AngleMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AngleMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleMode", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle TargetPositionParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetPositionParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TargetUpVectorParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetUpVectorParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle TargetFacePositionParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "TargetFacePositionParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle MoveHeadingParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "MoveHeadingParameter", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle DesiredMoveHeadingParameter
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "DesiredMoveHeadingParameter", CallKind.ClassMember, m_classData); }
            }
            public uint CorrectionMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CorrectionMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CorrectionMethod", CallKind.ClassMember, m_classData, value); }
            }
            public uint TargetWarpTimingMethod
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetWarpTimingMethod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetWarpTimingMethod", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetFacePositionIsWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetFacePositionIsWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetFacePositionIsWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetPositionIsWorldSpace
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetPositionIsWorldSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetPositionIsWorldSpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyWarpWhenTagIsFound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyWarpWhenTagIsFound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyWarpWhenTagIsFound", CallKind.ClassMember, m_classData, value); }
            }
            public bool WarpOrientationDuringTranslation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WarpOrientationDuringTranslation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarpOrientationDuringTranslation", CallKind.ClassMember, m_classData, value); }
            }
            public bool WarpAroundCenter
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WarpAroundCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarpAroundCenter", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTaskHandshakeAnimTag : CHandshakeAnimTagBase
        {
            public CTaskHandshakeAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTaskHandshakeAnimTag", "CTaskHandshakeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTaskHandshakeAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTaskHandshakeAnimTag", "CTaskHandshakeAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTaskHandshakeAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CHandshakeAnimTagBase Parent
            {
                get { return Invoker.CallNative<CHandshakeAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTaskStatusAnimTag : CAnimTagBase
        {
            public CTaskStatusAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTaskStatusAnimTag", "CTaskStatusAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTaskStatusAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTaskStatusAnimTag", "CTaskStatusAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTaskStatusAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTeam : CBaseEntity
        {
            public CTeam(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTeam", "CTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTeam(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTeam", "CTeam", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTeam()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Score
            {
                get { return Invoker.CallNative<int>("SDKClass", "Score", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Score", CallKind.ClassMember, m_classData, value); }
            }
            public string Teamname
            {
                get { return Invoker.CallNative<string>("SDKClass", "Teamname", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Teamname", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTeamplayRules : CMultiplayRules
        {
            public CTeamplayRules(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTeamplayRules", "CTeamplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTeamplayRules(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTeamplayRules", "CTeamplayRules", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTeamplayRules()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CMultiplayRules Parent
            {
                get { return Invoker.CallNative<CMultiplayRules>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTestBlendContainer : CVoiceContainerBase
        {
            public CTestBlendContainer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTestBlendContainer", "CTestBlendContainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTestBlendContainer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTestBlendContainer", "CTestBlendContainer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTestBlendContainer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTestEffect : CBaseEntity
        {
            public CTestEffect(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTestEffect", "CTestEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTestEffect(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTestEffect", "CTestEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTestEffect()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Loop
            {
                get { return Invoker.CallNative<int>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public int Beam
            {
                get { return Invoker.CallNative<int>("SDKClass", "Beam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Beam", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BeamTime
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BeamTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeamTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTextureBasedAnimatable : CBaseModelEntity
        {
            public CTextureBasedAnimatable(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTextureBasedAnimatable", "CTextureBasedAnimatable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTextureBasedAnimatable(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTextureBasedAnimatable", "CTextureBasedAnimatable", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTextureBasedAnimatable()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Loop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Loop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Loop", CallKind.ClassMember, m_classData, value); }
            }
            public float FPS
            {
                get { return Invoker.CallNative<float>("SDKClass", "FPS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FPS", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AnimationBoundsMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AnimationBoundsMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationBoundsMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AnimationBoundsMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AnimationBoundsMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationBoundsMax", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float StartFrame
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartFrame", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTiltTwistConstraint : CBaseConstraint
        {
            public CTiltTwistConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTiltTwistConstraint", "CTiltTwistConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTiltTwistConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTiltTwistConstraint", "CTiltTwistConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTiltTwistConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TargetAxis
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetAxis", CallKind.ClassMember, m_classData, value); }
            }
            public int SlaveAxis
            {
                get { return Invoker.CallNative<int>("SDKClass", "SlaveAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlaveAxis", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTimeline : IntervalTimer
        {
            public CTimeline(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimeline", "CTimeline", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimeline(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimeline", "CTimeline", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimeline()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Values
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Values", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Values", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ValueCounts
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ValueCounts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ValueCounts", CallKind.ClassMember, m_classData, value); }
            }
            public int BucketCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BucketCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BucketCount", CallKind.ClassMember, m_classData, value); }
            }
            public float Interval
            {
                get { return Invoker.CallNative<float>("SDKClass", "Interval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interval", CallKind.ClassMember, m_classData, value); }
            }
            public float FinalValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "FinalValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FinalValue", CallKind.ClassMember, m_classData, value); }
            }
            public uint CompressionType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CompressionType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompressionType", CallKind.ClassMember, m_classData, value); }
            }
            public bool Stopped
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Stopped", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Stopped", CallKind.ClassMember, m_classData, value); }
            }
            public IntervalTimer Parent
            {
                get { return Invoker.CallNative<IntervalTimer>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTimeRemainingMetricEvaluator : CMotionMetricEvaluator
        {
            public CTimeRemainingMetricEvaluator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimeRemainingMetricEvaluator", "CTimeRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimeRemainingMetricEvaluator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimeRemainingMetricEvaluator", "CTimeRemainingMetricEvaluator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimeRemainingMetricEvaluator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool MatchByTimeRemaining
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchByTimeRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchByTimeRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTimeRemaining
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTimeRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTimeRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public bool FilterByTimeRemaining
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FilterByTimeRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterByTimeRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public float MinTimeRemaining
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinTimeRemaining", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinTimeRemaining", CallKind.ClassMember, m_classData, value); }
            }
            public CMotionMetricEvaluator Parent
            {
                get { return Invoker.CallNative<CMotionMetricEvaluator>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTimerEntity : CLogicalEntity
        {
            public CTimerEntity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimerEntity", "CTimerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimerEntity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTimerEntity", "CTimerEntity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTimerEntity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnTimer
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTimer", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnTimerHigh
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTimerHigh", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnTimerLow
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTimerLow", CallKind.ClassMember, m_classData); }
            }
            public int Disabled
            {
                get { return Invoker.CallNative<int>("SDKClass", "Disabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disabled", CallKind.ClassMember, m_classData, value); }
            }
            public float InitialDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "InitialDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float RefireTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RefireTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefireTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool UpDownState
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UpDownState", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpDownState", CallKind.ClassMember, m_classData, value); }
            }
            public int UseRandomTime
            {
                get { return Invoker.CallNative<int>("SDKClass", "UseRandomTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseRandomTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool PauseAfterFiring
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PauseAfterFiring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PauseAfterFiring", CallKind.ClassMember, m_classData, value); }
            }
            public float LowerRandomBound
            {
                get { return Invoker.CallNative<float>("SDKClass", "LowerRandomBound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LowerRandomBound", CallKind.ClassMember, m_classData, value); }
            }
            public float UpperRandomBound
            {
                get { return Invoker.CallNative<float>("SDKClass", "UpperRandomBound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UpperRandomBound", CallKind.ClassMember, m_classData, value); }
            }
            public float RemainingTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RemainingTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemainingTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool Paused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Paused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Paused", CallKind.ClassMember, m_classData, value); }
            }
            public CLogicalEntity Parent
            {
                get { return Invoker.CallNative<CLogicalEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CToggleComponentActionUpdater : CAnimActionUpdater
        {
            public CToggleComponentActionUpdater(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CToggleComponentActionUpdater", "CToggleComponentActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CToggleComponentActionUpdater(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CToggleComponentActionUpdater", "CToggleComponentActionUpdater", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CToggleComponentActionUpdater()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public AnimComponentID ComponentID
            {
                get { return Invoker.CallNative<AnimComponentID>("SDKClass", "ComponentID", CallKind.ClassMember, m_classData); }
            }
            public bool SetEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SetEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SetEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimActionUpdater Parent
            {
                get { return Invoker.CallNative<CAnimActionUpdater>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTonemapController2 : CBaseEntity
        {
            public CTonemapController2(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapController2", "CTonemapController2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapController2(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapController2", "CTonemapController2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapController2()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AutoExposureMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutoExposureMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoExposureMin", CallKind.ClassMember, m_classData, value); }
            }
            public float AutoExposureMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "AutoExposureMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AutoExposureMax", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureAdaptationSpeedUp
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureAdaptationSpeedUp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureAdaptationSpeedUp", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureAdaptationSpeedDown
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureAdaptationSpeedDown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureAdaptationSpeedDown", CallKind.ClassMember, m_classData, value); }
            }
            public float TonemapEVSmoothingRange
            {
                get { return Invoker.CallNative<float>("SDKClass", "TonemapEVSmoothingRange", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TonemapEVSmoothingRange", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity Parent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTonemapController2Alias_env_tonemap_controller2 : CTonemapController2
        {
            public CTonemapController2Alias_env_tonemap_controller2(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapController2Alias_env_tonemap_controller2", "CTonemapController2Alias_env_tonemap_controller2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapController2Alias_env_tonemap_controller2(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapController2Alias_env_tonemap_controller2", "CTonemapController2Alias_env_tonemap_controller2", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapController2Alias_env_tonemap_controller2()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CTonemapController2 Parent
            {
                get { return Invoker.CallNative<CTonemapController2>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTonemapTrigger : CBaseTrigger
        {
            public CTonemapTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapTrigger", "CTonemapTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTonemapTrigger", "CTonemapTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTonemapTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string TonemapControllerName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TonemapControllerName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TonemapControllerName", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance TonemapController
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "TonemapController", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTouchExpansionComponent : CEntityComponent
        {
            public CTouchExpansionComponent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTouchExpansionComponent", "CTouchExpansionComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTouchExpansionComponent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTouchExpansionComponent", "CTouchExpansionComponent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTouchExpansionComponent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityComponent Parent
            {
                get { return Invoker.CallNative<CEntityComponent>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTransitionUpdateData : ClassData
        {
            public CTransitionUpdateData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTransitionUpdateData", "CTransitionUpdateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTransitionUpdateData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTransitionUpdateData", "CTransitionUpdateData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTransitionUpdateData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte SrcStateIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SrcStateIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SrcStateIndex", CallKind.ClassMember, m_classData, value); }
            }
            public byte DestStateIndex
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DestStateIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DestStateIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CTriggerActiveWeaponDetect : CBaseTrigger
        {
            public CTriggerActiveWeaponDetect(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerActiveWeaponDetect", "CTriggerActiveWeaponDetect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerActiveWeaponDetect(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerActiveWeaponDetect", "CTriggerActiveWeaponDetect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerActiveWeaponDetect()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnTouchedActiveWeapon
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTouchedActiveWeapon", CallKind.ClassMember, m_classData); }
            }
            public string WeaponClassName
            {
                get { return Invoker.CallNative<string>("SDKClass", "WeaponClassName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeaponClassName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerBombReset : CBaseTrigger
        {
            public CTriggerBombReset(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBombReset", "CTriggerBombReset", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBombReset(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBombReset", "CTriggerBombReset", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBombReset()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerBrush : CBaseModelEntity
        {
            public CTriggerBrush(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBrush", "CTriggerBrush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBrush(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBrush", "CTriggerBrush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBrush()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnStartTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartTouch", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEndTouch
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEndTouch", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnUse
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnUse", CallKind.ClassMember, m_classData); }
            }
            public int InputFilter
            {
                get { return Invoker.CallNative<int>("SDKClass", "InputFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputFilter", CallKind.ClassMember, m_classData, value); }
            }
            public int DontMessageParent
            {
                get { return Invoker.CallNative<int>("SDKClass", "DontMessageParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DontMessageParent", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerBuoyancy : CBaseTrigger
        {
            public CTriggerBuoyancy(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBuoyancy", "CTriggerBuoyancy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBuoyancy(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerBuoyancy", "CTriggerBuoyancy", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerBuoyancy()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBuoyancyHelper BuoyancyHelper
            {
                get { return Invoker.CallNative<CBuoyancyHelper>("SDKClass", "BuoyancyHelper", CallKind.ClassMember, m_classData); }
            }
            public float FluidDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "FluidDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FluidDensity", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerCallback : CBaseTrigger
        {
            public CTriggerCallback(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerCallback", "CTriggerCallback", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerCallback(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerCallback", "CTriggerCallback", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerCallback()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerDetectBulletFire : CBaseTrigger
        {
            public CTriggerDetectBulletFire(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerDetectBulletFire", "CTriggerDetectBulletFire", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerDetectBulletFire(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerDetectBulletFire", "CTriggerDetectBulletFire", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerDetectBulletFire()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool PlayerFireOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayerFireOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerFireOnly", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnDetectedBulletFire
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDetectedBulletFire", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerDetectExplosion : CBaseTrigger
        {
            public CTriggerDetectExplosion(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerDetectExplosion", "CTriggerDetectExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerDetectExplosion(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerDetectExplosion", "CTriggerDetectExplosion", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerDetectExplosion()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnDetectedExplosion
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnDetectedExplosion", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerFan : CBaseTrigger
        {
            public CTriggerFan(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerFan", "CTriggerFan", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerFan(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerFan", "CTriggerFan", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerFan()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D FanOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FanOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D FanOriginOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FanOriginOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanOriginOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D FanEnd
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FanEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FanEnd", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D NoiseDirectionTarget
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "NoiseDirectionTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseDirectionTarget", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Direction
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Direction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Direction", CallKind.ClassMember, m_classData, value); }
            }
            public bool PushTowardsInfoTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PushTowardsInfoTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushTowardsInfoTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool PushAwayFromInfoTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PushAwayFromInfoTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushAwayFromInfoTarget", CallKind.ClassMember, m_classData, value); }
            }
            public CInfoFan InfoFan
            {
                get { return Invoker.CallNative<CInfoFan>("SDKClass", "InfoFan", CallKind.ClassMember, m_classData); }
            }
            public float Force
            {
                get { return Invoker.CallNative<float>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
            public bool Falloff
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Falloff", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Falloff", CallKind.ClassMember, m_classData, value); }
            }
            public CountdownTimer RampTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "RampTimer", CallKind.ClassMember, m_classData); }
            }
            public float RopeForceScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "RopeForceScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RopeForceScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ParticleForceScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ParticleForceScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleForceScale", CallKind.ClassMember, m_classData, value); }
            }
            public float PlayerForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlayerForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerForce", CallKind.ClassMember, m_classData, value); }
            }
            public bool PlayerWindblock
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PlayerWindblock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlayerWindblock", CallKind.ClassMember, m_classData, value); }
            }
            public float NPCForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "NPCForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NPCForce", CallKind.ClassMember, m_classData, value); }
            }
            public float RampTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RampTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RampTime", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseDegrees
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseDegrees", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseDegrees", CallKind.ClassMember, m_classData, value); }
            }
            public float NoiseSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "NoiseSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoiseSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public bool PushPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PushPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool RampDown
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RampDown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RampDown", CallKind.ClassMember, m_classData, value); }
            }
            public int ManagerFanIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "ManagerFanIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ManagerFanIdx", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerGameEvent : CBaseTrigger
        {
            public CTriggerGameEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerGameEvent", "CTriggerGameEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerGameEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerGameEvent", "CTriggerGameEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerGameEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrStartTouchEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrStartTouchEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrStartTouchEventName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrEndTouchEventName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrEndTouchEventName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrEndTouchEventName", CallKind.ClassMember, m_classData, value); }
            }
            public string StrTriggerID
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrTriggerID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrTriggerID", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerGravity : CBaseTrigger
        {
            public CTriggerGravity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerGravity", "CTriggerGravity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerGravity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerGravity", "CTriggerGravity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerGravity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerHostageReset : CBaseTrigger
        {
            public CTriggerHostageReset(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerHostageReset", "CTriggerHostageReset", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerHostageReset(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerHostageReset", "CTriggerHostageReset", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerHostageReset()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerHurt : CBaseTrigger
        {
            public CTriggerHurt(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerHurt", "CTriggerHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerHurt(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerHurt", "CTriggerHurt", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerHurt()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float OriginalDamage
            {
                get { return Invoker.CallNative<float>("SDKClass", "OriginalDamage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginalDamage", CallKind.ClassMember, m_classData, value); }
            }
            public float Damage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damage", CallKind.ClassMember, m_classData, value); }
            }
            public float DamageCap
            {
                get { return Invoker.CallNative<float>("SDKClass", "DamageCap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageCap", CallKind.ClassMember, m_classData, value); }
            }
            public float LastDmgTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LastDmgTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastDmgTime", CallKind.ClassMember, m_classData, value); }
            }
            public float ForgivenessDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "ForgivenessDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForgivenessDelay", CallKind.ClassMember, m_classData, value); }
            }
            public uint BitsDamageInflict
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BitsDamageInflict", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BitsDamageInflict", CallKind.ClassMember, m_classData, value); }
            }
            public int DamageModel
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageModel", CallKind.ClassMember, m_classData, value); }
            }
            public bool NoDmgForce
            {
                get { return Invoker.CallNative<bool>("SDKClass", "NoDmgForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NoDmgForce", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D DamageForce
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DamageForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageForce", CallKind.ClassMember, m_classData, value); }
            }
            public bool ThinkAlways
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ThinkAlways", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThinkAlways", CallKind.ClassMember, m_classData, value); }
            }
            public float HurtThinkPeriod
            {
                get { return Invoker.CallNative<float>("SDKClass", "HurtThinkPeriod", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HurtThinkPeriod", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnHurt
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnHurt", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnHurtPlayer
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnHurtPlayer", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerImpact : CTriggerMultiple
        {
            public CTriggerImpact(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerImpact", "CTriggerImpact", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerImpact(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerImpact", "CTriggerImpact", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerImpact()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Magnitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Magnitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Magnitude", CallKind.ClassMember, m_classData, value); }
            }
            public float Noise
            {
                get { return Invoker.CallNative<float>("SDKClass", "Noise", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Noise", CallKind.ClassMember, m_classData, value); }
            }
            public float Viewkick
            {
                get { return Invoker.CallNative<float>("SDKClass", "Viewkick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Viewkick", CallKind.ClassMember, m_classData, value); }
            }
            public CTriggerMultiple Parent
            {
                get { return Invoker.CallNative<CTriggerMultiple>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerLerpObject : CBaseTrigger
        {
            public CTriggerLerpObject(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerLerpObject", "CTriggerLerpObject", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerLerpObject(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerLerpObject", "CTriggerLerpObject", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerLerpObject()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string LerpTarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "LerpTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpTarget", CallKind.ClassMember, m_classData, value); }
            }
            public string LerpTargetAttachment
            {
                get { return Invoker.CallNative<string>("SDKClass", "LerpTargetAttachment", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpTargetAttachment", CallKind.ClassMember, m_classData, value); }
            }
            public float LerpDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "LerpDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpDuration", CallKind.ClassMember, m_classData, value); }
            }
            public bool LerpRestoreMoveType
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LerpRestoreMoveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpRestoreMoveType", CallKind.ClassMember, m_classData, value); }
            }
            public bool SingleLerpObject
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SingleLerpObject", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SingleLerpObject", CallKind.ClassMember, m_classData, value); }
            }
            public string LerpEffect
            {
                get { return Invoker.CallNative<string>("SDKClass", "LerpEffect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpEffect", CallKind.ClassMember, m_classData, value); }
            }
            public string LerpSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "LerpSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LerpSound", CallKind.ClassMember, m_classData, value); }
            }
            public bool AttachTouchingObject
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AttachTouchingObject", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachTouchingObject", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseEntity EntityToWaitForDisconnect
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "EntityToWaitForDisconnect", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLerpStarted
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLerpStarted", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnLerpFinished
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnLerpFinished", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerLook : CTriggerOnce
        {
            public CTriggerLook(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerLook", "CTriggerLook", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerLook(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerLook", "CTriggerLook", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerLook()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity LookTarget
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "LookTarget", CallKind.ClassMember, m_classData); }
            }
            public float FieldOfView
            {
                get { return Invoker.CallNative<float>("SDKClass", "FieldOfView", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FieldOfView", CallKind.ClassMember, m_classData, value); }
            }
            public float LookTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LookTimeTotal
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookTimeTotal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookTimeTotal", CallKind.ClassMember, m_classData, value); }
            }
            public float LookTimeLast
            {
                get { return Invoker.CallNative<float>("SDKClass", "LookTimeLast", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LookTimeLast", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeoutDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeoutDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeoutDuration", CallKind.ClassMember, m_classData, value); }
            }
            public bool TimeoutFired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TimeoutFired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeoutFired", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLooking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLooking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLooking", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseVelocity
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public bool TestOcclusion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TestOcclusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TestOcclusion", CallKind.ClassMember, m_classData, value); }
            }
            public bool TestAllVisibleOcclusion
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TestAllVisibleOcclusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TestAllVisibleOcclusion", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityIOOutput OnTimeout
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTimeout", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnStartLook
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnStartLook", CallKind.ClassMember, m_classData); }
            }
            public CEntityIOOutput OnEndLook
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnEndLook", CallKind.ClassMember, m_classData); }
            }
            public CTriggerOnce Parent
            {
                get { return Invoker.CallNative<CTriggerOnce>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerMultiple : CBaseTrigger
        {
            public CTriggerMultiple(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerMultiple", "CTriggerMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerMultiple(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerMultiple", "CTriggerMultiple", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerMultiple()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnTrigger
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnTrigger", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerOnce : CTriggerMultiple
        {
            public CTriggerOnce(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerOnce", "CTriggerOnce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerOnce(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerOnce", "CTriggerOnce", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerOnce()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CTriggerMultiple Parent
            {
                get { return Invoker.CallNative<CTriggerMultiple>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerPhysics : CBaseTrigger
        {
            public CTriggerPhysics(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerPhysics", "CTriggerPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerPhysics(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerPhysics", "CTriggerPhysics", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerPhysics()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float GravityScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "GravityScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GravityScale", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearForce", CallKind.ClassMember, m_classData, value); }
            }
            public float Frequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frequency", CallKind.ClassMember, m_classData, value); }
            }
            public float DampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "DampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearForcePointAt
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearForcePointAt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearForcePointAt", CallKind.ClassMember, m_classData, value); }
            }
            public bool CollapseToForcePoint
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CollapseToForcePoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollapseToForcePoint", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearForcePointAtWorld
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearForcePointAtWorld", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearForcePointAtWorld", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearForceDirection
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearForceDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearForceDirection", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConvertToDebrisWhenPossible
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConvertToDebrisWhenPossible", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConvertToDebrisWhenPossible", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerProximity : CBaseTrigger
        {
            public CTriggerProximity(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerProximity", "CTriggerProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerProximity(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerProximity", "CTriggerProximity", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerProximity()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity MeasureTarget
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "MeasureTarget", CallKind.ClassMember, m_classData); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public int Touchers
            {
                get { return Invoker.CallNative<int>("SDKClass", "Touchers", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Touchers", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerPush : CBaseTrigger
        {
            public CTriggerPush(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerPush", "CTriggerPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerPush(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerPush", "CTriggerPush", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerPush()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector PushEntitySpace
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "PushEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PushDirEntitySpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PushDirEntitySpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PushDirEntitySpace", CallKind.ClassMember, m_classData, value); }
            }
            public bool TriggerOnStartTouch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TriggerOnStartTouch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriggerOnStartTouch", CallKind.ClassMember, m_classData, value); }
            }
            public bool UsePathSimple
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UsePathSimple", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UsePathSimple", CallKind.ClassMember, m_classData, value); }
            }
            public string PathSimpleName
            {
                get { return Invoker.CallNative<string>("SDKClass", "PathSimpleName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PathSimpleName", CallKind.ClassMember, m_classData, value); }
            }
            public int[] PathSimple
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "PathSimple", CallKind.ClassMember, m_classData); }
            }
            public uint SplinePushType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SplinePushType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplinePushType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerRemove : CBaseTrigger
        {
            public CTriggerRemove(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerRemove", "CTriggerRemove", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerRemove(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerRemove", "CTriggerRemove", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerRemove()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEntityIOOutput OnRemove
            {
                get { return Invoker.CallNative<CEntityIOOutput>("SDKClass", "OnRemove", CallKind.ClassMember, m_classData); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerSave : CBaseTrigger
        {
            public CTriggerSave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSave", "CTriggerSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSave", "CTriggerSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ForceNewLevelUnit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceNewLevelUnit", CallKind.ClassMember, m_classData, value); }
            }
            public float DangerousTimer
            {
                get { return Invoker.CallNative<float>("SDKClass", "DangerousTimer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DangerousTimer", CallKind.ClassMember, m_classData, value); }
            }
            public int MinHitPoints
            {
                get { return Invoker.CallNative<int>("SDKClass", "MinHitPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHitPoints", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerSndSosOpvar : CBaseTrigger
        {
            public CTriggerSndSosOpvar(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSndSosOpvar", "CTriggerSndSosOpvar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSndSosOpvar(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSndSosOpvar", "CTriggerSndSosOpvar", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSndSosOpvar()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public float CenterSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "CenterSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CenterSize", CallKind.ClassMember, m_classData, value); }
            }
            public float MinVal
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinVal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinVal", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxVal
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxVal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxVal", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarName", CallKind.ClassMember, m_classData, value); }
            }
            public string StackName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackName", CallKind.ClassMember, m_classData, value); }
            }
            public string OperatorName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OperatorName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OperatorName", CallKind.ClassMember, m_classData, value); }
            }
            public string OpvarNameChar
            {
                get { return Invoker.CallNative<string>("SDKClass", "OpvarNameChar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OpvarNameChar", CallKind.ClassMember, m_classData, value); }
            }
            public string StackNameChar
            {
                get { return Invoker.CallNative<string>("SDKClass", "StackNameChar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StackNameChar", CallKind.ClassMember, m_classData, value); }
            }
            public string OperatorNameChar
            {
                get { return Invoker.CallNative<string>("SDKClass", "OperatorNameChar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OperatorNameChar", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D VecNormPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "VecNormPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VecNormPos", CallKind.ClassMember, m_classData, value); }
            }
            public float NormCenterSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "NormCenterSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NormCenterSize", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerSoundscape : CBaseTrigger
        {
            public CTriggerSoundscape(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSoundscape", "CTriggerSoundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSoundscape(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerSoundscape", "CTriggerSoundscape", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerSoundscape()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CEnvSoundscapeTriggerable Soundscape
            {
                get { return Invoker.CallNative<CEnvSoundscapeTriggerable>("SDKClass", "Soundscape", CallKind.ClassMember, m_classData); }
            }
            public string SoundscapeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SoundscapeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SoundscapeName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerTeleport : CBaseTrigger
        {
            public CTriggerTeleport(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerTeleport", "CTriggerTeleport", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerTeleport(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerTeleport", "CTriggerTeleport", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerTeleport()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Landmark
            {
                get { return Invoker.CallNative<string>("SDKClass", "Landmark", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Landmark", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseLandmarkAngles
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseLandmarkAngles", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseLandmarkAngles", CallKind.ClassMember, m_classData, value); }
            }
            public bool MirrorPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MirrorPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MirrorPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public bool CheckDestIfClearForPlayer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CheckDestIfClearForPlayer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CheckDestIfClearForPlayer", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerToggleSave : CBaseTrigger
        {
            public CTriggerToggleSave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerToggleSave", "CTriggerToggleSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerToggleSave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerToggleSave", "CTriggerToggleSave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerToggleSave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseTrigger Parent
            {
                get { return Invoker.CallNative<CBaseTrigger>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTriggerVolume : CBaseModelEntity
        {
            public CTriggerVolume(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerVolume", "CTriggerVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerVolume(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTriggerVolume", "CTriggerVolume", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTriggerVolume()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string FilterName
            {
                get { return Invoker.CallNative<string>("SDKClass", "FilterName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterName", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Filter
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTurnHelperUpdateNode : CUnaryUpdateNode
        {
            public CTurnHelperUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTurnHelperUpdateNode", "CTurnHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTurnHelperUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTurnHelperUpdateNode", "CTurnHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTurnHelperUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint FacingTarget
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FacingTarget", CallKind.ClassMember, m_classData, value); }
            }
            public float TurnStartTimeOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnStartTimeOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnStartTimeOffset", CallKind.ClassMember, m_classData, value); }
            }
            public float TurnDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "TurnDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TurnDuration", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchChildDuration
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchChildDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchChildDuration", CallKind.ClassMember, m_classData, value); }
            }
            public float ManualTurnOffset
            {
                get { return Invoker.CallNative<float>("SDKClass", "ManualTurnOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ManualTurnOffset", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseManualTurnOffset
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseManualTurnOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseManualTurnOffset", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTwistConstraint : CBaseConstraint
        {
            public CTwistConstraint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTwistConstraint", "CTwistConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTwistConstraint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTwistConstraint", "CTwistConstraint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTwistConstraint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Inverse
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Inverse", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Inverse", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseConstraint Parent
            {
                get { return Invoker.CallNative<CBaseConstraint>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CTwoBoneIKUpdateNode : CUnaryUpdateNode
        {
            public CTwoBoneIKUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTwoBoneIKUpdateNode", "CTwoBoneIKUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTwoBoneIKUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CTwoBoneIKUpdateNode", "CTwoBoneIKUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CTwoBoneIKUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public TwoBoneIKSettings_t OpFixedData
            {
                get { return Invoker.CallNative<TwoBoneIKSettings_t>("SDKClass", "OpFixedData", CallKind.ClassMember, m_classData); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CUnaryUpdateNode : CAnimUpdateNodeBase
        {
            public CUnaryUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CUnaryUpdateNode", "CUnaryUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CUnaryUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CUnaryUpdateNode", "CUnaryUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CUnaryUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimUpdateNodeRef ChildNode
            {
                get { return Invoker.CallNative<CAnimUpdateNodeRef>("SDKClass", "ChildNode", CallKind.ClassMember, m_classData); }
            }
            public CAnimUpdateNodeBase Parent
            {
                get { return Invoker.CallNative<CAnimUpdateNodeBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVariantDefaultAllocator : ClassData
        {
            public CVariantDefaultAllocator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVariantDefaultAllocator", "CVariantDefaultAllocator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVariantDefaultAllocator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVariantDefaultAllocator", "CVariantDefaultAllocator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVariantDefaultAllocator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CVectorAnimParameter : CConcreteAnimParameter
        {
            public CVectorAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorAnimParameter", "CVectorAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorAnimParameter", "CVectorAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DefaultValue
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultValue", CallKind.ClassMember, m_classData, value); }
            }
            public bool Interpolate
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Interpolate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Interpolate", CallKind.ClassMember, m_classData, value); }
            }
            public CConcreteAnimParameter Parent
            {
                get { return Invoker.CallNative<CConcreteAnimParameter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVectorExponentialMovingAverage : ClassData
        {
            public CVectorExponentialMovingAverage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorExponentialMovingAverage", "CVectorExponentialMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorExponentialMovingAverage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorExponentialMovingAverage", "CVectorExponentialMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorExponentialMovingAverage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CVectorMovingAverage : ClassData
        {
            public CVectorMovingAverage(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorMovingAverage", "CVectorMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorMovingAverage(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorMovingAverage", "CVectorMovingAverage", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorMovingAverage()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CVectorQuantizer : ClassData
        {
            public CVectorQuantizer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorQuantizer", "CVectorQuantizer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorQuantizer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVectorQuantizer", "CVectorQuantizer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVectorQuantizer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] CentroidVectors
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "CentroidVectors", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CentroidVectors", CallKind.ClassMember, m_classData, value); }
            }
            public int Centroids
            {
                get { return Invoker.CallNative<int>("SDKClass", "Centroids", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Centroids", CallKind.ClassMember, m_classData, value); }
            }
            public int Dimensions
            {
                get { return Invoker.CallNative<int>("SDKClass", "Dimensions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dimensions", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CVirtualAnimParameter : CAnimParameterBase
        {
            public CVirtualAnimParameter(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVirtualAnimParameter", "CVirtualAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVirtualAnimParameter(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVirtualAnimParameter", "CVirtualAnimParameter", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVirtualAnimParameter()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ExpressionString
            {
                get { return Invoker.CallNative<string>("SDKClass", "ExpressionString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExpressionString", CallKind.ClassMember, m_classData, value); }
            }
            public byte ParamType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ParamType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamType", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParameterBase Parent
            {
                get { return Invoker.CallNative<CAnimParameterBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerAmpedDecayingSineWave : CVoiceContainerDecayingSineWave
        {
            public CVoiceContainerAmpedDecayingSineWave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerAmpedDecayingSineWave", "CVoiceContainerAmpedDecayingSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerAmpedDecayingSineWave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerAmpedDecayingSineWave", "CVoiceContainerAmpedDecayingSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerAmpedDecayingSineWave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float GainAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "GainAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GainAmount", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerDecayingSineWave Parent
            {
                get { return Invoker.CallNative<CVoiceContainerDecayingSineWave>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerAnalysisBase : ClassData
        {
            public CVoiceContainerAnalysisBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerAnalysisBase", "CVoiceContainerAnalysisBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerAnalysisBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerAnalysisBase", "CVoiceContainerAnalysisBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerAnalysisBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool RegenerateCurveOnCompile
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RegenerateCurveOnCompile", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RegenerateCurveOnCompile", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CVoiceContainerBase : ClassData
        {
            public CVoiceContainerBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerBase", "CVoiceContainerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerBase", "CVoiceContainerBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] EnvelopeAnalyzer
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "EnvelopeAnalyzer", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerBlender : CVoiceContainerBase
        {
            public CVoiceContainerBlender(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerBlender", "CVoiceContainerBlender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerBlender(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerBlender", "CVoiceContainerBlender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerBlender()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundContainerReference FirstSound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "FirstSound", CallKind.ClassMember, m_classData); }
            }
            public CSoundContainerReference SecondSound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "SecondSound", CallKind.ClassMember, m_classData); }
            }
            public float BlendFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendFactor", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerDecayingSineWave : CVoiceContainerBase
        {
            public CVoiceContainerDecayingSineWave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerDecayingSineWave", "CVoiceContainerDecayingSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerDecayingSineWave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerDecayingSineWave", "CVoiceContainerDecayingSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerDecayingSineWave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Frequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frequency", CallKind.ClassMember, m_classData, value); }
            }
            public float DecayTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "DecayTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DecayTime", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerDefault : CVoiceContainerBase
        {
            public CVoiceContainerDefault(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerDefault", "CVoiceContainerDefault", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerDefault(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerDefault", "CVoiceContainerDefault", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerDefault()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerEnvelope : CVoiceContainerBase
        {
            public CVoiceContainerEnvelope(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerEnvelope", "CVoiceContainerEnvelope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerEnvelope(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerEnvelope", "CVoiceContainerEnvelope", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerEnvelope()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] AnalysisContainer
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "AnalysisContainer", CallKind.ClassMember, m_classData); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerEnvelopeAnalyzer : CVoiceContainerAnalysisBase
        {
            public CVoiceContainerEnvelopeAnalyzer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerEnvelopeAnalyzer", "CVoiceContainerEnvelopeAnalyzer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerEnvelopeAnalyzer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerEnvelopeAnalyzer", "CVoiceContainerEnvelopeAnalyzer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerEnvelopeAnalyzer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Mode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public float AnalysisWindowMs
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnalysisWindowMs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnalysisWindowMs", CallKind.ClassMember, m_classData, value); }
            }
            public float Threshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "Threshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Threshold", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerAnalysisBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerAnalysisBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerGranulator : CVoiceContainerBase
        {
            public CVoiceContainerGranulator(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerGranulator", "CVoiceContainerGranulator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerGranulator(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerGranulator", "CVoiceContainerGranulator", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerGranulator()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float GrainLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "GrainLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrainLength", CallKind.ClassMember, m_classData, value); }
            }
            public float GrainCrossfadeAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "GrainCrossfadeAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrainCrossfadeAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float StartJitter
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartJitter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartJitter", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackJitter
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackJitter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackJitter", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldWraparound
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldWraparound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldWraparound", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerLoopTrigger : CVoiceContainerBase
        {
            public CVoiceContainerLoopTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerLoopTrigger", "CVoiceContainerLoopTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerLoopTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerLoopTrigger", "CVoiceContainerLoopTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerLoopTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundContainerReference Sound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "Sound", CallKind.ClassMember, m_classData); }
            }
            public float RetriggerTimeMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "RetriggerTimeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetriggerTimeMin", CallKind.ClassMember, m_classData, value); }
            }
            public float RetriggerTimeMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "RetriggerTimeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RetriggerTimeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool CrossFade
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CrossFade", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrossFade", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerNull : CVoiceContainerBase
        {
            public CVoiceContainerNull(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerNull", "CVoiceContainerNull", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerNull(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerNull", "CVoiceContainerNull", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerNull()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerParameterBlender : CVoiceContainerBase
        {
            public CVoiceContainerParameterBlender(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerParameterBlender", "CVoiceContainerParameterBlender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerParameterBlender(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerParameterBlender", "CVoiceContainerParameterBlender", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerParameterBlender()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundContainerReference FirstSound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "FirstSound", CallKind.ClassMember, m_classData); }
            }
            public CSoundContainerReference SecondSound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "SecondSound", CallKind.ClassMember, m_classData); }
            }
            public bool EnableOcclusionBlend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableOcclusionBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableOcclusionBlend", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableDistanceBlend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableDistanceBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableDistanceBlend", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerRandomSampler : CVoiceContainerBase
        {
            public CVoiceContainerRandomSampler(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerRandomSampler", "CVoiceContainerRandomSampler", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerRandomSampler(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerRandomSampler", "CVoiceContainerRandomSampler", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerRandomSampler()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Amplitude
            {
                get { return Invoker.CallNative<float>("SDKClass", "Amplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Amplitude", CallKind.ClassMember, m_classData, value); }
            }
            public float AmplitudeJitter
            {
                get { return Invoker.CallNative<float>("SDKClass", "AmplitudeJitter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AmplitudeJitter", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeJitter
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeJitter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeJitter", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLength", CallKind.ClassMember, m_classData, value); }
            }
            public int NumDelayVariations
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumDelayVariations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumDelayVariations", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerRealtimeFMSineWave : CVoiceContainerBase
        {
            public CVoiceContainerRealtimeFMSineWave(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerRealtimeFMSineWave", "CVoiceContainerRealtimeFMSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerRealtimeFMSineWave(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerRealtimeFMSineWave", "CVoiceContainerRealtimeFMSineWave", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerRealtimeFMSineWave()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float CarrierFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "CarrierFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CarrierFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float ModulatorFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModulatorFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModulatorFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float ModulatorAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModulatorAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModulatorAmount", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerSelector : CVoiceContainerBase
        {
            public CVoiceContainerSelector(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSelector", "CVoiceContainerSelector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSelector(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSelector", "CVoiceContainerSelector", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSelector()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Mode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public CSoundContainerReferenceArray SoundsToPlay
            {
                get { return Invoker.CallNative<CSoundContainerReferenceArray>("SDKClass", "SoundsToPlay", CallKind.ClassMember, m_classData); }
            }
            public float[] ProbabilityWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "ProbabilityWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProbabilityWeights", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerSet : CVoiceContainerBase
        {
            public CVoiceContainerSet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSet", "CVoiceContainerSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSet", "CVoiceContainerSet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerSetElement : ClassData
        {
            public CVoiceContainerSetElement(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSetElement", "CVoiceContainerSetElement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSetElement(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSetElement", "CVoiceContainerSetElement", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSetElement()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CSoundContainerReference Sound
            {
                get { return Invoker.CallNative<CSoundContainerReference>("SDKClass", "Sound", CallKind.ClassMember, m_classData); }
            }
            public float VolumeDB
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumeDB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumeDB", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CVoiceContainerShapedNoise : CVoiceContainerBase
        {
            public CVoiceContainerShapedNoise(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerShapedNoise", "CVoiceContainerShapedNoise", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerShapedNoise(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerShapedNoise", "CVoiceContainerShapedNoise", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerShapedNoise()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool UseCurveForFrequency
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseCurveForFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCurveForFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float Frequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "Frequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Frequency", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseCurveForResonance
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseCurveForResonance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCurveForResonance", CallKind.ClassMember, m_classData, value); }
            }
            public float Resonance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Resonance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Resonance", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseCurveForAmplitude
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseCurveForAmplitude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseCurveForAmplitude", CallKind.ClassMember, m_classData, value); }
            }
            public float GainInDecibels
            {
                get { return Invoker.CallNative<float>("SDKClass", "GainInDecibels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GainInDecibels", CallKind.ClassMember, m_classData, value); }
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerStaticAdditiveSynth : CVoiceContainerBase
        {
            public CVoiceContainerStaticAdditiveSynth(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerStaticAdditiveSynth", "CVoiceContainerStaticAdditiveSynth", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerStaticAdditiveSynth(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerStaticAdditiveSynth", "CVoiceContainerStaticAdditiveSynth", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerStaticAdditiveSynth()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoiceContainerSwitch : CVoiceContainerBase
        {
            public CVoiceContainerSwitch(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSwitch", "CVoiceContainerSwitch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSwitch(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoiceContainerSwitch", "CVoiceContainerSwitch", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoiceContainerSwitch()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CVoiceContainerBase Parent
            {
                get { return Invoker.CallNative<CVoiceContainerBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVoxelVisibility : ClassData
        {
            public CVoxelVisibility(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoxelVisibility", "CVoxelVisibility", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoxelVisibility(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVoxelVisibility", "CVoxelVisibility", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVoxelVisibility()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint BaseClusterCount
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BaseClusterCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BaseClusterCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint PVSBytesPerCluster
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PVSBytesPerCluster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PVSBytesPerCluster", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MinBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBounds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData, value); }
            }
            public float GridSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "GridSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GridSize", CallKind.ClassMember, m_classData, value); }
            }
            public uint SkyVisibilityCluster
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SkyVisibilityCluster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyVisibilityCluster", CallKind.ClassMember, m_classData, value); }
            }
            public uint SunVisibilityCluster
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SunVisibilityCluster", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SunVisibilityCluster", CallKind.ClassMember, m_classData, value); }
            }
            public VoxelVisBlockOffset_t NodeBlock
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "NodeBlock", CallKind.ClassMember, m_classData); }
            }
            public VoxelVisBlockOffset_t RegionBlock
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "RegionBlock", CallKind.ClassMember, m_classData); }
            }
            public VoxelVisBlockOffset_t EnclosedClusterListBlock
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "EnclosedClusterListBlock", CallKind.ClassMember, m_classData); }
            }
            public VoxelVisBlockOffset_t EnclosedClustersBlock
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "EnclosedClustersBlock", CallKind.ClassMember, m_classData); }
            }
            public VoxelVisBlockOffset_t MasksBlock
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "MasksBlock", CallKind.ClassMember, m_classData); }
            }
            public VoxelVisBlockOffset_t VisBlocks
            {
                get { return Invoker.CallNative<VoxelVisBlockOffset_t>("SDKClass", "VisBlocks", CallKind.ClassMember, m_classData); }
            }
        }
        public class CVPhysXSurfacePropertiesList : ClassData
        {
            public CVPhysXSurfacePropertiesList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVPhysXSurfacePropertiesList", "CVPhysXSurfacePropertiesList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVPhysXSurfacePropertiesList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CVPhysXSurfacePropertiesList", "CVPhysXSurfacePropertiesList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CVPhysXSurfacePropertiesList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class CWarpSectionAnimTag : CWarpSectionAnimTagBase
        {
            public CWarpSectionAnimTag(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWarpSectionAnimTag", "CWarpSectionAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWarpSectionAnimTag(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWarpSectionAnimTag", "CWarpSectionAnimTag", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWarpSectionAnimTag()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool WarpPosition
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WarpPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarpPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool WarpOrientation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WarpOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WarpOrientation", CallKind.ClassMember, m_classData, value); }
            }
            public CWarpSectionAnimTagBase Parent
            {
                get { return Invoker.CallNative<CWarpSectionAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWarpSectionAnimTagBase : CAnimTagBase
        {
            public CWarpSectionAnimTagBase(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWarpSectionAnimTagBase", "CWarpSectionAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWarpSectionAnimTagBase(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWarpSectionAnimTagBase", "CWarpSectionAnimTagBase", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWarpSectionAnimTagBase()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimTagBase Parent
            {
                get { return Invoker.CallNative<CAnimTagBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWaterBullet : CBaseAnimGraph
        {
            public CWaterBullet(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWaterBullet", "CWaterBullet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWaterBullet(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWaterBullet", "CWaterBullet", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWaterBullet()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseAnimGraph Parent
            {
                get { return Invoker.CallNative<CBaseAnimGraph>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWayPointHelperUpdateNode : CUnaryUpdateNode
        {
            public CWayPointHelperUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWayPointHelperUpdateNode", "CWayPointHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWayPointHelperUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWayPointHelperUpdateNode", "CWayPointHelperUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWayPointHelperUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float StartCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartCycle", CallKind.ClassMember, m_classData, value); }
            }
            public float EndCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCycle", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyGoals
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyGoals", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyGoals", CallKind.ClassMember, m_classData, value); }
            }
            public bool PreventOvershoot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreventOvershoot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventOvershoot", CallKind.ClassMember, m_classData, value); }
            }
            public bool PreventUndershoot
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PreventUndershoot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreventUndershoot", CallKind.ClassMember, m_classData, value); }
            }
            public CUnaryUpdateNode Parent
            {
                get { return Invoker.CallNative<CUnaryUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponAug : CCSWeaponBaseGun
        {
            public CWeaponAug(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponAug", "CWeaponAug", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponAug(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponAug", "CWeaponAug", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponAug()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponAWP : CCSWeaponBaseGun
        {
            public CWeaponAWP(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponAWP", "CWeaponAWP", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponAWP(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponAWP", "CWeaponAWP", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponAWP()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponBaseItem : CCSWeaponBase
        {
            public CWeaponBaseItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponBaseItem", "CWeaponBaseItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponBaseItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponBaseItem", "CWeaponBaseItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponBaseItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CountdownTimer SequenceCompleteTimer
            {
                get { return Invoker.CallNative<CountdownTimer>("SDKClass", "SequenceCompleteTimer", CallKind.ClassMember, m_classData); }
            }
            public bool Redraw
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Redraw", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Redraw", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponBizon : CCSWeaponBaseGun
        {
            public CWeaponBizon(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponBizon", "CWeaponBizon", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponBizon(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponBizon", "CWeaponBizon", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponBizon()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponCZ75a : CCSWeaponBaseGun
        {
            public CWeaponCZ75a(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponCZ75a", "CWeaponCZ75a", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponCZ75a(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponCZ75a", "CWeaponCZ75a", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponCZ75a()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool MagazineRemoved
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MagazineRemoved", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MagazineRemoved", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponElite : CCSWeaponBaseGun
        {
            public CWeaponElite(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponElite", "CWeaponElite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponElite(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponElite", "CWeaponElite", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponElite()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponFamas : CCSWeaponBaseGun
        {
            public CWeaponFamas(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponFamas", "CWeaponFamas", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponFamas(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponFamas", "CWeaponFamas", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponFamas()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponFiveSeven : CCSWeaponBaseGun
        {
            public CWeaponFiveSeven(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponFiveSeven", "CWeaponFiveSeven", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponFiveSeven(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponFiveSeven", "CWeaponFiveSeven", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponFiveSeven()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponG3SG1 : CCSWeaponBaseGun
        {
            public CWeaponG3SG1(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponG3SG1", "CWeaponG3SG1", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponG3SG1(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponG3SG1", "CWeaponG3SG1", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponG3SG1()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponGalilAR : CCSWeaponBaseGun
        {
            public CWeaponGalilAR(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponGalilAR", "CWeaponGalilAR", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponGalilAR(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponGalilAR", "CWeaponGalilAR", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponGalilAR()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponGlock : CCSWeaponBaseGun
        {
            public CWeaponGlock(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponGlock", "CWeaponGlock", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponGlock(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponGlock", "CWeaponGlock", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponGlock()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponHKP2000 : CCSWeaponBaseGun
        {
            public CWeaponHKP2000(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponHKP2000", "CWeaponHKP2000", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponHKP2000(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponHKP2000", "CWeaponHKP2000", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponHKP2000()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponM249 : CCSWeaponBaseGun
        {
            public CWeaponM249(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM249", "CWeaponM249", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM249(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM249", "CWeaponM249", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM249()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponM4A1 : CCSWeaponBaseGun
        {
            public CWeaponM4A1(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM4A1", "CWeaponM4A1", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM4A1(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM4A1", "CWeaponM4A1", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM4A1()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponM4A1Silencer : CCSWeaponBaseGun
        {
            public CWeaponM4A1Silencer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM4A1Silencer", "CWeaponM4A1Silencer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM4A1Silencer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponM4A1Silencer", "CWeaponM4A1Silencer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponM4A1Silencer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponMAC10 : CCSWeaponBaseGun
        {
            public CWeaponMAC10(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMAC10", "CWeaponMAC10", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMAC10(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMAC10", "CWeaponMAC10", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMAC10()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponMag7 : CCSWeaponBaseGun
        {
            public CWeaponMag7(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMag7", "CWeaponMag7", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMag7(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMag7", "CWeaponMag7", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMag7()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponMP5SD : CCSWeaponBaseGun
        {
            public CWeaponMP5SD(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP5SD", "CWeaponMP5SD", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP5SD(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP5SD", "CWeaponMP5SD", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP5SD()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponMP7 : CCSWeaponBaseGun
        {
            public CWeaponMP7(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP7", "CWeaponMP7", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP7(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP7", "CWeaponMP7", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP7()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponMP9 : CCSWeaponBaseGun
        {
            public CWeaponMP9(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP9", "CWeaponMP9", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP9(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponMP9", "CWeaponMP9", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponMP9()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponNegev : CCSWeaponBaseGun
        {
            public CWeaponNegev(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponNegev", "CWeaponNegev", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponNegev(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponNegev", "CWeaponNegev", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponNegev()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponNOVA : CCSWeaponBase
        {
            public CWeaponNOVA(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponNOVA", "CWeaponNOVA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponNOVA(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponNOVA", "CWeaponNOVA", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponNOVA()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponP250 : CCSWeaponBaseGun
        {
            public CWeaponP250(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponP250", "CWeaponP250", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponP250(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponP250", "CWeaponP250", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponP250()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponP90 : CCSWeaponBaseGun
        {
            public CWeaponP90(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponP90", "CWeaponP90", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponP90(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponP90", "CWeaponP90", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponP90()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponRevolver : CCSWeaponBaseGun
        {
            public CWeaponRevolver(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponRevolver", "CWeaponRevolver", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponRevolver(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponRevolver", "CWeaponRevolver", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponRevolver()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponSawedoff : CCSWeaponBase
        {
            public CWeaponSawedoff(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSawedoff", "CWeaponSawedoff", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSawedoff(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSawedoff", "CWeaponSawedoff", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSawedoff()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponSCAR20 : CCSWeaponBaseGun
        {
            public CWeaponSCAR20(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSCAR20", "CWeaponSCAR20", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSCAR20(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSCAR20", "CWeaponSCAR20", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSCAR20()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponSG556 : CCSWeaponBaseGun
        {
            public CWeaponSG556(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSG556", "CWeaponSG556", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSG556(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSG556", "CWeaponSG556", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSG556()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponSSG08 : CCSWeaponBaseGun
        {
            public CWeaponSSG08(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSSG08", "CWeaponSSG08", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSSG08(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponSSG08", "CWeaponSSG08", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponSSG08()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponTaser : CCSWeaponBaseGun
        {
            public CWeaponTaser(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponTaser", "CWeaponTaser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponTaser(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponTaser", "CWeaponTaser", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponTaser()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FireTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FireTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireTime", CallKind.ClassMember, m_classData, value); }
            }
            public int LastAttackTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastAttackTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAttackTick", CallKind.ClassMember, m_classData, value); }
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponTec9 : CCSWeaponBaseGun
        {
            public CWeaponTec9(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponTec9", "CWeaponTec9", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponTec9(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponTec9", "CWeaponTec9", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponTec9()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponUMP45 : CCSWeaponBaseGun
        {
            public CWeaponUMP45(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponUMP45", "CWeaponUMP45", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponUMP45(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponUMP45", "CWeaponUMP45", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponUMP45()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponUSPSilencer : CCSWeaponBaseGun
        {
            public CWeaponUSPSilencer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponUSPSilencer", "CWeaponUSPSilencer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponUSPSilencer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponUSPSilencer", "CWeaponUSPSilencer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponUSPSilencer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBaseGun Parent
            {
                get { return Invoker.CallNative<CCSWeaponBaseGun>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWeaponXM1014 : CCSWeaponBase
        {
            public CWeaponXM1014(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponXM1014", "CWeaponXM1014", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponXM1014(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWeaponXM1014", "CWeaponXM1014", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWeaponXM1014()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CCSWeaponBase Parent
            {
                get { return Invoker.CallNative<CCSWeaponBase>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWorld : CBaseModelEntity
        {
            public CWorld(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWorld", "CWorld", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWorld(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWorld", "CWorld", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWorld()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseModelEntity Parent
            {
                get { return Invoker.CallNative<CBaseModelEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class CWorldCompositionChunkReferenceElement_t : ClassData
        {
            public CWorldCompositionChunkReferenceElement_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWorldCompositionChunkReferenceElement_t", "CWorldCompositionChunkReferenceElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWorldCompositionChunkReferenceElement_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CWorldCompositionChunkReferenceElement_t", "CWorldCompositionChunkReferenceElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CWorldCompositionChunkReferenceElement_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrMapToLoad
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrMapToLoad", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrMapToLoad", CallKind.ClassMember, m_classData, value); }
            }
            public string StrLandmarkName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrLandmarkName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrLandmarkName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class CZeroPoseUpdateNode : CLeafUpdateNode
        {
            public CZeroPoseUpdateNode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CZeroPoseUpdateNode", "CZeroPoseUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CZeroPoseUpdateNode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("CZeroPoseUpdateNode", "CZeroPoseUpdateNode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public CZeroPoseUpdateNode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CLeafUpdateNode Parent
            {
                get { return Invoker.CallNative<CLeafUpdateNode>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class Dop26_t : ClassData
        {
            public Dop26_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Dop26_t", "Dop26_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Dop26_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Dop26_t", "Dop26_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Dop26_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Support
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Support", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Support", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class DynamicMeshDeformParams_t : ClassData
        {
            public DynamicMeshDeformParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("DynamicMeshDeformParams_t", "DynamicMeshDeformParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public DynamicMeshDeformParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("DynamicMeshDeformParams_t", "DynamicMeshDeformParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public DynamicMeshDeformParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TensionCompressScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TensionCompressScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TensionCompressScale", CallKind.ClassMember, m_classData, value); }
            }
            public float TensionStretchScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TensionStretchScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TensionStretchScale", CallKind.ClassMember, m_classData, value); }
            }
            public bool RecomputeSmoothNormalsAfterAnimation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RecomputeSmoothNormalsAfterAnimation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecomputeSmoothNormalsAfterAnimation", CallKind.ClassMember, m_classData, value); }
            }
            public bool ComputeDynamicMeshTensionAfterAnimation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ComputeDynamicMeshTensionAfterAnimation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeDynamicMeshTensionAfterAnimation", CallKind.ClassMember, m_classData, value); }
            }
            public bool SmoothNormalsAcrossUvSeams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SmoothNormalsAcrossUvSeams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SmoothNormalsAcrossUvSeams", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class DynamicVolumeDef_t : ClassData
        {
            public DynamicVolumeDef_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("DynamicVolumeDef_t", "DynamicVolumeDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public DynamicVolumeDef_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("DynamicVolumeDef_t", "DynamicVolumeDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public DynamicVolumeDef_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Source
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Source", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
            public int HullIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "HullIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HullIdx", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D SourceAnchorPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "SourceAnchorPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceAnchorPos", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D TargetAnchorPos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "TargetAnchorPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetAnchorPos", CallKind.ClassMember, m_classData, value); }
            }
            public uint AreaSrc
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AreaSrc", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AreaSrc", CallKind.ClassMember, m_classData, value); }
            }
            public uint AreaDst
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AreaDst", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AreaDst", CallKind.ClassMember, m_classData, value); }
            }
            public bool Attached
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Attached", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Attached", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class dynpitchvol_base_t : ClassData
        {
            public dynpitchvol_base_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("dynpitchvol_base_t", "dynpitchvol_base_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public dynpitchvol_base_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("dynpitchvol_base_t", "dynpitchvol_base_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public dynpitchvol_base_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Preset
            {
                get { return Invoker.CallNative<int>("SDKClass", "Preset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Preset", CallKind.ClassMember, m_classData, value); }
            }
            public int Pitchrun
            {
                get { return Invoker.CallNative<int>("SDKClass", "Pitchrun", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pitchrun", CallKind.ClassMember, m_classData, value); }
            }
            public int Pitchstart
            {
                get { return Invoker.CallNative<int>("SDKClass", "Pitchstart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pitchstart", CallKind.ClassMember, m_classData, value); }
            }
            public int Spinup
            {
                get { return Invoker.CallNative<int>("SDKClass", "Spinup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spinup", CallKind.ClassMember, m_classData, value); }
            }
            public int Spindown
            {
                get { return Invoker.CallNative<int>("SDKClass", "Spindown", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spindown", CallKind.ClassMember, m_classData, value); }
            }
            public int Volrun
            {
                get { return Invoker.CallNative<int>("SDKClass", "Volrun", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volrun", CallKind.ClassMember, m_classData, value); }
            }
            public int Volstart
            {
                get { return Invoker.CallNative<int>("SDKClass", "Volstart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volstart", CallKind.ClassMember, m_classData, value); }
            }
            public int Fadein
            {
                get { return Invoker.CallNative<int>("SDKClass", "Fadein", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fadein", CallKind.ClassMember, m_classData, value); }
            }
            public int Fadeout
            {
                get { return Invoker.CallNative<int>("SDKClass", "Fadeout", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fadeout", CallKind.ClassMember, m_classData, value); }
            }
            public int Lfotype
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lfotype", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lfotype", CallKind.ClassMember, m_classData, value); }
            }
            public int Lforate
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lforate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lforate", CallKind.ClassMember, m_classData, value); }
            }
            public int Lfomodpitch
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lfomodpitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lfomodpitch", CallKind.ClassMember, m_classData, value); }
            }
            public int Lfomodvol
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lfomodvol", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lfomodvol", CallKind.ClassMember, m_classData, value); }
            }
            public int Cspinup
            {
                get { return Invoker.CallNative<int>("SDKClass", "Cspinup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cspinup", CallKind.ClassMember, m_classData, value); }
            }
            public int Cspincount
            {
                get { return Invoker.CallNative<int>("SDKClass", "Cspincount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cspincount", CallKind.ClassMember, m_classData, value); }
            }
            public int Pitch
            {
                get { return Invoker.CallNative<int>("SDKClass", "Pitch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pitch", CallKind.ClassMember, m_classData, value); }
            }
            public int Spinupsav
            {
                get { return Invoker.CallNative<int>("SDKClass", "Spinupsav", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spinupsav", CallKind.ClassMember, m_classData, value); }
            }
            public int Spindownsav
            {
                get { return Invoker.CallNative<int>("SDKClass", "Spindownsav", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spindownsav", CallKind.ClassMember, m_classData, value); }
            }
            public int Pitchfrac
            {
                get { return Invoker.CallNative<int>("SDKClass", "Pitchfrac", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pitchfrac", CallKind.ClassMember, m_classData, value); }
            }
            public int Vol
            {
                get { return Invoker.CallNative<int>("SDKClass", "Vol", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Vol", CallKind.ClassMember, m_classData, value); }
            }
            public int Fadeinsav
            {
                get { return Invoker.CallNative<int>("SDKClass", "Fadeinsav", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fadeinsav", CallKind.ClassMember, m_classData, value); }
            }
            public int Fadeoutsav
            {
                get { return Invoker.CallNative<int>("SDKClass", "Fadeoutsav", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fadeoutsav", CallKind.ClassMember, m_classData, value); }
            }
            public int Volfrac
            {
                get { return Invoker.CallNative<int>("SDKClass", "Volfrac", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volfrac", CallKind.ClassMember, m_classData, value); }
            }
            public int Lfofrac
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lfofrac", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lfofrac", CallKind.ClassMember, m_classData, value); }
            }
            public int Lfomult
            {
                get { return Invoker.CallNative<int>("SDKClass", "Lfomult", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lfomult", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class dynpitchvol_t : dynpitchvol_base_t
        {
            public dynpitchvol_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("dynpitchvol_t", "dynpitchvol_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public dynpitchvol_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("dynpitchvol_t", "dynpitchvol_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public dynpitchvol_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public dynpitchvol_base_t Parent
            {
                get { return Invoker.CallNative<dynpitchvol_base_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EngineCountdownTimer : ClassData
        {
            public EngineCountdownTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EngineCountdownTimer", "EngineCountdownTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EngineCountdownTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EngineCountdownTimer", "EngineCountdownTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EngineCountdownTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float Timestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "Timestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timestamp", CallKind.ClassMember, m_classData, value); }
            }
            public float Timescale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Timescale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timescale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EngineLoopState_t : ClassData
        {
            public EngineLoopState_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EngineLoopState_t", "EngineLoopState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EngineLoopState_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EngineLoopState_t", "EngineLoopState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EngineLoopState_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int PlatWindowWidth
            {
                get { return Invoker.CallNative<int>("SDKClass", "PlatWindowWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlatWindowWidth", CallKind.ClassMember, m_classData, value); }
            }
            public int PlatWindowHeight
            {
                get { return Invoker.CallNative<int>("SDKClass", "PlatWindowHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlatWindowHeight", CallKind.ClassMember, m_classData, value); }
            }
            public int RenderWidth
            {
                get { return Invoker.CallNative<int>("SDKClass", "RenderWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderWidth", CallKind.ClassMember, m_classData, value); }
            }
            public int RenderHeight
            {
                get { return Invoker.CallNative<int>("SDKClass", "RenderHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderHeight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EntComponentInfo_t : ClassData
        {
            public EntComponentInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntComponentInfo_t", "EntComponentInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntComponentInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntComponentInfo_t", "EntComponentInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntComponentInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
            }
            public string CPPClassname
            {
                get { return Invoker.CallNative<string>("SDKClass", "CPPClassname", CallKind.ClassMember, m_classData); }
            }
            public string NetworkDataReferencedDescription
            {
                get { return Invoker.CallNative<string>("SDKClass", "NetworkDataReferencedDescription", CallKind.ClassMember, m_classData); }
            }
            public string NetworkDataReferencedPtrPropDescription
            {
                get { return Invoker.CallNative<string>("SDKClass", "NetworkDataReferencedPtrPropDescription", CallKind.ClassMember, m_classData); }
            }
            public int RuntimeIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "RuntimeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RuntimeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int[] BaseClassComponentHelper
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BaseClassComponentHelper", CallKind.ClassMember, m_classData); }
            }
        }
        public class EntInput_t : ClassData
        {
            public EntInput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntInput_t", "EntInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntInput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntInput_t", "EntInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntInput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EntityIOConnectionData_t : ClassData
        {
            public EntityIOConnectionData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityIOConnectionData_t", "EntityIOConnectionData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityIOConnectionData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityIOConnectionData_t", "EntityIOConnectionData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityIOConnectionData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string OutputName
            {
                get { return Invoker.CallNative<string>("SDKClass", "OutputName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputName", CallKind.ClassMember, m_classData, value); }
            }
            public uint TargetType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetType", CallKind.ClassMember, m_classData, value); }
            }
            public string TargetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "TargetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetName", CallKind.ClassMember, m_classData, value); }
            }
            public string InputName
            {
                get { return Invoker.CallNative<string>("SDKClass", "InputName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputName", CallKind.ClassMember, m_classData, value); }
            }
            public string OverrideParam
            {
                get { return Invoker.CallNative<string>("SDKClass", "OverrideParam", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideParam", CallKind.ClassMember, m_classData, value); }
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public int TimesToFire
            {
                get { return Invoker.CallNative<int>("SDKClass", "TimesToFire", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimesToFire", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EntityKeyValueData_t : ClassData
        {
            public EntityKeyValueData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityKeyValueData_t", "EntityKeyValueData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityKeyValueData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityKeyValueData_t", "EntityKeyValueData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityKeyValueData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EntityRenderAttribute_t : ClassData
        {
            public EntityRenderAttribute_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityRenderAttribute_t", "EntityRenderAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityRenderAttribute_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntityRenderAttribute_t", "EntityRenderAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntityRenderAttribute_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ID", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EntitySpottedState_t : ClassData
        {
            public EntitySpottedState_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntitySpottedState_t", "EntitySpottedState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntitySpottedState_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntitySpottedState_t", "EntitySpottedState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntitySpottedState_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Spotted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Spotted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Spotted", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] SpottedByMask
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "SpottedByMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpottedByMask", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EntOutput_t : ClassData
        {
            public EntOutput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntOutput_t", "EntOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntOutput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EntOutput_t", "EntOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EntOutput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EventAdvanceTick_t : EventSimulate_t
        {
            public EventAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventAdvanceTick_t", "EventAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventAdvanceTick_t", "EventAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int CurrentTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentTick", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentTickThisFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentTickThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentTickThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalTicksThisFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalTicksThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalTicksThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalTicks", CallKind.ClassMember, m_classData, value); }
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventAppShutdown_t : ClassData
        {
            public EventAppShutdown_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventAppShutdown_t", "EventAppShutdown_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventAppShutdown_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventAppShutdown_t", "EventAppShutdown_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventAppShutdown_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EventClientAdvanceNonRenderedFrame_t : ClassData
        {
            public EventClientAdvanceNonRenderedFrame_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientAdvanceNonRenderedFrame_t", "EventClientAdvanceNonRenderedFrame_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientAdvanceNonRenderedFrame_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientAdvanceNonRenderedFrame_t", "EventClientAdvanceNonRenderedFrame_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientAdvanceNonRenderedFrame_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EventClientAdvanceTick_t : EventAdvanceTick_t
        {
            public EventClientAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientAdvanceTick_t", "EventClientAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientAdvanceTick_t", "EventClientAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventAdvanceTick_t Parent
            {
                get { return Invoker.CallNative<EventAdvanceTick_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventClientFrameSimulate_t : ClassData
        {
            public EventClientFrameSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientFrameSimulate_t", "EventClientFrameSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientFrameSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientFrameSimulate_t", "EventClientFrameSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientFrameSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool ScheduleSendTickPacket
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ScheduleSendTickPacket", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScheduleSendTickPacket", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientOutput_t : ClassData
        {
            public EventClientOutput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientOutput_t", "EventClientOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientOutput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientOutput_t", "EventClientOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientOutput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RenderTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RenderFrameTimeUnbounded
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientPauseSimulate_t : EventSimulate_t
        {
            public EventClientPauseSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPauseSimulate_t", "EventClientPauseSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPauseSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPauseSimulate_t", "EventClientPauseSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPauseSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventClientPollInput_t : ClassData
        {
            public EventClientPollInput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPollInput_t", "EventClientPollInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPollInput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPollInput_t", "EventClientPollInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPollInput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientPollNetworking_t : ClassData
        {
            public EventClientPollNetworking_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPollNetworking_t", "EventClientPollNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPollNetworking_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPollNetworking_t", "EventClientPollNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPollNetworking_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TickCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TickCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientPostAdvanceTick_t : EventPostAdvanceTick_t
        {
            public EventClientPostAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostAdvanceTick_t", "EventClientPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostAdvanceTick_t", "EventClientPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventPostAdvanceTick_t Parent
            {
                get { return Invoker.CallNative<EventPostAdvanceTick_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventClientPostOutput_t : ClassData
        {
            public EventClientPostOutput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostOutput_t", "EventClientPostOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostOutput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostOutput_t", "EventClientPostOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostOutput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public double RenderTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RenderFrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData, value); }
            }
            public float RenderFrameTimeUnbounded
            {
                get { return Invoker.CallNative<float>("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientPostSimulate_t : EventSimulate_t
        {
            public EventClientPostSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostSimulate_t", "EventClientPostSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPostSimulate_t", "EventClientPostSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPostSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventClientPreOutput_t : ClassData
        {
            public EventClientPreOutput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPreOutput_t", "EventClientPreOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPreOutput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPreOutput_t", "EventClientPreOutput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPreOutput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public double RenderTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderTime", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderFrameTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderFrameTimeUnbounded
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData, value); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool RenderOnly
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOnly", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientPreSimulate_t : EventSimulate_t
        {
            public EventClientPreSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPreSimulate_t", "EventClientPreSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPreSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientPreSimulate_t", "EventClientPreSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientPreSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventClientProcessGameInput_t : ClassData
        {
            public EventClientProcessGameInput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessGameInput_t", "EventClientProcessGameInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessGameInput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessGameInput_t", "EventClientProcessGameInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessGameInput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientProcessInput_t : ClassData
        {
            public EventClientProcessInput_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessInput_t", "EventClientProcessInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessInput_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessInput_t", "EventClientProcessInput_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessInput_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public float TickInterval
            {
                get { return Invoker.CallNative<float>("SDKClass", "TickInterval", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickInterval", CallKind.ClassMember, m_classData, value); }
            }
            public double TickStartTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "TickStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickStartTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientProcessNetworking_t : ClassData
        {
            public EventClientProcessNetworking_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessNetworking_t", "EventClientProcessNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessNetworking_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientProcessNetworking_t", "EventClientProcessNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientProcessNetworking_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TickCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "TickCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientSceneSystemThreadStateChange_t : ClassData
        {
            public EventClientSceneSystemThreadStateChange_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientSceneSystemThreadStateChange_t", "EventClientSceneSystemThreadStateChange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientSceneSystemThreadStateChange_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientSceneSystemThreadStateChange_t", "EventClientSceneSystemThreadStateChange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientSceneSystemThreadStateChange_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool ThreadsActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ThreadsActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThreadsActive", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventClientSimulate_t : EventSimulate_t
        {
            public EventClientSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientSimulate_t", "EventClientSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventClientSimulate_t", "EventClientSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventClientSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventFrameBoundary_t : ClassData
        {
            public EventFrameBoundary_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventFrameBoundary_t", "EventFrameBoundary_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventFrameBoundary_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventFrameBoundary_t", "EventFrameBoundary_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventFrameBoundary_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventModInitialized_t : ClassData
        {
            public EventModInitialized_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventModInitialized_t", "EventModInitialized_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventModInitialized_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventModInitialized_t", "EventModInitialized_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventModInitialized_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EventPostAdvanceTick_t : EventSimulate_t
        {
            public EventPostAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPostAdvanceTick_t", "EventPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPostAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPostAdvanceTick_t", "EventPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPostAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int CurrentTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentTick", CallKind.ClassMember, m_classData, value); }
            }
            public int CurrentTickThisFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "CurrentTickThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurrentTickThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalTicksThisFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalTicksThisFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalTicksThisFrame", CallKind.ClassMember, m_classData, value); }
            }
            public int TotalTicks
            {
                get { return Invoker.CallNative<int>("SDKClass", "TotalTicks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TotalTicks", CallKind.ClassMember, m_classData, value); }
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventPostDataUpdate_t : ClassData
        {
            public EventPostDataUpdate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPostDataUpdate_t", "EventPostDataUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPostDataUpdate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPostDataUpdate_t", "EventPostDataUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPostDataUpdate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Count
            {
                get { return Invoker.CallNative<int>("SDKClass", "Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Count", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventPreDataUpdate_t : ClassData
        {
            public EventPreDataUpdate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPreDataUpdate_t", "EventPreDataUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPreDataUpdate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventPreDataUpdate_t", "EventPreDataUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventPreDataUpdate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Count
            {
                get { return Invoker.CallNative<int>("SDKClass", "Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Count", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventProfileStorageAvailable_t : ClassData
        {
            public EventProfileStorageAvailable_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventProfileStorageAvailable_t", "EventProfileStorageAvailable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventProfileStorageAvailable_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventProfileStorageAvailable_t", "EventProfileStorageAvailable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventProfileStorageAvailable_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SplitScreenSlot
            {
                get { return Invoker.CallNative<int>("SDKClass", "SplitScreenSlot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SplitScreenSlot", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventServerAdvanceTick_t : EventAdvanceTick_t
        {
            public EventServerAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerAdvanceTick_t", "EventServerAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerAdvanceTick_t", "EventServerAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventAdvanceTick_t Parent
            {
                get { return Invoker.CallNative<EventAdvanceTick_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerBeginAsyncPostTickWork_t : EventPostAdvanceTick_t
        {
            public EventServerBeginAsyncPostTickWork_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerBeginAsyncPostTickWork_t", "EventServerBeginAsyncPostTickWork_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerBeginAsyncPostTickWork_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerBeginAsyncPostTickWork_t", "EventServerBeginAsyncPostTickWork_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerBeginAsyncPostTickWork_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventPostAdvanceTick_t Parent
            {
                get { return Invoker.CallNative<EventPostAdvanceTick_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerEndAsyncPostTickWork_t : ClassData
        {
            public EventServerEndAsyncPostTickWork_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerEndAsyncPostTickWork_t", "EventServerEndAsyncPostTickWork_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerEndAsyncPostTickWork_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerEndAsyncPostTickWork_t", "EventServerEndAsyncPostTickWork_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerEndAsyncPostTickWork_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class EventServerPollNetworking_t : EventSimulate_t
        {
            public EventServerPollNetworking_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPollNetworking_t", "EventServerPollNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPollNetworking_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPollNetworking_t", "EventServerPollNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPollNetworking_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerPostAdvanceTick_t : EventPostAdvanceTick_t
        {
            public EventServerPostAdvanceTick_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPostAdvanceTick_t", "EventServerPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPostAdvanceTick_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPostAdvanceTick_t", "EventServerPostAdvanceTick_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPostAdvanceTick_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventPostAdvanceTick_t Parent
            {
                get { return Invoker.CallNative<EventPostAdvanceTick_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerPostSimulate_t : EventSimulate_t
        {
            public EventServerPostSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPostSimulate_t", "EventServerPostSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPostSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerPostSimulate_t", "EventServerPostSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerPostSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerProcessNetworking_t : EventSimulate_t
        {
            public EventServerProcessNetworking_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerProcessNetworking_t", "EventServerProcessNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerProcessNetworking_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerProcessNetworking_t", "EventServerProcessNetworking_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerProcessNetworking_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventServerSimulate_t : EventSimulate_t
        {
            public EventServerSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerSimulate_t", "EventServerSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventServerSimulate_t", "EventServerSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventServerSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EventSimulate_t Parent
            {
                get { return Invoker.CallNative<EventSimulate_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class EventSetTime_t : ClassData
        {
            public EventSetTime_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSetTime_t", "EventSetTime_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSetTime_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSetTime_t", "EventSetTime_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSetTime_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public int ClientOutputFrames
            {
                get { return Invoker.CallNative<int>("SDKClass", "ClientOutputFrames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClientOutputFrames", CallKind.ClassMember, m_classData, value); }
            }
            public double RealTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderTime", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderFrameTime
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTime", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderFrameTimeUnbounded
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTimeUnbounded", CallKind.ClassMember, m_classData, value); }
            }
            public double RenderFrameTimeUnscaled
            {
                get { return Invoker.CallNative<double>("SDKClass", "RenderFrameTimeUnscaled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderFrameTimeUnscaled", CallKind.ClassMember, m_classData, value); }
            }
            public double TickRemainder
            {
                get { return Invoker.CallNative<double>("SDKClass", "TickRemainder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TickRemainder", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventSimpleLoopFrameUpdate_t : ClassData
        {
            public EventSimpleLoopFrameUpdate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSimpleLoopFrameUpdate_t", "EventSimpleLoopFrameUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSimpleLoopFrameUpdate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSimpleLoopFrameUpdate_t", "EventSimpleLoopFrameUpdate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSimpleLoopFrameUpdate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public float RealTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RealTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RealTime", CallKind.ClassMember, m_classData, value); }
            }
            public float FrameTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrameTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventSimulate_t : ClassData
        {
            public EventSimulate_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSimulate_t", "EventSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSimulate_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSimulate_t", "EventSimulate_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSimulate_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public EngineLoopState_t LoopState
            {
                get { return Invoker.CallNative<EngineLoopState_t>("SDKClass", "LoopState", CallKind.ClassMember, m_classData); }
            }
            public bool FirstTick
            {
                get { return Invoker.CallNative<bool>("SDKClass", "FirstTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstTick", CallKind.ClassMember, m_classData, value); }
            }
            public bool LastTick
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LastTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastTick", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class EventSplitScreenStateChanged_t : ClassData
        {
            public EventSplitScreenStateChanged_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSplitScreenStateChanged_t", "EventSplitScreenStateChanged_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSplitScreenStateChanged_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("EventSplitScreenStateChanged_t", "EventSplitScreenStateChanged_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public EventSplitScreenStateChanged_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class Extent : ClassData
        {
            public Extent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Extent", "Extent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Extent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Extent", "Extent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Extent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Lo
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Lo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lo", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Hi
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Hi", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hi", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ExtraVertexStreamOverride_t : BaseSceneObjectOverride_t
        {
            public ExtraVertexStreamOverride_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ExtraVertexStreamOverride_t", "ExtraVertexStreamOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ExtraVertexStreamOverride_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ExtraVertexStreamOverride_t", "ExtraVertexStreamOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ExtraVertexStreamOverride_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint SubSceneObject
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SubSceneObject", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubSceneObject", CallKind.ClassMember, m_classData, value); }
            }
            public uint DrawCallIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint AdditionalMeshDrawPrimitiveFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AdditionalMeshDrawPrimitiveFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AdditionalMeshDrawPrimitiveFlags", CallKind.ClassMember, m_classData, value); }
            }
            public CRenderBufferBinding ExtraBufferBinding
            {
                get { return Invoker.CallNative<CRenderBufferBinding>("SDKClass", "ExtraBufferBinding", CallKind.ClassMember, m_classData); }
            }
            public BaseSceneObjectOverride_t Parent
            {
                get { return Invoker.CallNative<BaseSceneObjectOverride_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FakeEntity_tAPI : ClassData
        {
            public FakeEntity_tAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntity_tAPI", "FakeEntity_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntity_tAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntity_tAPI", "FakeEntity_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntity_tAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class FakeEntityDerivedA_tAPI : ClassData
        {
            public FakeEntityDerivedA_tAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntityDerivedA_tAPI", "FakeEntityDerivedA_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntityDerivedA_tAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntityDerivedA_tAPI", "FakeEntityDerivedA_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntityDerivedA_tAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class FakeEntityDerivedB_tAPI : ClassData
        {
            public FakeEntityDerivedB_tAPI(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntityDerivedB_tAPI", "FakeEntityDerivedB_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntityDerivedB_tAPI(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FakeEntityDerivedB_tAPI", "FakeEntityDerivedB_tAPI", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FakeEntityDerivedB_tAPI()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class FeAnimStrayRadius_t : ClassData
        {
            public FeAnimStrayRadius_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAnimStrayRadius_t", "FeAnimStrayRadius_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAnimStrayRadius_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAnimStrayRadius_t", "FeAnimStrayRadius_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAnimStrayRadius_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public float RelaxationFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeAntiTunnelGroupBuild_t : ClassData
        {
            public FeAntiTunnelGroupBuild_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelGroupBuild_t", "FeAntiTunnelGroupBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelGroupBuild_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelGroupBuild_t", "FeAntiTunnelGroupBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelGroupBuild_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint VertexMapHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint CollisionMask
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeAntiTunnelProbe_t : ClassData
        {
            public FeAntiTunnelProbe_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelProbe_t", "FeAntiTunnelProbe_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelProbe_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelProbe_t", "FeAntiTunnelProbe_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelProbe_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ProbeNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ProbeNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProbeNode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Count
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Count", CallKind.ClassMember, m_classData, value); }
            }
            public uint Begin
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Begin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Begin", CallKind.ClassMember, m_classData, value); }
            }
            public float ActivationDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "ActivationDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActivationDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float CurvatureRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "CurvatureRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CurvatureRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float Bias
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bias", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeAntiTunnelProbeBuild_t : ClassData
        {
            public FeAntiTunnelProbeBuild_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelProbeBuild_t", "FeAntiTunnelProbeBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelProbeBuild_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAntiTunnelProbeBuild_t", "FeAntiTunnelProbeBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAntiTunnelProbeBuild_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public float ActivationDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "ActivationDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ActivationDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float Bias
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bias", CallKind.ClassMember, m_classData, value); }
            }
            public float Curvature
            {
                get { return Invoker.CallNative<float>("SDKClass", "Curvature", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Curvature", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ProbeNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ProbeNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProbeNode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] TargetNodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "TargetNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetNodes", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeAxialEdgeBend_t : ClassData
        {
            public FeAxialEdgeBend_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAxialEdgeBend_t", "FeAxialEdgeBend_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAxialEdgeBend_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeAxialEdgeBend_t", "FeAxialEdgeBend_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeAxialEdgeBend_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Te
            {
                get { return Invoker.CallNative<float>("SDKClass", "Te", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Te", CallKind.ClassMember, m_classData, value); }
            }
            public float Tv
            {
                get { return Invoker.CallNative<float>("SDKClass", "Tv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tv", CallKind.ClassMember, m_classData, value); }
            }
            public float Dist
            {
                get { return Invoker.CallNative<float>("SDKClass", "Dist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dist", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Weight
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeBandBendLimit_t : ClassData
        {
            public FeBandBendLimit_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBandBendLimit_t", "FeBandBendLimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBandBendLimit_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBandBendLimit_t", "FeBandBendLimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBandBendLimit_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float DistMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistMin", CallKind.ClassMember, m_classData, value); }
            }
            public float DistMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistMax", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeBoxRigid_t : ClassData
        {
            public FeBoxRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBoxRigid_t", "FeBoxRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBoxRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBoxRigid_t", "FeBoxRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBoxRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Size
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Size", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Size", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexMapIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeBuildBoxRigid_t : FeBoxRigid_t
        {
            public FeBuildBoxRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildBoxRigid_t", "FeBuildBoxRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildBoxRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildBoxRigid_t", "FeBuildBoxRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildBoxRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public uint VertexMapHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint AntitunnelGroupBits
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData, value); }
            }
            public FeBoxRigid_t Parent
            {
                get { return Invoker.CallNative<FeBoxRigid_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FeBuildSDFRigid_t : FeSDFRigid_t
        {
            public FeBuildSDFRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildSDFRigid_t", "FeBuildSDFRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildSDFRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildSDFRigid_t", "FeBuildSDFRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildSDFRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public uint VertexMapHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint AntitunnelGroupBits
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData, value); }
            }
            public FeSDFRigid_t Parent
            {
                get { return Invoker.CallNative<FeSDFRigid_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FeBuildSphereRigid_t : FeSphereRigid_t
        {
            public FeBuildSphereRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildSphereRigid_t", "FeBuildSphereRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildSphereRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildSphereRigid_t", "FeBuildSphereRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildSphereRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public uint VertexMapHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint AntitunnelGroupBits
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData, value); }
            }
            public FeSphereRigid_t Parent
            {
                get { return Invoker.CallNative<FeSphereRigid_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FeBuildTaperedCapsuleRigid_t : FeTaperedCapsuleRigid_t
        {
            public FeBuildTaperedCapsuleRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildTaperedCapsuleRigid_t", "FeBuildTaperedCapsuleRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildTaperedCapsuleRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeBuildTaperedCapsuleRigid_t", "FeBuildTaperedCapsuleRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeBuildTaperedCapsuleRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public uint VertexMapHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint AntitunnelGroupBits
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntitunnelGroupBits", CallKind.ClassMember, m_classData, value); }
            }
            public FeTaperedCapsuleRigid_t Parent
            {
                get { return Invoker.CallNative<FeTaperedCapsuleRigid_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FeCollisionPlane_t : ClassData
        {
            public FeCollisionPlane_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCollisionPlane_t", "FeCollisionPlane_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCollisionPlane_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCollisionPlane_t", "FeCollisionPlane_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCollisionPlane_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort CtrlParent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ChildNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ChildNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChildNode", CallKind.ClassMember, m_classData, value); }
            }
            public RnPlane_t Plane
            {
                get { return Invoker.CallNative<RnPlane_t>("SDKClass", "Plane", CallKind.ClassMember, m_classData); }
            }
            public float Strength
            {
                get { return Invoker.CallNative<float>("SDKClass", "Strength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strength", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeCtrlOffset_t : ClassData
        {
            public FeCtrlOffset_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlOffset_t", "FeCtrlOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlOffset_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlOffset_t", "FeCtrlOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlOffset_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CtrlParent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CtrlChild
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeCtrlOsOffset_t : ClassData
        {
            public FeCtrlOsOffset_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlOsOffset_t", "FeCtrlOsOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlOsOffset_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlOsOffset_t", "FeCtrlOsOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlOsOffset_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort CtrlParent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CtrlChild
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeCtrlSoftOffset_t : ClassData
        {
            public FeCtrlSoftOffset_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlSoftOffset_t", "FeCtrlSoftOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlSoftOffset_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeCtrlSoftOffset_t", "FeCtrlSoftOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeCtrlSoftOffset_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort CtrlParent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlParent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CtrlChild
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlChild", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public float Alpha
            {
                get { return Invoker.CallNative<float>("SDKClass", "Alpha", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Alpha", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeDynKinLink_t : ClassData
        {
            public FeDynKinLink_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeDynKinLink_t", "FeDynKinLink_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeDynKinLink_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeDynKinLink_t", "FeDynKinLink_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeDynKinLink_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Parent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Child
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Child", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeEdgeDesc_t : ClassData
        {
            public FeEdgeDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeEdgeDesc_t", "FeEdgeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeEdgeDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeEdgeDesc_t", "FeEdgeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeEdgeDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Edge
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Edge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Edge", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Side
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Side", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Side", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] VirtElem
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "VirtElem", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VirtElem", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeEffectDesc_t : ClassData
        {
            public FeEffectDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeEffectDesc_t", "FeEffectDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeEffectDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeEffectDesc_t", "FeEffectDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeEffectDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeFitInfluence_t : ClassData
        {
            public FeFitInfluence_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitInfluence_t", "FeFitInfluence_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitInfluence_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitInfluence_t", "FeFitInfluence_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitInfluence_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint VertexNode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "VertexNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexNode", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public uint MatrixNode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MatrixNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatrixNode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeFitMatrix_t : ClassData
        {
            public FeFitMatrix_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitMatrix_t", "FeFitMatrix_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitMatrix_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitMatrix_t", "FeFitMatrix_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitMatrix_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Center
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public ushort End
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort BeginDynamic
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "BeginDynamic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BeginDynamic", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeFitWeight_t : ClassData
        {
            public FeFitWeight_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitWeight_t", "FeFitWeight_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitWeight_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFitWeight_t", "FeFitWeight_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFitWeight_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Dummy
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Dummy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dummy", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeFollowNode_t : ClassData
        {
            public FeFollowNode_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFollowNode_t", "FeFollowNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFollowNode_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeFollowNode_t", "FeFollowNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeFollowNode_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort ParentNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ParentNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentNode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ChildNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ChildNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChildNode", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeHingeLimit_t : ClassData
        {
            public FeHingeLimit_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeHingeLimit_t", "FeHingeLimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeHingeLimit_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeHingeLimit_t", "FeHingeLimit_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeHingeLimit_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleCenter
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleCenter", CallKind.ClassMember, m_classData, value); }
            }
            public float AngleExtents
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngleExtents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngleExtents", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeHingeLimitBuild_t : ClassData
        {
            public FeHingeLimitBuild_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeHingeLimitBuild_t", "FeHingeLimitBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeHingeLimitBuild_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeHingeLimitBuild_t", "FeHingeLimitBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeHingeLimitBuild_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float LimitCW
            {
                get { return Invoker.CallNative<float>("SDKClass", "LimitCW", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LimitCW", CallKind.ClassMember, m_classData, value); }
            }
            public float LimitCCW
            {
                get { return Invoker.CallNative<float>("SDKClass", "LimitCCW", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LimitCCW", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeKelagerBend2_t : ClassData
        {
            public FeKelagerBend2_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeKelagerBend2_t", "FeKelagerBend2_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeKelagerBend2_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeKelagerBend2_t", "FeKelagerBend2_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeKelagerBend2_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Weight
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Reserved
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Reserved", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Reserved", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeMorphLayerDepr_t : ClassData
        {
            public FeMorphLayerDepr_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeMorphLayerDepr_t", "FeMorphLayerDepr_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeMorphLayerDepr_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeMorphLayerDepr_t", "FeMorphLayerDepr_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeMorphLayerDepr_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Nodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Nodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Nodes", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] InitPos
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "InitPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitPos", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Gravity
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Gravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Gravity", CallKind.ClassMember, m_classData, value); }
            }
            public float[] GoalStrength
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "GoalStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float[] GoalDamping
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "GoalDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalDamping", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeNodeBase_t : ClassData
        {
            public FeNodeBase_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeBase_t", "FeNodeBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeBase_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeBase_t", "FeNodeBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeBase_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Dummy
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Dummy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dummy", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeNodeIntegrator_t : ClassData
        {
            public FeNodeIntegrator_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeIntegrator_t", "FeNodeIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeIntegrator_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeIntegrator_t", "FeNodeIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeIntegrator_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float PointDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "PointDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PointDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimationForceAttraction
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimationForceAttraction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationForceAttraction", CallKind.ClassMember, m_classData, value); }
            }
            public float AnimationVertexAttraction
            {
                get { return Invoker.CallNative<float>("SDKClass", "AnimationVertexAttraction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationVertexAttraction", CallKind.ClassMember, m_classData, value); }
            }
            public float Gravity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Gravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Gravity", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeNodeReverseOffset_t : ClassData
        {
            public FeNodeReverseOffset_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeReverseOffset_t", "FeNodeReverseOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeReverseOffset_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeReverseOffset_t", "FeNodeReverseOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeReverseOffset_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public ushort BoneCtrl
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "BoneCtrl", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneCtrl", CallKind.ClassMember, m_classData, value); }
            }
            public ushort TargetNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "TargetNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetNode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeNodeWindBase_t : ClassData
        {
            public FeNodeWindBase_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeWindBase_t", "FeNodeWindBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeWindBase_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeNodeWindBase_t", "FeNodeWindBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeNodeWindBase_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class FeProxyVertexMap_t : ClassData
        {
            public FeProxyVertexMap_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeProxyVertexMap_t", "FeProxyVertexMap_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeProxyVertexMap_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeProxyVertexMap_t", "FeProxyVertexMap_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeProxyVertexMap_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeQuad_t : ClassData
        {
            public FeQuad_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeQuad_t", "FeQuad_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeQuad_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeQuad_t", "FeQuad_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeQuad_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float Slack
            {
                get { return Invoker.CallNative<float>("SDKClass", "Slack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slack", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D[] Shape
            {
                get { return Invoker.CallNative<Vector4D[]>("SDKClass", "Shape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Shape", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeRigidColliderIndices_t : ClassData
        {
            public FeRigidColliderIndices_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeRigidColliderIndices_t", "FeRigidColliderIndices_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeRigidColliderIndices_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeRigidColliderIndices_t", "FeRigidColliderIndices_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeRigidColliderIndices_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort TaperedCapsuleRigidIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "TaperedCapsuleRigidIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TaperedCapsuleRigidIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort SphereRigidIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "SphereRigidIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SphereRigidIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort BoxRigidIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "BoxRigidIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoxRigidIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort SDFRigidIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "SDFRigidIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SDFRigidIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionPlaneIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionPlaneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionPlaneIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeRodConstraint_t : ClassData
        {
            public FeRodConstraint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeRodConstraint_t", "FeRodConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeRodConstraint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeRodConstraint_t", "FeRodConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeRodConstraint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public float MinDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinDist", CallKind.ClassMember, m_classData, value); }
            }
            public float RelaxationFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSDFRigid_t : ClassData
        {
            public FeSDFRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSDFRigid_t", "FeSDFRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSDFRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSDFRigid_t", "FeSDFRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSDFRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D LocalMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocalMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalMax", CallKind.ClassMember, m_classData, value); }
            }
            public float Bounciness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bounciness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bounciness", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexMapIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Distances
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Distances", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Distances", CallKind.ClassMember, m_classData, value); }
            }
            public int Width
            {
                get { return Invoker.CallNative<int>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public int Height
            {
                get { return Invoker.CallNative<int>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public int Depth
            {
                get { return Invoker.CallNative<int>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdAnimStrayRadius_t : ClassData
        {
            public FeSimdAnimStrayRadius_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdAnimStrayRadius_t", "FeSimdAnimStrayRadius_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdAnimStrayRadius_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdAnimStrayRadius_t", "FeSimdAnimStrayRadius_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdAnimStrayRadius_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxDist", CallKind.ClassMember, m_classData, value); }
            }
            public float RelaxationFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelaxationFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdNodeBase_t : ClassData
        {
            public FeSimdNodeBase_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdNodeBase_t", "FeSimdNodeBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdNodeBase_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdNodeBase_t", "FeSimdNodeBase_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdNodeBase_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Dummy
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Dummy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dummy", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdQuad_t : ClassData
        {
            public FeSimdQuad_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdQuad_t", "FeSimdQuad_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdQuad_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdQuad_t", "FeSimdQuad_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdQuad_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdRodConstraint_t : ClassData
        {
            public FeSimdRodConstraint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdRodConstraint_t", "FeSimdRodConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdRodConstraint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdRodConstraint_t", "FeSimdRodConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdRodConstraint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdRodConstraintAnim_t : ClassData
        {
            public FeSimdRodConstraintAnim_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdRodConstraintAnim_t", "FeSimdRodConstraintAnim_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdRodConstraintAnim_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdRodConstraintAnim_t", "FeSimdRodConstraintAnim_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdRodConstraintAnim_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdSpringIntegrator_t : ClassData
        {
            public FeSimdSpringIntegrator_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdSpringIntegrator_t", "FeSimdSpringIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdSpringIntegrator_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdSpringIntegrator_t", "FeSimdSpringIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdSpringIntegrator_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringRestLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringRestLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringRestLength", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringConstant
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringDamping", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSimdTri_t : ClassData
        {
            public FeSimdTri_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdTri_t", "FeSimdTri_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdTri_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSimdTri_t", "FeSimdTri_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSimdTri_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] Node
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSoftParent_t : ClassData
        {
            public FeSoftParent_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSoftParent_t", "FeSoftParent_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSoftParent_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSoftParent_t", "FeSoftParent_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSoftParent_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Parent
            {
                get { return Invoker.CallNative<int>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public float Alpha
            {
                get { return Invoker.CallNative<float>("SDKClass", "Alpha", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Alpha", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSourceEdge_t : ClassData
        {
            public FeSourceEdge_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSourceEdge_t", "FeSourceEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSourceEdge_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSourceEdge_t", "FeSourceEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSourceEdge_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSphereRigid_t : ClassData
        {
            public FeSphereRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSphereRigid_t", "FeSphereRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSphereRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSphereRigid_t", "FeSphereRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSphereRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Sphere
            {
                get { return Invoker.CallNative<float>("SDKClass", "Sphere", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sphere", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexMapIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeSpringIntegrator_t : ClassData
        {
            public FeSpringIntegrator_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSpringIntegrator_t", "FeSpringIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSpringIntegrator_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeSpringIntegrator_t", "FeSpringIntegrator_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeSpringIntegrator_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringRestLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringRestLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringRestLength", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringConstant
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringConstant", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringDamping", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeStiffHingeBuild_t : ClassData
        {
            public FeStiffHingeBuild_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeStiffHingeBuild_t", "FeStiffHingeBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeStiffHingeBuild_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeStiffHingeBuild_t", "FeStiffHingeBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeStiffHingeBuild_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MaxAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float Strength
            {
                get { return Invoker.CallNative<float>("SDKClass", "Strength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strength", CallKind.ClassMember, m_classData, value); }
            }
            public float[] MotionBias
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "MotionBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotionBias", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeTaperedCapsuleRigid_t : ClassData
        {
            public FeTaperedCapsuleRigid_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTaperedCapsuleRigid_t", "FeTaperedCapsuleRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTaperedCapsuleRigid_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTaperedCapsuleRigid_t", "FeTaperedCapsuleRigid_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTaperedCapsuleRigid_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] Sphere
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Sphere", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sphere", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexMapIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeTaperedCapsuleStretch_t : ClassData
        {
            public FeTaperedCapsuleStretch_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTaperedCapsuleStretch_t", "FeTaperedCapsuleStretch_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTaperedCapsuleStretch_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTaperedCapsuleStretch_t", "FeTaperedCapsuleStretch_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTaperedCapsuleStretch_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort CollisionMask
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionMask", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Dummy
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Dummy", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Dummy", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Radius
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeTreeChildren_t : ClassData
        {
            public FeTreeChildren_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTreeChildren_t", "FeTreeChildren_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTreeChildren_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTreeChildren_t", "FeTreeChildren_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTreeChildren_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Child
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Child", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeTri_t : ClassData
        {
            public FeTri_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTri_t", "FeTri_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTri_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTri_t", "FeTri_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTri_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeTwistConstraint_t : ClassData
        {
            public FeTwistConstraint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTwistConstraint_t", "FeTwistConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTwistConstraint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeTwistConstraint_t", "FeTwistConstraint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeTwistConstraint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort NodeOrient
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NodeOrient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeOrient", CallKind.ClassMember, m_classData, value); }
            }
            public ushort NodeEnd
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NodeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistRelax
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistRelax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistRelax", CallKind.ClassMember, m_classData, value); }
            }
            public float SwingRelax
            {
                get { return Invoker.CallNative<float>("SDKClass", "SwingRelax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SwingRelax", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeVertexMapBuild_t : ClassData
        {
            public FeVertexMapBuild_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeVertexMapBuild_t", "FeVertexMapBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeVertexMapBuild_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeVertexMapBuild_t", "FeVertexMapBuild_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeVertexMapBuild_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string VertexMapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "VertexMapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapName", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle Color
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumetricSolveStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumetricSolveStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumetricSolveStrength", CallKind.ClassMember, m_classData, value); }
            }
            public int ScaleSourceNode
            {
                get { return Invoker.CallNative<int>("SDKClass", "ScaleSourceNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleSourceNode", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Weights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weights", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeVertexMapDesc_t : ClassData
        {
            public FeVertexMapDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeVertexMapDesc_t", "FeVertexMapDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeVertexMapDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeVertexMapDesc_t", "FeVertexMapDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeVertexMapDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameHash", CallKind.ClassMember, m_classData, value); }
            }
            public uint Color
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexBase
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexBase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexBase", CallKind.ClassMember, m_classData, value); }
            }
            public ushort VertexCount
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "VertexCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint MapOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "MapOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MapOffset", CallKind.ClassMember, m_classData, value); }
            }
            public uint NodeListOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NodeListOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeListOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D CenterOfMass
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "CenterOfMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CenterOfMass", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumetricSolveStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumetricSolveStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumetricSolveStrength", CallKind.ClassMember, m_classData, value); }
            }
            public short ScaleSourceNode
            {
                get { return Invoker.CallNative<short>("SDKClass", "ScaleSourceNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScaleSourceNode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort NodeListCount
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NodeListCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeListCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeWeightedNode_t : ClassData
        {
            public FeWeightedNode_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeWeightedNode_t", "FeWeightedNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeWeightedNode_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeWeightedNode_t", "FeWeightedNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeWeightedNode_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Node
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Weight
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FeWorldCollisionParams_t : ClassData
        {
            public FeWorldCollisionParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeWorldCollisionParams_t", "FeWorldCollisionParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeWorldCollisionParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FeWorldCollisionParams_t", "FeWorldCollisionParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FeWorldCollisionParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float WorldFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "WorldFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldFriction", CallKind.ClassMember, m_classData, value); }
            }
            public float GroundFriction
            {
                get { return Invoker.CallNative<float>("SDKClass", "GroundFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundFriction", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ListBegin
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ListBegin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ListBegin", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ListEnd
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ListEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ListEnd", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FilterDamageType : CBaseFilter
        {
            public FilterDamageType(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FilterDamageType", "FilterDamageType", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FilterDamageType(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FilterDamageType", "FilterDamageType", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FilterDamageType()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int DamageType
            {
                get { return Invoker.CallNative<int>("SDKClass", "DamageType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DamageType", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class FilterHealth : CBaseFilter
        {
            public FilterHealth(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FilterHealth", "FilterHealth", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FilterHealth(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FilterHealth", "FilterHealth", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FilterHealth()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool AdrenalineActive
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AdrenalineActive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AdrenalineActive", CallKind.ClassMember, m_classData, value); }
            }
            public int HealthMin
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthMin", CallKind.ClassMember, m_classData, value); }
            }
            public int HealthMax
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthMax", CallKind.ClassMember, m_classData, value); }
            }
            public CBaseFilter Parent
            {
                get { return Invoker.CallNative<CBaseFilter>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class fogparams_t : ClassData
        {
            public fogparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("fogparams_t", "fogparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public fogparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("fogparams_t", "fogparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public fogparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D DirPrimary
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "DirPrimary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirPrimary", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorPrimary
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorPrimary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorPrimary", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorSecondary
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorSecondary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorSecondary", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorPrimaryLerpTo
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorPrimaryLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorPrimaryLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle ColorSecondaryLerpTo
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "ColorSecondaryLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorSecondaryLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public float Start
            {
                get { return Invoker.CallNative<float>("SDKClass", "Start", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Start", CallKind.ClassMember, m_classData, value); }
            }
            public float End
            {
                get { return Invoker.CallNative<float>("SDKClass", "End", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "End", CallKind.ClassMember, m_classData, value); }
            }
            public float Farz
            {
                get { return Invoker.CallNative<float>("SDKClass", "Farz", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Farz", CallKind.ClassMember, m_classData, value); }
            }
            public float Maxdensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Maxdensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Maxdensity", CallKind.ClassMember, m_classData, value); }
            }
            public float Exponent
            {
                get { return Invoker.CallNative<float>("SDKClass", "Exponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Exponent", CallKind.ClassMember, m_classData, value); }
            }
            public float HDRColorScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HDRColorScale", CallKind.ClassMember, m_classData, value); }
            }
            public float SkyboxFogFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "SkyboxFogFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyboxFogFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float SkyboxFogFactorLerpTo
            {
                get { return Invoker.CallNative<float>("SDKClass", "SkyboxFogFactorLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyboxFogFactorLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public float StartLerpTo
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public float EndLerpTo
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxdensityLerpTo
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxdensityLerpTo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxdensityLerpTo", CallKind.ClassMember, m_classData, value); }
            }
            public float Lerptime
            {
                get { return Invoker.CallNative<float>("SDKClass", "Lerptime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Lerptime", CallKind.ClassMember, m_classData, value); }
            }
            public float Duration
            {
                get { return Invoker.CallNative<float>("SDKClass", "Duration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Duration", CallKind.ClassMember, m_classData, value); }
            }
            public float Blendtobackground
            {
                get { return Invoker.CallNative<float>("SDKClass", "Blendtobackground", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Blendtobackground", CallKind.ClassMember, m_classData, value); }
            }
            public float Scattering
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scattering", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scattering", CallKind.ClassMember, m_classData, value); }
            }
            public float Locallightscale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Locallightscale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Locallightscale", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enable", CallKind.ClassMember, m_classData, value); }
            }
            public bool Blend
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Blend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Blend", CallKind.ClassMember, m_classData, value); }
            }
            public bool Padding
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Padding", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Padding", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class fogplayerparams_t : ClassData
        {
            public fogplayerparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("fogplayerparams_t", "fogplayerparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public fogplayerparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("fogplayerparams_t", "fogplayerparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public fogplayerparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CFogController Ctrl
            {
                get { return Invoker.CallNative<CFogController>("SDKClass", "Ctrl", CallKind.ClassMember, m_classData); }
            }
            public float TransitionTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "TransitionTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TransitionTime", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle OldColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "OldColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldColor", CallKind.ClassMember, m_classData, value); }
            }
            public float OldStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldStart", CallKind.ClassMember, m_classData, value); }
            }
            public float OldEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float OldMaxDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldMaxDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldMaxDensity", CallKind.ClassMember, m_classData, value); }
            }
            public float OldHDRColorScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldHDRColorScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldHDRColorScale", CallKind.ClassMember, m_classData, value); }
            }
            public float OldFarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "OldFarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldFarZ", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle NewColor
            {
                get { return Invoker.CallNative<QAngle>("SDKClass", "NewColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewColor", CallKind.ClassMember, m_classData, value); }
            }
            public float NewStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "NewStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewStart", CallKind.ClassMember, m_classData, value); }
            }
            public float NewEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "NewEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float NewMaxDensity
            {
                get { return Invoker.CallNative<float>("SDKClass", "NewMaxDensity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewMaxDensity", CallKind.ClassMember, m_classData, value); }
            }
            public float NewHDRColorScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "NewHDRColorScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewHDRColorScale", CallKind.ClassMember, m_classData, value); }
            }
            public float NewFarZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "NewFarZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NewFarZ", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FollowAttachmentData : ClassData
        {
            public FollowAttachmentData(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowAttachmentData", "FollowAttachmentData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowAttachmentData(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowAttachmentData", "FollowAttachmentData", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowAttachmentData()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FollowAttachmentSettings_t : ClassData
        {
            public FollowAttachmentSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowAttachmentSettings_t", "FollowAttachmentSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowAttachmentSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowAttachmentSettings_t", "FollowAttachmentSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowAttachmentSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimAttachment Attachment
            {
                get { return Invoker.CallNative<CAnimAttachment>("SDKClass", "Attachment", CallKind.ClassMember, m_classData); }
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchTranslation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchTranslation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchTranslation", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchRotation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchRotation", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FollowTargetOpFixedSettings_t : ClassData
        {
            public FollowTargetOpFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowTargetOpFixedSettings_t", "FollowTargetOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowTargetOpFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FollowTargetOpFixedSettings_t", "FollowTargetOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FollowTargetOpFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool BoneTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BoneTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneTarget", CallKind.ClassMember, m_classData, value); }
            }
            public int BoneTargetIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneTargetIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneTargetIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool WorldCoodinateTarget
            {
                get { return Invoker.CallNative<bool>("SDKClass", "WorldCoodinateTarget", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldCoodinateTarget", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchTargetOrientation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchTargetOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchTargetOrientation", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FootFixedData_t : ClassData
        {
            public FootFixedData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootFixedData_t", "FootFixedData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootFixedData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootFixedData_t", "FootFixedData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootFixedData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D ToeOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ToeOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeOffset", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HeelOffset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HeelOffset", CallKind.ClassMember, m_classData, value); }
            }
            public int TargetBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int AnkleBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "AnkleBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnkleBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int IKAnchorBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "IKAnchorBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IKAnchorBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int IkChainIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "IkChainIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkChainIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxIKLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxIKLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxIKLength", CallKind.ClassMember, m_classData, value); }
            }
            public int FootIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "FootIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int TagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotationLeft
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotationLeft", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotationLeft", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotationRight
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotationRight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotationRight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FootFixedSettings : ClassData
        {
            public FootFixedSettings(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootFixedSettings", "FootFixedSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootFixedSettings(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootFixedSettings", "FootFixedSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootFixedSettings()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public TraceSettings_t TraceSettings
            {
                get { return Invoker.CallNative<TraceSettings_t>("SDKClass", "TraceSettings", CallKind.ClassMember, m_classData); }
            }
            public Vector2D FootBaseBindPosePositionMS
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "FootBaseBindPosePositionMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootBaseBindPosePositionMS", CallKind.ClassMember, m_classData, value); }
            }
            public float FootBaseLength
            {
                get { return Invoker.CallNative<float>("SDKClass", "FootBaseLength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootBaseLength", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotationLeft
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotationLeft", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotationLeft", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxRotationRight
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxRotationRight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxRotationRight", CallKind.ClassMember, m_classData, value); }
            }
            public int FootstepLandedTagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "FootstepLandedTagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootstepLandedTagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableTracing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableTracing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableTracing", CallKind.ClassMember, m_classData, value); }
            }
            public float TraceAngleBlend
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceAngleBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceAngleBlend", CallKind.ClassMember, m_classData, value); }
            }
            public int DisableTagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "DisableTagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableTagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int FootIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "FootIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FootLockPoseOpFixedSettings : ClassData
        {
            public FootLockPoseOpFixedSettings(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootLockPoseOpFixedSettings", "FootLockPoseOpFixedSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootLockPoseOpFixedSettings(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootLockPoseOpFixedSettings", "FootLockPoseOpFixedSettings", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootLockPoseOpFixedSettings()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimInputDamping HipDampingSettings
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "HipDampingSettings", CallKind.ClassMember, m_classData); }
            }
            public int HipBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint IkSolverType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "IkSolverType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkSolverType", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyTilt
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyTilt", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyTilt", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyHipDrop
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyHipDrop", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyHipDrop", CallKind.ClassMember, m_classData, value); }
            }
            public bool AlwaysUseFallbackHinge
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysUseFallbackHinge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysUseFallbackHinge", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyFootRotationLimits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyLegTwistLimits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyLegTwistLimits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyLegTwistLimits", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxFootHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxFootHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxFootHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float ExtensionScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExtensionScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtensionScale", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLegTwist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLegTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLegTwist", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableLockBreaking
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLockBreaking", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLockBreaking", CallKind.ClassMember, m_classData, value); }
            }
            public float LockBreakTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "LockBreakTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBreakTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public float LockBlendTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "LockBlendTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBlendTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableStretching
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableStretching", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableStretching", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxStretchAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxStretchAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxStretchAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float StretchExtensionScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "StretchExtensionScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StretchExtensionScale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FootPinningPoseOpFixedData_t : ClassData
        {
            public FootPinningPoseOpFixedData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootPinningPoseOpFixedData_t", "FootPinningPoseOpFixedData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootPinningPoseOpFixedData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootPinningPoseOpFixedData_t", "FootPinningPoseOpFixedData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootPinningPoseOpFixedData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float BlendTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlendTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendTime", CallKind.ClassMember, m_classData, value); }
            }
            public float LockBreakDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "LockBreakDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockBreakDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxLegTwist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxLegTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxLegTwist", CallKind.ClassMember, m_classData, value); }
            }
            public int HipBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyLegTwistLimits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyLegTwistLimits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyLegTwistLimits", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyFootRotationLimits
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyFootRotationLimits", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FootStepTrigger : ClassData
        {
            public FootStepTrigger(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootStepTrigger", "FootStepTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootStepTrigger(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FootStepTrigger", "FootStepTrigger", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FootStepTrigger()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Tags
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Tags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tags", CallKind.ClassMember, m_classData, value); }
            }
            public int FootIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "FootIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FootIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint TriggerPhase
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TriggerPhase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriggerPhase", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FourCovMatrices3 : ClassData
        {
            public FourCovMatrices3(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FourCovMatrices3", "FourCovMatrices3", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FourCovMatrices3(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FourCovMatrices3", "FourCovMatrices3", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FourCovMatrices3()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float XY
            {
                get { return Invoker.CallNative<float>("SDKClass", "XY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XY", CallKind.ClassMember, m_classData, value); }
            }
            public float XZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "XZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "XZ", CallKind.ClassMember, m_classData, value); }
            }
            public float YZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "YZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YZ", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FunctionInfo_t : ClassData
        {
            public FunctionInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FunctionInfo_t", "FunctionInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FunctionInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FunctionInfo_t", "FunctionInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FunctionInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameToken", CallKind.ClassMember, m_classData, value); }
            }
            public int ParamCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParamCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamCount", CallKind.ClassMember, m_classData, value); }
            }
            public FuseFunctionIndex_t Index
            {
                get { return Invoker.CallNative<FuseFunctionIndex_t>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
            }
            public bool IsPure
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPure", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FuseFunctionIndex_t : ClassData
        {
            public FuseFunctionIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FuseFunctionIndex_t", "FuseFunctionIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FuseFunctionIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FuseFunctionIndex_t", "FuseFunctionIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FuseFunctionIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Value
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class FuseVariableIndex_t : ClassData
        {
            public FuseVariableIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FuseVariableIndex_t", "FuseVariableIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FuseVariableIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("FuseVariableIndex_t", "FuseVariableIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public FuseVariableIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Value
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class GameAmmoTypeInfo_t : AmmoTypeInfo_t
        {
            public GameAmmoTypeInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("GameAmmoTypeInfo_t", "GameAmmoTypeInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public GameAmmoTypeInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("GameAmmoTypeInfo_t", "GameAmmoTypeInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public GameAmmoTypeInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BuySize
            {
                get { return Invoker.CallNative<int>("SDKClass", "BuySize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuySize", CallKind.ClassMember, m_classData, value); }
            }
            public int Cost
            {
                get { return Invoker.CallNative<int>("SDKClass", "Cost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cost", CallKind.ClassMember, m_classData, value); }
            }
            public AmmoTypeInfo_t Parent
            {
                get { return Invoker.CallNative<AmmoTypeInfo_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class GeneratedTextureHandle_t : ClassData
        {
            public GeneratedTextureHandle_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("GeneratedTextureHandle_t", "GeneratedTextureHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public GeneratedTextureHandle_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("GeneratedTextureHandle_t", "GeneratedTextureHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public GeneratedTextureHandle_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrBitmapName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrBitmapName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrBitmapName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class HitReactFixedSettings_t : ClassData
        {
            public HitReactFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("HitReactFixedSettings_t", "HitReactFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public HitReactFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("HitReactFixedSettings_t", "HitReactFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public HitReactFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int WeightListIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WeightListIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int EffectedBoneCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "EffectedBoneCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EffectedBoneCount", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxImpactForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxImpactForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxImpactForce", CallKind.ClassMember, m_classData, value); }
            }
            public float MinImpactForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinImpactForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinImpactForce", CallKind.ClassMember, m_classData, value); }
            }
            public float WhipImpactScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "WhipImpactScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhipImpactScale", CallKind.ClassMember, m_classData, value); }
            }
            public float CounterRotationScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "CounterRotationScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CounterRotationScale", CallKind.ClassMember, m_classData, value); }
            }
            public float DistanceFadeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistanceFadeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistanceFadeScale", CallKind.ClassMember, m_classData, value); }
            }
            public float PropagationScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "PropagationScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PropagationScale", CallKind.ClassMember, m_classData, value); }
            }
            public float WhipDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "WhipDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhipDelay", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float WhipSpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "WhipSpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhipSpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngleRadians
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngleRadians", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngleRadians", CallKind.ClassMember, m_classData, value); }
            }
            public int HipBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float HipBoneTranslationScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HipBoneTranslationScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipBoneTranslationScale", CallKind.ClassMember, m_classData, value); }
            }
            public float HipDipSpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "HipDipSpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipDipSpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float HipDipImpactScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "HipDipImpactScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipDipImpactScale", CallKind.ClassMember, m_classData, value); }
            }
            public float HipDipDelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "HipDipDelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HipDipDelay", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class hudtextparms_t : ClassData
        {
            public hudtextparms_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("hudtextparms_t", "hudtextparms_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public hudtextparms_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("hudtextparms_t", "hudtextparms_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public hudtextparms_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Effect
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Effect", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Effect", CallKind.ClassMember, m_classData, value); }
            }
            public byte Channel
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Channel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Channel", CallKind.ClassMember, m_classData, value); }
            }
            public float X
            {
                get { return Invoker.CallNative<float>("SDKClass", "X", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "X", CallKind.ClassMember, m_classData, value); }
            }
            public float Y
            {
                get { return Invoker.CallNative<float>("SDKClass", "Y", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Y", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class HullFlags_t : ClassData
        {
            public HullFlags_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("HullFlags_t", "HullFlags_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public HullFlags_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("HullFlags_t", "HullFlags_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public HullFlags_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Hull_Human
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_Human", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_Human", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_SmallCentered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_SmallCentered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_SmallCentered", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_WideHuman
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_WideHuman", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_WideHuman", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_Tiny
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_Tiny", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_Tiny", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_Medium
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_Medium", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_Medium", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_TinyCentered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_TinyCentered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_TinyCentered", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_Large
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_Large", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_Large", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_LargeCentered
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_LargeCentered", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_LargeCentered", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_MediumTall
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_MediumTall", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_MediumTall", CallKind.ClassMember, m_classData, value); }
            }
            public bool Hull_Small
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Hull_Small", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Hull_Small", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IChoreoServices : ClassData
        {
            public IChoreoServices(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IChoreoServices", "IChoreoServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IChoreoServices(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IChoreoServices", "IChoreoServices", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IChoreoServices()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IClientAlphaProperty : ClassData
        {
            public IClientAlphaProperty(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IClientAlphaProperty", "IClientAlphaProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IClientAlphaProperty(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IClientAlphaProperty", "IClientAlphaProperty", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IClientAlphaProperty()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IEconItemInterface : ClassData
        {
            public IEconItemInterface(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IEconItemInterface", "IEconItemInterface", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IEconItemInterface(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IEconItemInterface", "IEconItemInterface", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IEconItemInterface()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IHasAttributes : ClassData
        {
            public IHasAttributes(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IHasAttributes", "IHasAttributes", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IHasAttributes(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IHasAttributes", "IHasAttributes", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IHasAttributes()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IKBoneNameAndIndex_t : ClassData
        {
            public IKBoneNameAndIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKBoneNameAndIndex_t", "IKBoneNameAndIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKBoneNameAndIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKBoneNameAndIndex_t", "IKBoneNameAndIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKBoneNameAndIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IKDemoCaptureSettings_t : ClassData
        {
            public IKDemoCaptureSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKDemoCaptureSettings_t", "IKDemoCaptureSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKDemoCaptureSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKDemoCaptureSettings_t", "IKDemoCaptureSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKDemoCaptureSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ParentBoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParentBoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentBoneName", CallKind.ClassMember, m_classData, value); }
            }
            public uint Mode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Mode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mode", CallKind.ClassMember, m_classData, value); }
            }
            public string IkChainName
            {
                get { return Invoker.CallNative<string>("SDKClass", "IkChainName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IkChainName", CallKind.ClassMember, m_classData, value); }
            }
            public string OneBoneStart
            {
                get { return Invoker.CallNative<string>("SDKClass", "OneBoneStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OneBoneStart", CallKind.ClassMember, m_classData, value); }
            }
            public string OneBoneEnd
            {
                get { return Invoker.CallNative<string>("SDKClass", "OneBoneEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OneBoneEnd", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IKSolverSettings_t : ClassData
        {
            public IKSolverSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKSolverSettings_t", "IKSolverSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKSolverSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKSolverSettings_t", "IKSolverSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKSolverSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint SolverType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SolverType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolverType", CallKind.ClassMember, m_classData, value); }
            }
            public int NumIterations
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumIterations", CallKind.ClassMember, m_classData, value); }
            }
            public uint EndEffectorRotationFixUpMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "EndEffectorRotationFixUpMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndEffectorRotationFixUpMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IKTargetSettings_t : ClassData
        {
            public IKTargetSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKTargetSettings_t", "IKTargetSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKTargetSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IKTargetSettings_t", "IKTargetSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IKTargetSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint TargetSource
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetSource", CallKind.ClassMember, m_classData, value); }
            }
            public IKBoneNameAndIndex_t Bone
            {
                get { return Invoker.CallNative<IKBoneNameAndIndex_t>("SDKClass", "Bone", CallKind.ClassMember, m_classData); }
            }
            public AnimParamID AnimgraphParameterNamePosition
            {
                get { return Invoker.CallNative<AnimParamID>("SDKClass", "AnimgraphParameterNamePosition", CallKind.ClassMember, m_classData); }
            }
            public AnimParamID AnimgraphParameterNameOrientation
            {
                get { return Invoker.CallNative<AnimParamID>("SDKClass", "AnimgraphParameterNameOrientation", CallKind.ClassMember, m_classData); }
            }
            public uint TargetCoordSystem
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetCoordSystem", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetCoordSystem", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class InfoOverlayData_t : ClassData
        {
            public InfoOverlayData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("InfoOverlayData_t", "InfoOverlayData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public InfoOverlayData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("InfoOverlayData_t", "InfoOverlayData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public InfoOverlayData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float Depth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D UVStart
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "UVStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UVStart", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D UVEnd
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "UVEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UVEnd", CallKind.ClassMember, m_classData, value); }
            }
            public int RenderOrder
            {
                get { return Invoker.CallNative<int>("SDKClass", "RenderOrder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderOrder", CallKind.ClassMember, m_classData, value); }
            }
            public int SequenceOverride
            {
                get { return Invoker.CallNative<int>("SDKClass", "SequenceOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceOverride", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IntervalTimer : ClassData
        {
            public IntervalTimer(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IntervalTimer", "IntervalTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IntervalTimer(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IntervalTimer", "IntervalTimer", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IntervalTimer()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Timestamp
            {
                get { return Invoker.CallNative<float>("SDKClass", "Timestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Timestamp", CallKind.ClassMember, m_classData, value); }
            }
            public uint WorldGroupId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupId", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_camera_t : ClassData
        {
            public inv_image_camera_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_camera_t", "inv_image_camera_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_camera_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_camera_t", "inv_image_camera_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_camera_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public float Fov
            {
                get { return Invoker.CallNative<float>("SDKClass", "Fov", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fov", CallKind.ClassMember, m_classData, value); }
            }
            public float Znear
            {
                get { return Invoker.CallNative<float>("SDKClass", "Znear", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Znear", CallKind.ClassMember, m_classData, value); }
            }
            public float Zfar
            {
                get { return Invoker.CallNative<float>("SDKClass", "Zfar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Zfar", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Target
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Target_nudge
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Target_nudge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Target_nudge", CallKind.ClassMember, m_classData, value); }
            }
            public float Orbit_distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Orbit_distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Orbit_distance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_data_t : ClassData
        {
            public inv_image_data_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_data_t", "inv_image_data_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_data_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_data_t", "inv_image_data_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_data_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public inv_image_map_t Map
            {
                get { return Invoker.CallNative<inv_image_map_t>("SDKClass", "Map", CallKind.ClassMember, m_classData); }
            }
            public inv_image_item_t Item
            {
                get { return Invoker.CallNative<inv_image_item_t>("SDKClass", "Item", CallKind.ClassMember, m_classData); }
            }
            public inv_image_camera_t Camera
            {
                get { return Invoker.CallNative<inv_image_camera_t>("SDKClass", "Camera", CallKind.ClassMember, m_classData); }
            }
            public inv_image_light_sun_t Lightsun
            {
                get { return Invoker.CallNative<inv_image_light_sun_t>("SDKClass", "Lightsun", CallKind.ClassMember, m_classData); }
            }
            public inv_image_light_fill_t Lightfill
            {
                get { return Invoker.CallNative<inv_image_light_fill_t>("SDKClass", "Lightfill", CallKind.ClassMember, m_classData); }
            }
        }
        public class inv_image_item_t : ClassData
        {
            public inv_image_item_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_item_t", "inv_image_item_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_item_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_item_t", "inv_image_item_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_item_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public string Pose_sequence
            {
                get { return Invoker.CallNative<string>("SDKClass", "Pose_sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pose_sequence", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_light_barn_t : ClassData
        {
            public inv_image_light_barn_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_barn_t", "inv_image_light_barn_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_barn_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_barn_t", "inv_image_light_barn_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_barn_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Color
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
            public float Orbit_distance
            {
                get { return Invoker.CallNative<float>("SDKClass", "Orbit_distance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Orbit_distance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_light_fill_t : ClassData
        {
            public inv_image_light_fill_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_fill_t", "inv_image_light_fill_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_fill_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_fill_t", "inv_image_light_fill_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_fill_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Color
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_light_sun_t : ClassData
        {
            public inv_image_light_sun_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_sun_t", "inv_image_light_sun_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_sun_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_light_sun_t", "inv_image_light_sun_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_light_sun_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Color
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Color", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Color", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public float Brightness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Brightness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Brightness", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class inv_image_map_t : ClassData
        {
            public inv_image_map_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_map_t", "inv_image_map_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_map_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("inv_image_map_t", "inv_image_map_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public inv_image_map_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Map_name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Map_name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Map_name", CallKind.ClassMember, m_classData, value); }
            }
            public float Map_rotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "Map_rotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Map_rotation", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class IParticleCollection : ClassData
        {
            public IParticleCollection(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IParticleCollection", "IParticleCollection", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IParticleCollection(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IParticleCollection", "IParticleCollection", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IParticleCollection()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IParticleEffect : ClassData
        {
            public IParticleEffect(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IParticleEffect", "IParticleEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IParticleEffect(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IParticleEffect", "IParticleEffect", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IParticleEffect()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IPhysicsPlayerController : ClassData
        {
            public IPhysicsPlayerController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IPhysicsPlayerController", "IPhysicsPlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IPhysicsPlayerController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IPhysicsPlayerController", "IPhysicsPlayerController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IPhysicsPlayerController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class IRagdoll : ClassData
        {
            public IRagdoll(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IRagdoll", "IRagdoll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IRagdoll(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("IRagdoll", "IRagdoll", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public IRagdoll()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class ISkeletonAnimationController : ClassData
        {
            public ISkeletonAnimationController(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ISkeletonAnimationController", "ISkeletonAnimationController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ISkeletonAnimationController(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ISkeletonAnimationController", "ISkeletonAnimationController", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ISkeletonAnimationController()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class JiggleBoneSettings_t : ClassData
        {
            public JiggleBoneSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("JiggleBoneSettings_t", "JiggleBoneSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public JiggleBoneSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("JiggleBoneSettings_t", "JiggleBoneSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public JiggleBoneSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float SpringStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SpringStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpringStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTimeStep
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTimeStep", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTimeStep", CallKind.ClassMember, m_classData, value); }
            }
            public float Damping
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damping", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoundsMaxLS
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoundsMaxLS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundsMaxLS", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D BoundsMinLS
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "BoundsMinLS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundsMinLS", CallKind.ClassMember, m_classData, value); }
            }
            public uint SimSpace
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SimSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SimSpace", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class JiggleBoneSettingsList_t : ClassData
        {
            public JiggleBoneSettingsList_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("JiggleBoneSettingsList_t", "JiggleBoneSettingsList_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public JiggleBoneSettingsList_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("JiggleBoneSettingsList_t", "JiggleBoneSettingsList_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public JiggleBoneSettingsList_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class lerpdata_t : ClassData
        {
            public lerpdata_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("lerpdata_t", "lerpdata_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public lerpdata_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("lerpdata_t", "lerpdata_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public lerpdata_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Ent
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Ent", CallKind.ClassMember, m_classData); }
            }
            public byte MoveType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "MoveType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MoveType", CallKind.ClassMember, m_classData, value); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D StartOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "StartOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleIndex_t FXIndex
            {
                get { return Invoker.CallNative<ParticleIndex_t>("SDKClass", "FXIndex", CallKind.ClassMember, m_classData); }
            }
        }
        public class locksound_t : ClassData
        {
            public locksound_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("locksound_t", "locksound_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public locksound_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("locksound_t", "locksound_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public locksound_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string LockedSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "LockedSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockedSound", CallKind.ClassMember, m_classData, value); }
            }
            public string UnlockedSound
            {
                get { return Invoker.CallNative<string>("SDKClass", "UnlockedSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UnlockedSound", CallKind.ClassMember, m_classData, value); }
            }
            public float FlwaitSound
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlwaitSound", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlwaitSound", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class LookAtBone_t : ClassData
        {
            public LookAtBone_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("LookAtBone_t", "LookAtBone_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public LookAtBone_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("LookAtBone_t", "LookAtBone_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public LookAtBone_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Index
            {
                get { return Invoker.CallNative<int>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class LookAtOpFixedSettings_t : ClassData
        {
            public LookAtOpFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("LookAtOpFixedSettings_t", "LookAtOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public LookAtOpFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("LookAtOpFixedSettings_t", "LookAtOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public LookAtOpFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimAttachment Attachment
            {
                get { return Invoker.CallNative<CAnimAttachment>("SDKClass", "Attachment", CallKind.ClassMember, m_classData); }
            }
            public CAnimInputDamping Damping
            {
                get { return Invoker.CallNative<CAnimInputDamping>("SDKClass", "Damping", CallKind.ClassMember, m_classData); }
            }
            public float YawLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "YawLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "YawLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchLimit
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchLimit", CallKind.ClassMember, m_classData, value); }
            }
            public float HysteresisInnerAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "HysteresisInnerAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HysteresisInnerAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float HysteresisOuterAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "HysteresisOuterAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HysteresisOuterAngle", CallKind.ClassMember, m_classData, value); }
            }
            public bool RotateYawForward
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RotateYawForward", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotateYawForward", CallKind.ClassMember, m_classData, value); }
            }
            public bool MaintainUpDirection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MaintainUpDirection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaintainUpDirection", CallKind.ClassMember, m_classData, value); }
            }
            public bool TargetIsPosition
            {
                get { return Invoker.CallNative<bool>("SDKClass", "TargetIsPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetIsPosition", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseHysteresis
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseHysteresis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseHysteresis", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class magnetted_objects_t : ClassData
        {
            public magnetted_objects_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("magnetted_objects_t", "magnetted_objects_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public magnetted_objects_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("magnetted_objects_t", "magnetted_objects_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public magnetted_objects_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
        }
        public class ManifestTestResource_t : ClassData
        {
            public ManifestTestResource_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ManifestTestResource_t", "ManifestTestResource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ManifestTestResource_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ManifestTestResource_t", "ManifestTestResource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ManifestTestResource_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MaterialGroup_t : ClassData
        {
            public MaterialGroup_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialGroup_t", "MaterialGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialGroup_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialGroup_t", "MaterialGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialGroup_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MaterialOverride_t : BaseSceneObjectOverride_t
        {
            public MaterialOverride_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialOverride_t", "MaterialOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialOverride_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialOverride_t", "MaterialOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialOverride_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint SubSceneObject
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SubSceneObject", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubSceneObject", CallKind.ClassMember, m_classData, value); }
            }
            public uint DrawCallIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DrawCallIndex", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearTintColor
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearTintColor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearTintColor", CallKind.ClassMember, m_classData, value); }
            }
            public BaseSceneObjectOverride_t Parent
            {
                get { return Invoker.CallNative<BaseSceneObjectOverride_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParam_t : ClassData
        {
            public MaterialParam_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParam_t", "MaterialParam_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParam_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParam_t", "MaterialParam_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParam_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MaterialParamBuffer_t : MaterialParam_t
        {
            public MaterialParamBuffer_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamBuffer_t", "MaterialParamBuffer_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamBuffer_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamBuffer_t", "MaterialParamBuffer_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamBuffer_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParamFloat_t : MaterialParam_t
        {
            public MaterialParamFloat_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamFloat_t", "MaterialParamFloat_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamFloat_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamFloat_t", "MaterialParamFloat_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamFloat_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParamInt_t : MaterialParam_t
        {
            public MaterialParamInt_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamInt_t", "MaterialParamInt_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamInt_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamInt_t", "MaterialParamInt_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamInt_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Value
            {
                get { return Invoker.CallNative<int>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParamString_t : MaterialParam_t
        {
            public MaterialParamString_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamString_t", "MaterialParamString_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamString_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamString_t", "MaterialParamString_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamString_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Value
            {
                get { return Invoker.CallNative<string>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParamTexture_t : MaterialParam_t
        {
            public MaterialParamTexture_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamTexture_t", "MaterialParamTexture_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamTexture_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamTexture_t", "MaterialParamTexture_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamTexture_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialParamVector_t : MaterialParam_t
        {
            public MaterialParamVector_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamVector_t", "MaterialParamVector_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamVector_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialParamVector_t", "MaterialParamVector_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialParamVector_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public MaterialParam_t Parent
            {
                get { return Invoker.CallNative<MaterialParam_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class MaterialResourceData_t : ClassData
        {
            public MaterialResourceData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialResourceData_t", "MaterialResourceData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialResourceData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialResourceData_t", "MaterialResourceData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialResourceData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string MaterialName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MaterialName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialName", CallKind.ClassMember, m_classData, value); }
            }
            public string ShaderName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ShaderName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShaderName", CallKind.ClassMember, m_classData, value); }
            }
            public string[] RenderAttributesUsed
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "RenderAttributesUsed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RenderAttributesUsed", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MaterialVariable_t : ClassData
        {
            public MaterialVariable_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialVariable_t", "MaterialVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialVariable_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MaterialVariable_t", "MaterialVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MaterialVariable_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrVariable
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrVariable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrVariable", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleAttributeIndex_t VariableField
            {
                get { return Invoker.CallNative<ParticleAttributeIndex_t>("SDKClass", "VariableField", CallKind.ClassMember, m_classData); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelBoneFlexDriver_t : ClassData
        {
            public ModelBoneFlexDriver_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelBoneFlexDriver_t", "ModelBoneFlexDriver_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelBoneFlexDriver_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelBoneFlexDriver_t", "ModelBoneFlexDriver_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelBoneFlexDriver_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public uint BoneNameToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneNameToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneNameToken", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelBoneFlexDriverControl_t : ClassData
        {
            public ModelBoneFlexDriverControl_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelBoneFlexDriverControl_t", "ModelBoneFlexDriverControl_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelBoneFlexDriverControl_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelBoneFlexDriverControl_t", "ModelBoneFlexDriverControl_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelBoneFlexDriverControl_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint BoneComponent
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BoneComponent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneComponent", CallKind.ClassMember, m_classData, value); }
            }
            public string FlexController
            {
                get { return Invoker.CallNative<string>("SDKClass", "FlexController", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlexController", CallKind.ClassMember, m_classData, value); }
            }
            public uint FlexControllerToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "FlexControllerToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlexControllerToken", CallKind.ClassMember, m_classData, value); }
            }
            public float Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public float Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelConfigHandle_t : ClassData
        {
            public ModelConfigHandle_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelConfigHandle_t", "ModelConfigHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelConfigHandle_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelConfigHandle_t", "ModelConfigHandle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelConfigHandle_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Value
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelEmbeddedMesh_t : ClassData
        {
            public ModelEmbeddedMesh_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelEmbeddedMesh_t", "ModelEmbeddedMesh_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelEmbeddedMesh_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelEmbeddedMesh_t", "ModelEmbeddedMesh_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelEmbeddedMesh_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public int MeshIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "MeshIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int DataBlock
            {
                get { return Invoker.CallNative<int>("SDKClass", "DataBlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DataBlock", CallKind.ClassMember, m_classData, value); }
            }
            public int MorphBlock
            {
                get { return Invoker.CallNative<int>("SDKClass", "MorphBlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphBlock", CallKind.ClassMember, m_classData, value); }
            }
            public int VBIBBlock
            {
                get { return Invoker.CallNative<int>("SDKClass", "VBIBBlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VBIBBlock", CallKind.ClassMember, m_classData, value); }
            }
            public int ToolsVBBlock
            {
                get { return Invoker.CallNative<int>("SDKClass", "ToolsVBBlock", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToolsVBBlock", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelMeshBufferData_t : ClassData
        {
            public ModelMeshBufferData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelMeshBufferData_t", "ModelMeshBufferData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelMeshBufferData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelMeshBufferData_t", "ModelMeshBufferData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelMeshBufferData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BlockIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "BlockIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlockIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint ElementCount
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ElementCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementCount", CallKind.ClassMember, m_classData, value); }
            }
            public uint ElementSizeInBytes
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ElementSizeInBytes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementSizeInBytes", CallKind.ClassMember, m_classData, value); }
            }
            public bool MeshoptCompressed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MeshoptCompressed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshoptCompressed", CallKind.ClassMember, m_classData, value); }
            }
            public bool MeshoptIndexSequence
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MeshoptIndexSequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshoptIndexSequence", CallKind.ClassMember, m_classData, value); }
            }
            public bool CompressedZSTD
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CompressedZSTD", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompressedZSTD", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateBufferSRV
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateBufferSRV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateBufferSRV", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateBufferUAV
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateBufferUAV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateBufferUAV", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreateRawBuffer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreateRawBuffer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreateRawBuffer", CallKind.ClassMember, m_classData, value); }
            }
            public bool CreatePooledBuffer
            {
                get { return Invoker.CallNative<bool>("SDKClass", "CreatePooledBuffer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CreatePooledBuffer", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelReference_t : ClassData
        {
            public ModelReference_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelReference_t", "ModelReference_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelReference_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelReference_t", "ModelReference_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelReference_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RelativeProbabilityOfSpawn
            {
                get { return Invoker.CallNative<float>("SDKClass", "RelativeProbabilityOfSpawn", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelativeProbabilityOfSpawn", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ModelSkeletonData_t : ClassData
        {
            public ModelSkeletonData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelSkeletonData_t", "ModelSkeletonData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelSkeletonData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ModelSkeletonData_t", "ModelSkeletonData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ModelSkeletonData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string[] BoneName
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public short[] Parent
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BoneSphere
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BoneSphere", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneSphere", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] Flag
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "Flag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flag", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] BonePosParent
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "BonePosParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BonePosParent", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BoneScaleParent
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BoneScaleParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneScaleParent", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MoodAnimation_t : ClassData
        {
            public MoodAnimation_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MoodAnimation_t", "MoodAnimation_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MoodAnimation_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MoodAnimation_t", "MoodAnimation_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MoodAnimation_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Weight
            {
                get { return Invoker.CallNative<float>("SDKClass", "Weight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MotionBlendItem : ClassData
        {
            public MotionBlendItem(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionBlendItem", "MotionBlendItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionBlendItem(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionBlendItem", "MotionBlendItem", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionBlendItem()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float KeyValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "KeyValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KeyValue", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MotionDBIndex : ClassData
        {
            public MotionDBIndex(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionDBIndex", "MotionDBIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionDBIndex(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionDBIndex", "MotionDBIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionDBIndex()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Index
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MotionIndex : ClassData
        {
            public MotionIndex(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionIndex", "MotionIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionIndex(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MotionIndex", "MotionIndex", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MotionIndex()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Group
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Group", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Group", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Motion
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Motion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Motion", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class MovementGaitId_t : ClassData
        {
            public MovementGaitId_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MovementGaitId_t", "MovementGaitId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MovementGaitId_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("MovementGaitId_t", "MovementGaitId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public MovementGaitId_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class NavGravity_t : ClassData
        {
            public NavGravity_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NavGravity_t", "NavGravity_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NavGravity_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NavGravity_t", "NavGravity_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NavGravity_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Gravity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Gravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Gravity", CallKind.ClassMember, m_classData, value); }
            }
            public bool Default
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Default", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Default", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class NmBoneMaskSetDefinition_t : ClassData
        {
            public NmBoneMaskSetDefinition_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmBoneMaskSetDefinition_t", "NmBoneMaskSetDefinition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmBoneMaskSetDefinition_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmBoneMaskSetDefinition_t", "NmBoneMaskSetDefinition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmBoneMaskSetDefinition_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CNmBoneWeightList PrimaryWeightList
            {
                get { return Invoker.CallNative<CNmBoneWeightList>("SDKClass", "PrimaryWeightList", CallKind.ClassMember, m_classData); }
            }
        }
        public class NmCompressionSettings_t : ClassData
        {
            public NmCompressionSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmCompressionSettings_t", "NmCompressionSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmCompressionSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmCompressionSettings_t", "NmCompressionSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmCompressionSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsRotationStatic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsRotationStatic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsRotationStatic", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsTranslationStatic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsTranslationStatic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsTranslationStatic", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsScaleStatic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsScaleStatic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsScaleStatic", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class NmPercent_t : ClassData
        {
            public NmPercent_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmPercent_t", "NmPercent_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmPercent_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmPercent_t", "NmPercent_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmPercent_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Value
            {
                get { return Invoker.CallNative<float>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class NmSyncTrackTime_t : ClassData
        {
            public NmSyncTrackTime_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmSyncTrackTime_t", "NmSyncTrackTime_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmSyncTrackTime_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmSyncTrackTime_t", "NmSyncTrackTime_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmSyncTrackTime_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EventIdx
            {
                get { return Invoker.CallNative<int>("SDKClass", "EventIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EventIdx", CallKind.ClassMember, m_classData, value); }
            }
            public NmPercent_t PercentageThrough
            {
                get { return Invoker.CallNative<NmPercent_t>("SDKClass", "PercentageThrough", CallKind.ClassMember, m_classData); }
            }
        }
        public class NmSyncTrackTimeRange_t : ClassData
        {
            public NmSyncTrackTimeRange_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmSyncTrackTimeRange_t", "NmSyncTrackTimeRange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmSyncTrackTimeRange_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NmSyncTrackTimeRange_t", "NmSyncTrackTimeRange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NmSyncTrackTimeRange_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public NmSyncTrackTime_t StartTime
            {
                get { return Invoker.CallNative<NmSyncTrackTime_t>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
            }
            public NmSyncTrackTime_t EndTime
            {
                get { return Invoker.CallNative<NmSyncTrackTime_t>("SDKClass", "EndTime", CallKind.ClassMember, m_classData); }
            }
        }
        public class NodeData_t : ClassData
        {
            public NodeData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NodeData_t", "NodeData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NodeData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("NodeData_t", "NodeData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public NodeData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Parent
            {
                get { return Invoker.CallNative<int>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Origin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Origin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MinBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MinBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinBounds", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MaxBounds
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxBounds", CallKind.ClassMember, m_classData, value); }
            }
            public float MinimumDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinimumDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinimumDistance", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ChildNodeIndices
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ChildNodeIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChildNodeIndices", CallKind.ClassMember, m_classData, value); }
            }
            public string WorldNodePrefix
            {
                get { return Invoker.CallNative<string>("SDKClass", "WorldNodePrefix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldNodePrefix", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class OldFeEdge_t : ClassData
        {
            public OldFeEdge_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("OldFeEdge_t", "OldFeEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public OldFeEdge_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("OldFeEdge_t", "OldFeEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public OldFeEdge_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] K
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "K", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "K", CallKind.ClassMember, m_classData, value); }
            }
            public float InvA
            {
                get { return Invoker.CallNative<float>("SDKClass", "InvA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InvA", CallKind.ClassMember, m_classData, value); }
            }
            public float T
            {
                get { return Invoker.CallNative<float>("SDKClass", "T", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "T", CallKind.ClassMember, m_classData, value); }
            }
            public float ThetaRelaxed
            {
                get { return Invoker.CallNative<float>("SDKClass", "ThetaRelaxed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThetaRelaxed", CallKind.ClassMember, m_classData, value); }
            }
            public float ThetaFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "ThetaFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ThetaFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float AxialModelDist
            {
                get { return Invoker.CallNative<float>("SDKClass", "AxialModelDist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxialModelDist", CallKind.ClassMember, m_classData, value); }
            }
            public float[] AxialModelWeights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "AxialModelWeights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AxialModelWeights", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Node
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Node", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Node", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class OutflowWithRequirements_t : ClassData
        {
            public OutflowWithRequirements_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("OutflowWithRequirements_t", "OutflowWithRequirements_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public OutflowWithRequirements_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("OutflowWithRequirements_t", "OutflowWithRequirements_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public OutflowWithRequirements_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] CursorStateBlockIndex
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "CursorStateBlockIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CursorStateBlockIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParamSpan_t : ClassData
        {
            public ParamSpan_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParamSpan_t", "ParamSpan_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParamSpan_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParamSpan_t", "ParamSpan_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParamSpan_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CAnimParamHandle Param
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "Param", CallKind.ClassMember, m_classData); }
            }
            public byte ParamType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ParamType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParamType", CallKind.ClassMember, m_classData, value); }
            }
            public float StartCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartCycle", CallKind.ClassMember, m_classData, value); }
            }
            public float EndCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCycle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParamSpanSample_t : ClassData
        {
            public ParamSpanSample_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParamSpanSample_t", "ParamSpanSample_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParamSpanSample_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParamSpanSample_t", "ParamSpanSample_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParamSpanSample_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Cycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "Cycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cycle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PARTICLE_EHANDLE__ : ClassData
        {
            public PARTICLE_EHANDLE__(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PARTICLE_EHANDLE__", "PARTICLE_EHANDLE__", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PARTICLE_EHANDLE__(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PARTICLE_EHANDLE__", "PARTICLE_EHANDLE__", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PARTICLE_EHANDLE__()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Unused
            {
                get { return Invoker.CallNative<int>("SDKClass", "Unused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Unused", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleAttributeIndex_t : ClassData
        {
            public ParticleAttributeIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleAttributeIndex_t", "ParticleAttributeIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleAttributeIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleAttributeIndex_t", "ParticleAttributeIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleAttributeIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Value
            {
                get { return Invoker.CallNative<int>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleChildrenInfo_t : ClassData
        {
            public ParticleChildrenInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleChildrenInfo_t", "ParticleChildrenInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleChildrenInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleChildrenInfo_t", "ParticleChildrenInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleChildrenInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public bool EndCap
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EndCap", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCap", CallKind.ClassMember, m_classData, value); }
            }
            public bool DisableChild
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DisableChild", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DisableChild", CallKind.ClassMember, m_classData, value); }
            }
            public uint DetailLevel
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DetailLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DetailLevel", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleControlPointConfiguration_t : ClassData
        {
            public ParticleControlPointConfiguration_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleControlPointConfiguration_t", "ParticleControlPointConfiguration_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleControlPointConfiguration_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleControlPointConfiguration_t", "ParticleControlPointConfiguration_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleControlPointConfiguration_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public ParticlePreviewState_t PreviewState
            {
                get { return Invoker.CallNative<ParticlePreviewState_t>("SDKClass", "PreviewState", CallKind.ClassMember, m_classData); }
            }
        }
        public class ParticleControlPointDriver_t : ClassData
        {
            public ParticleControlPointDriver_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleControlPointDriver_t", "ParticleControlPointDriver_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleControlPointDriver_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleControlPointDriver_t", "ParticleControlPointDriver_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleControlPointDriver_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachType", CallKind.ClassMember, m_classData, value); }
            }
            public string AttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachmentName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public string EntityName
            {
                get { return Invoker.CallNative<string>("SDKClass", "EntityName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleIndex_t : ClassData
        {
            public ParticleIndex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleIndex_t", "ParticleIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleIndex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleIndex_t", "ParticleIndex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleIndex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Value
            {
                get { return Invoker.CallNative<int>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleNamedValueConfiguration_t : ClassData
        {
            public ParticleNamedValueConfiguration_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNamedValueConfiguration_t", "ParticleNamedValueConfiguration_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNamedValueConfiguration_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNamedValueConfiguration_t", "ParticleNamedValueConfiguration_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNamedValueConfiguration_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string ConfigName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ConfigName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConfigName", CallKind.ClassMember, m_classData, value); }
            }
            public uint AttachType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "AttachType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttachType", CallKind.ClassMember, m_classData, value); }
            }
            public string BoundEntityPath
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoundEntityPath", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoundEntityPath", CallKind.ClassMember, m_classData, value); }
            }
            public string StrEntityScope
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrEntityScope", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrEntityScope", CallKind.ClassMember, m_classData, value); }
            }
            public string StrAttachmentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrAttachmentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrAttachmentName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticleNamedValueSource_t : ClassData
        {
            public ParticleNamedValueSource_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNamedValueSource_t", "ParticleNamedValueSource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNamedValueSource_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNamedValueSource_t", "ParticleNamedValueSource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNamedValueSource_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsPublic
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsPublic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsPublic", CallKind.ClassMember, m_classData, value); }
            }
            public ParticleNamedValueConfiguration_t DefaultConfig
            {
                get { return Invoker.CallNative<ParticleNamedValueConfiguration_t>("SDKClass", "DefaultConfig", CallKind.ClassMember, m_classData); }
            }
        }
        public class ParticleNode_t : ClassData
        {
            public ParticleNode_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNode_t", "ParticleNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNode_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticleNode_t", "ParticleNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticleNode_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public ParticleIndex_t Index
            {
                get { return Invoker.CallNative<ParticleIndex_t>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
            }
            public float StartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float GrowthDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "GrowthDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrowthDuration", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GrowthOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GrowthOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrowthOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public float EndcapTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndcapTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndcapTime", CallKind.ClassMember, m_classData, value); }
            }
            public bool MarkedForDelete
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MarkedForDelete", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MarkedForDelete", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticlePreviewBodyGroup_t : ClassData
        {
            public ParticlePreviewBodyGroup_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticlePreviewBodyGroup_t", "ParticlePreviewBodyGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticlePreviewBodyGroup_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticlePreviewBodyGroup_t", "ParticlePreviewBodyGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticlePreviewBodyGroup_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BodyGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BodyGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public int Value
            {
                get { return Invoker.CallNative<int>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ParticlePreviewState_t : ClassData
        {
            public ParticlePreviewState_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticlePreviewState_t", "ParticlePreviewState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticlePreviewState_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ParticlePreviewState_t", "ParticlePreviewState_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ParticlePreviewState_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string PreviewModel
            {
                get { return Invoker.CallNative<string>("SDKClass", "PreviewModel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviewModel", CallKind.ClassMember, m_classData, value); }
            }
            public uint ModSpecificData
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ModSpecificData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModSpecificData", CallKind.ClassMember, m_classData, value); }
            }
            public uint GroundType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "GroundType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GroundType", CallKind.ClassMember, m_classData, value); }
            }
            public string SequenceName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SequenceName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SequenceName", CallKind.ClassMember, m_classData, value); }
            }
            public int FireParticleOnSequenceFrame
            {
                get { return Invoker.CallNative<int>("SDKClass", "FireParticleOnSequenceFrame", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FireParticleOnSequenceFrame", CallKind.ClassMember, m_classData, value); }
            }
            public string HitboxSetName
            {
                get { return Invoker.CallNative<string>("SDKClass", "HitboxSetName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HitboxSetName", CallKind.ClassMember, m_classData, value); }
            }
            public string MaterialGroupName
            {
                get { return Invoker.CallNative<string>("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaterialGroupName", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackSpeed
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackSpeed", CallKind.ClassMember, m_classData, value); }
            }
            public float ParticleSimulationRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "ParticleSimulationRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleSimulationRate", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDrawHitboxes
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDrawHitboxes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDrawHitboxes", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDrawAttachments
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDrawAttachments", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDrawAttachments", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDrawAttachmentNames
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDrawAttachmentNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDrawAttachmentNames", CallKind.ClassMember, m_classData, value); }
            }
            public bool ShouldDrawControlPointAxes
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ShouldDrawControlPointAxes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShouldDrawControlPointAxes", CallKind.ClassMember, m_classData, value); }
            }
            public bool AnimationNonLooping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AnimationNonLooping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AnimationNonLooping", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D PreviewGravity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PreviewGravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreviewGravity", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PermEntityLumpData_t : ClassData
        {
            public PermEntityLumpData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermEntityLumpData_t", "PermEntityLumpData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermEntityLumpData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermEntityLumpData_t", "PermEntityLumpData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermEntityLumpData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PermModelData_t : ClassData
        {
            public PermModelData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelData_t", "PermModelData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelData_t", "PermModelData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public PermModelInfo_t ModelInfo
            {
                get { return Invoker.CallNative<PermModelInfo_t>("SDKClass", "ModelInfo", CallKind.ClassMember, m_classData); }
            }
            public ulong[] RefMeshGroupMasks
            {
                get { return Invoker.CallNative<ulong[]>("SDKClass", "RefMeshGroupMasks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefMeshGroupMasks", CallKind.ClassMember, m_classData, value); }
            }
            public ulong[] RefPhysGroupMasks
            {
                get { return Invoker.CallNative<ulong[]>("SDKClass", "RefPhysGroupMasks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefPhysGroupMasks", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] RefLODGroupMasks
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "RefLODGroupMasks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefLODGroupMasks", CallKind.ClassMember, m_classData, value); }
            }
            public float[] LodGroupSwitchDistances
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "LodGroupSwitchDistances", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LodGroupSwitchDistances", CallKind.ClassMember, m_classData, value); }
            }
            public string[] MeshGroups
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "MeshGroups", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MeshGroups", CallKind.ClassMember, m_classData, value); }
            }
            public ulong DefaultMeshGroupMask
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "DefaultMeshGroupMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultMeshGroupMask", CallKind.ClassMember, m_classData, value); }
            }
            public ModelSkeletonData_t ModelSkeleton
            {
                get { return Invoker.CallNative<ModelSkeletonData_t>("SDKClass", "ModelSkeleton", CallKind.ClassMember, m_classData); }
            }
            public short[] RemappingTable
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "RemappingTable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemappingTable", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] RemappingTableStarts
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "RemappingTableStarts", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RemappingTableStarts", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ModelConfigList
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ModelConfigList", CallKind.ClassMember, m_classData); }
            }
            public string[] BodyGroupsHiddenInTools
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "BodyGroupsHiddenInTools", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyGroupsHiddenInTools", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PermModelDataAnimatedMaterialAttribute_t : ClassData
        {
            public PermModelDataAnimatedMaterialAttribute_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelDataAnimatedMaterialAttribute_t", "PermModelDataAnimatedMaterialAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelDataAnimatedMaterialAttribute_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelDataAnimatedMaterialAttribute_t", "PermModelDataAnimatedMaterialAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelDataAnimatedMaterialAttribute_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string AttributeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "AttributeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttributeName", CallKind.ClassMember, m_classData, value); }
            }
            public int NumChannels
            {
                get { return Invoker.CallNative<int>("SDKClass", "NumChannels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumChannels", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PermModelExtPart_t : ClassData
        {
            public PermModelExtPart_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelExtPart_t", "PermModelExtPart_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelExtPart_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelExtPart_t", "PermModelExtPart_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelExtPart_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public int Parent
            {
                get { return Invoker.CallNative<int>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PermModelInfo_t : ClassData
        {
            public PermModelInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelInfo_t", "PermModelInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PermModelInfo_t", "PermModelInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PermModelInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HullMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HullMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HullMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D HullMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "HullMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HullMax", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ViewMin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ViewMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewMin", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ViewMax
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ViewMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewMax", CallKind.ClassMember, m_classData, value); }
            }
            public float Mass
            {
                get { return Invoker.CallNative<float>("SDKClass", "Mass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mass", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D EyePosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "EyePosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EyePosition", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxEyeDeflection
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxEyeDeflection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxEyeDeflection", CallKind.ClassMember, m_classData, value); }
            }
            public string SurfaceProperty
            {
                get { return Invoker.CallNative<string>("SDKClass", "SurfaceProperty", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceProperty", CallKind.ClassMember, m_classData, value); }
            }
            public string KeyValueText
            {
                get { return Invoker.CallNative<string>("SDKClass", "KeyValueText", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KeyValueText", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PhysFeModelDesc_t : ClassData
        {
            public PhysFeModelDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysFeModelDesc_t", "PhysFeModelDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysFeModelDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysFeModelDesc_t", "PhysFeModelDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysFeModelDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] CtrlHash
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "CtrlHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlHash", CallKind.ClassMember, m_classData, value); }
            }
            public string[] CtrlName
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "CtrlName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CtrlName", CallKind.ClassMember, m_classData, value); }
            }
            public uint StaticNodeFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "StaticNodeFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StaticNodeFlags", CallKind.ClassMember, m_classData, value); }
            }
            public uint DynamicNodeFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DynamicNodeFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicNodeFlags", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalForce", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalRotation
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalRotation", CallKind.ClassMember, m_classData, value); }
            }
            public ushort NodeCount
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NodeCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeCount", CallKind.ClassMember, m_classData, value); }
            }
            public ushort StaticNodes
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "StaticNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StaticNodes", CallKind.ClassMember, m_classData, value); }
            }
            public ushort RotLockStaticNodes
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RotLockStaticNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotLockStaticNodes", CallKind.ClassMember, m_classData, value); }
            }
            public ushort FirstPositionDrivenNode
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "FirstPositionDrivenNode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FirstPositionDrivenNode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort TreeDepth
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "TreeDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TreeDepth", CallKind.ClassMember, m_classData, value); }
            }
            public ushort NodeBaseJiggleboneDependsCount
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "NodeBaseJiggleboneDependsCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeBaseJiggleboneDependsCount", CallKind.ClassMember, m_classData, value); }
            }
            public ushort RopeCount
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RopeCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RopeCount", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Ropes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Ropes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ropes", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] AntiTunnelBytecode
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "AntiTunnelBytecode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntiTunnelBytecode", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] AntiTunnelTargetNodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "AntiTunnelTargetNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AntiTunnelTargetNodes", CallKind.ClassMember, m_classData, value); }
            }
            public float[] NodeInvMasses
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "NodeInvMasses", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeInvMasses", CallKind.ClassMember, m_classData, value); }
            }
            public float[] LegacyStretchForce
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "LegacyStretchForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LegacyStretchForce", CallKind.ClassMember, m_classData, value); }
            }
            public float[] NodeCollisionRadii
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "NodeCollisionRadii", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NodeCollisionRadii", CallKind.ClassMember, m_classData, value); }
            }
            public float[] DynNodeFriction
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "DynNodeFriction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynNodeFriction", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] WorldCollisionNodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "WorldCollisionNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldCollisionNodes", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] TreeParents
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "TreeParents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TreeParents", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] TreeCollisionMasks
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "TreeCollisionMasks", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TreeCollisionMasks", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] FreeNodes
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "FreeNodes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreeNodes", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] SourceElems
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "SourceElems", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SourceElems", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] GoalDampedSpringIntegrators
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "GoalDampedSpringIntegrators", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalDampedSpringIntegrators", CallKind.ClassMember, m_classData, value); }
            }
            public byte ExtraPressureIterations
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ExtraPressureIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtraPressureIterations", CallKind.ClassMember, m_classData, value); }
            }
            public byte ExtraGoalIterations
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ExtraGoalIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtraGoalIterations", CallKind.ClassMember, m_classData, value); }
            }
            public byte ExtraIterations
            {
                get { return Invoker.CallNative<byte>("SDKClass", "ExtraIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExtraIterations", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] DynNodeVertexSet
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "DynNodeVertexSet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynNodeVertexSet", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] VertexSetNames
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "VertexSetNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexSetNames", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] MorphSetData
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "MorphSetData", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MorphSetData", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] VertexMapValues
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "VertexMapValues", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexMapValues", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] LockToGoal
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "LockToGoal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LockToGoal", CallKind.ClassMember, m_classData, value); }
            }
            public short[] SkelParents
            {
                get { return Invoker.CallNative<short[]>("SDKClass", "SkelParents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkelParents", CallKind.ClassMember, m_classData, value); }
            }
            public float InternalPressure
            {
                get { return Invoker.CallNative<float>("SDKClass", "InternalPressure", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InternalPressure", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultTimeDilation
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultTimeDilation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultTimeDilation", CallKind.ClassMember, m_classData, value); }
            }
            public float Windage
            {
                get { return Invoker.CallNative<float>("SDKClass", "Windage", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Windage", CallKind.ClassMember, m_classData, value); }
            }
            public float WindDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "WindDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WindDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultSurfaceStretch
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultSurfaceStretch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultSurfaceStretch", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultThreadStretch
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultThreadStretch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultThreadStretch", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultGravityScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultGravityScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultGravityScale", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultVelAirDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultVelAirDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultVelAirDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultExpAirDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultExpAirDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultExpAirDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultVelQuadAirDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultVelQuadAirDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultVelQuadAirDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultExpQuadAirDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultExpQuadAirDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultExpQuadAirDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float RodVelocitySmoothRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "RodVelocitySmoothRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RodVelocitySmoothRate", CallKind.ClassMember, m_classData, value); }
            }
            public float QuadVelocitySmoothRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "QuadVelocitySmoothRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuadVelocitySmoothRate", CallKind.ClassMember, m_classData, value); }
            }
            public float AddWorldCollisionRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "AddWorldCollisionRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AddWorldCollisionRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float DefaultVolumetricSolveAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "DefaultVolumetricSolveAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefaultVolumetricSolveAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float MotionSmoothCDT
            {
                get { return Invoker.CallNative<float>("SDKClass", "MotionSmoothCDT", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MotionSmoothCDT", CallKind.ClassMember, m_classData, value); }
            }
            public ushort RodVelocitySmoothIterations
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RodVelocitySmoothIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RodVelocitySmoothIterations", CallKind.ClassMember, m_classData, value); }
            }
            public ushort QuadVelocitySmoothIterations
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "QuadVelocitySmoothIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "QuadVelocitySmoothIterations", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PhysicsParticleId_t : ClassData
        {
            public PhysicsParticleId_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysicsParticleId_t", "PhysicsParticleId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysicsParticleId_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysicsParticleId_t", "PhysicsParticleId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysicsParticleId_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Value
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PhysicsRagdollPose_t : ClassData
        {
            public PhysicsRagdollPose_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysicsRagdollPose_t", "PhysicsRagdollPose_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysicsRagdollPose_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysicsRagdollPose_t", "PhysicsRagdollPose_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysicsRagdollPose_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Owner
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Owner", CallKind.ClassMember, m_classData); }
            }
            public bool SetFromDebugHistory
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SetFromDebugHistory", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SetFromDebugHistory", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PhysShapeMarkup_t : ClassData
        {
            public PhysShapeMarkup_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysShapeMarkup_t", "PhysShapeMarkup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysShapeMarkup_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysShapeMarkup_t", "PhysShapeMarkup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysShapeMarkup_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BodyInAggregate
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyInAggregate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyInAggregate", CallKind.ClassMember, m_classData, value); }
            }
            public int ShapeInBody
            {
                get { return Invoker.CallNative<int>("SDKClass", "ShapeInBody", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShapeInBody", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PhysSoftbodyDesc_t : ClassData
        {
            public PhysSoftbodyDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysSoftbodyDesc_t", "PhysSoftbodyDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysSoftbodyDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PhysSoftbodyDesc_t", "PhysSoftbodyDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PhysSoftbodyDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] ParticleBoneHash
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "ParticleBoneHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleBoneHash", CallKind.ClassMember, m_classData, value); }
            }
            public string[] ParticleBoneName
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "ParticleBoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParticleBoneName", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PointCameraSettings_t : ClassData
        {
            public PointCameraSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointCameraSettings_t", "PointCameraSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointCameraSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointCameraSettings_t", "PointCameraSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointCameraSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float NearBlurryDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearBlurryDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearBlurryDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float NearCrispDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "NearCrispDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NearCrispDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FarCrispDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarCrispDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarCrispDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FarBlurryDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FarBlurryDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FarBlurryDistance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PointDefinition_t : ClassData
        {
            public PointDefinition_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointDefinition_t", "PointDefinition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointDefinition_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointDefinition_t", "PointDefinition_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointDefinition_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ControlPoint
            {
                get { return Invoker.CallNative<int>("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ControlPoint", CallKind.ClassMember, m_classData, value); }
            }
            public bool LocalCoords
            {
                get { return Invoker.CallNative<bool>("SDKClass", "LocalCoords", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalCoords", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Offset
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PointDefinitionWithTimeValues_t : PointDefinition_t
        {
            public PointDefinitionWithTimeValues_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointDefinitionWithTimeValues_t", "PointDefinitionWithTimeValues_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointDefinitionWithTimeValues_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PointDefinitionWithTimeValues_t", "PointDefinitionWithTimeValues_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PointDefinitionWithTimeValues_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TimeDuration
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeDuration", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeDuration", CallKind.ClassMember, m_classData, value); }
            }
            public PointDefinition_t Parent
            {
                get { return Invoker.CallNative<PointDefinition_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class PostProcessingBloomParameters_t : ClassData
        {
            public PostProcessingBloomParameters_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingBloomParameters_t", "PostProcessingBloomParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingBloomParameters_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingBloomParameters_t", "PostProcessingBloomParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingBloomParameters_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint BlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "BlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public float BloomStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "BloomStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BloomStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float ScreenBloomStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ScreenBloomStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScreenBloomStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float BlurBloomStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "BlurBloomStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlurBloomStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float BloomThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "BloomThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BloomThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float BloomThresholdWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "BloomThresholdWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BloomThresholdWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float SkyboxBloomStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "SkyboxBloomStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SkyboxBloomStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float BloomStartValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "BloomStartValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BloomStartValue", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomRadius", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomEffectsScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomEffectsScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomEffectsScale", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomLensDirtStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomLensDirtStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomLensDirtStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float ComputeBloomLensDirtBlackLevel
            {
                get { return Invoker.CallNative<float>("SDKClass", "ComputeBloomLensDirtBlackLevel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ComputeBloomLensDirtBlackLevel", CallKind.ClassMember, m_classData, value); }
            }
            public float[] BlurWeight
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "BlurWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlurWeight", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] BlurTint
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "BlurTint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BlurTint", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PostProcessingFogScatteringParameters_t : ClassData
        {
            public PostProcessingFogScatteringParameters_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingFogScatteringParameters_t", "PostProcessingFogScatteringParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingFogScatteringParameters_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingFogScatteringParameters_t", "PostProcessingFogScatteringParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingFogScatteringParameters_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Scale
            {
                get { return Invoker.CallNative<float>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public float CubemapScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "CubemapScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CubemapScale", CallKind.ClassMember, m_classData, value); }
            }
            public float VolumetricScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "VolumetricScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VolumetricScale", CallKind.ClassMember, m_classData, value); }
            }
            public float GradientScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "GradientScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GradientScale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PostProcessingLocalContrastParameters_t : ClassData
        {
            public PostProcessingLocalContrastParameters_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingLocalContrastParameters_t", "PostProcessingLocalContrastParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingLocalContrastParameters_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingLocalContrastParameters_t", "PostProcessingLocalContrastParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingLocalContrastParameters_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float LocalContrastStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalContrastStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalContrastStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalContrastEdgeStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalContrastEdgeStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalContrastEdgeStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalContrastVignetteStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalContrastVignetteStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalContrastVignetteStart", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalContrastVignetteEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalContrastVignetteEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalContrastVignetteEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float LocalContrastVignetteBlur
            {
                get { return Invoker.CallNative<float>("SDKClass", "LocalContrastVignetteBlur", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalContrastVignetteBlur", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PostProcessingResource_t : ClassData
        {
            public PostProcessingResource_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingResource_t", "PostProcessingResource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingResource_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingResource_t", "PostProcessingResource_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingResource_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool HasTonemapParams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasTonemapParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasTonemapParams", CallKind.ClassMember, m_classData, value); }
            }
            public PostProcessingTonemapParameters_t ToneMapParams
            {
                get { return Invoker.CallNative<PostProcessingTonemapParameters_t>("SDKClass", "ToneMapParams", CallKind.ClassMember, m_classData); }
            }
            public bool HasBloomParams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBloomParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBloomParams", CallKind.ClassMember, m_classData, value); }
            }
            public PostProcessingBloomParameters_t BloomParams
            {
                get { return Invoker.CallNative<PostProcessingBloomParameters_t>("SDKClass", "BloomParams", CallKind.ClassMember, m_classData); }
            }
            public bool HasVignetteParams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasVignetteParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasVignetteParams", CallKind.ClassMember, m_classData, value); }
            }
            public PostProcessingVignetteParameters_t VignetteParams
            {
                get { return Invoker.CallNative<PostProcessingVignetteParameters_t>("SDKClass", "VignetteParams", CallKind.ClassMember, m_classData); }
            }
            public bool HasLocalContrastParams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasLocalContrastParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasLocalContrastParams", CallKind.ClassMember, m_classData, value); }
            }
            public PostProcessingLocalContrastParameters_t LocalConstrastParams
            {
                get { return Invoker.CallNative<PostProcessingLocalContrastParameters_t>("SDKClass", "LocalConstrastParams", CallKind.ClassMember, m_classData); }
            }
            public int ColorCorrectionVolumeDim
            {
                get { return Invoker.CallNative<int>("SDKClass", "ColorCorrectionVolumeDim", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorCorrectionVolumeDim", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasColorCorrection
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasColorCorrection", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasColorCorrection", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasFogScatteringParams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasFogScatteringParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasFogScatteringParams", CallKind.ClassMember, m_classData, value); }
            }
            public PostProcessingFogScatteringParameters_t FogScatteringParams
            {
                get { return Invoker.CallNative<PostProcessingFogScatteringParameters_t>("SDKClass", "FogScatteringParams", CallKind.ClassMember, m_classData); }
            }
        }
        public class PostProcessingTonemapParameters_t : ClassData
        {
            public PostProcessingTonemapParameters_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingTonemapParameters_t", "PostProcessingTonemapParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingTonemapParameters_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingTonemapParameters_t", "PostProcessingTonemapParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingTonemapParameters_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float ExposureBias
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureBias", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureBias", CallKind.ClassMember, m_classData, value); }
            }
            public float ShoulderStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ShoulderStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShoulderStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearAngle
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearAngle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearAngle", CallKind.ClassMember, m_classData, value); }
            }
            public float ToeStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "ToeStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeStrength", CallKind.ClassMember, m_classData, value); }
            }
            public float ToeNum
            {
                get { return Invoker.CallNative<float>("SDKClass", "ToeNum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeNum", CallKind.ClassMember, m_classData, value); }
            }
            public float ToeDenom
            {
                get { return Invoker.CallNative<float>("SDKClass", "ToeDenom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToeDenom", CallKind.ClassMember, m_classData, value); }
            }
            public float WhitePoint
            {
                get { return Invoker.CallNative<float>("SDKClass", "WhitePoint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WhitePoint", CallKind.ClassMember, m_classData, value); }
            }
            public float LuminanceSource
            {
                get { return Invoker.CallNative<float>("SDKClass", "LuminanceSource", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LuminanceSource", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureBiasShadows
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureBiasShadows", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureBiasShadows", CallKind.ClassMember, m_classData, value); }
            }
            public float ExposureBiasHighlights
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExposureBiasHighlights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExposureBiasHighlights", CallKind.ClassMember, m_classData, value); }
            }
            public float MinShadowLum
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinShadowLum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinShadowLum", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxShadowLum
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxShadowLum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxShadowLum", CallKind.ClassMember, m_classData, value); }
            }
            public float MinHighlightLum
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinHighlightLum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinHighlightLum", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxHighlightLum
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxHighlightLum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxHighlightLum", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PostProcessingVignetteParameters_t : ClassData
        {
            public PostProcessingVignetteParameters_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingVignetteParameters_t", "PostProcessingVignetteParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingVignetteParameters_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PostProcessingVignetteParameters_t", "PostProcessingVignetteParameters_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PostProcessingVignetteParameters_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float VignetteStrength
            {
                get { return Invoker.CallNative<float>("SDKClass", "VignetteStrength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VignetteStrength", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D Center
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public float Roundness
            {
                get { return Invoker.CallNative<float>("SDKClass", "Roundness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Roundness", CallKind.ClassMember, m_classData, value); }
            }
            public float Feather
            {
                get { return Invoker.CallNative<float>("SDKClass", "Feather", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Feather", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D ColorTint
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "ColorTint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ColorTint", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class PredictedDamageTag_t : ClassData
        {
            public PredictedDamageTag_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PredictedDamageTag_t", "PredictedDamageTag_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PredictedDamageTag_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("PredictedDamageTag_t", "PredictedDamageTag_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public PredictedDamageTag_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TagTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "TagTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagTick", CallKind.ClassMember, m_classData, value); }
            }
            public float FlinchModSmall
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlinchModSmall", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlinchModSmall", CallKind.ClassMember, m_classData, value); }
            }
            public float FlinchModLarge
            {
                get { return Invoker.CallNative<float>("SDKClass", "FlinchModLarge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlinchModLarge", CallKind.ClassMember, m_classData, value); }
            }
            public float FriendlyFireDamageReductionRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "FriendlyFireDamageReductionRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FriendlyFireDamageReductionRatio", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class QuestProgress : ClassData
        {
            public QuestProgress(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("QuestProgress", "QuestProgress", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public QuestProgress(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("QuestProgress", "QuestProgress", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public QuestProgress()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class ragdoll_t : ClassData
        {
            public ragdoll_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdoll_t", "ragdoll_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdoll_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdoll_t", "ragdoll_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdoll_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] BoneIndex
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool AllowStretch
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AllowStretch", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AllowStretch", CallKind.ClassMember, m_classData, value); }
            }
            public bool Unused
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Unused", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Unused", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RagdollCreationParams_t : ClassData
        {
            public RagdollCreationParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RagdollCreationParams_t", "RagdollCreationParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RagdollCreationParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RagdollCreationParams_t", "RagdollCreationParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RagdollCreationParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Force
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Force", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Force", CallKind.ClassMember, m_classData, value); }
            }
            public int ForceBone
            {
                get { return Invoker.CallNative<int>("SDKClass", "ForceBone", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceBone", CallKind.ClassMember, m_classData, value); }
            }
            public bool ForceCurrentWorldTransform
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ForceCurrentWorldTransform", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ForceCurrentWorldTransform", CallKind.ClassMember, m_classData, value); }
            }
            public bool UseLRURetirement
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UseLRURetirement", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UseLRURetirement", CallKind.ClassMember, m_classData, value); }
            }
            public int HealthToGrant
            {
                get { return Invoker.CallNative<int>("SDKClass", "HealthToGrant", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HealthToGrant", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ragdollelement_t : ClassData
        {
            public ragdollelement_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdollelement_t", "ragdollelement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdollelement_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdollelement_t", "ragdollelement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdollelement_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D OriginParentSpace
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OriginParentSpace", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OriginParentSpace", CallKind.ClassMember, m_classData, value); }
            }
            public int ParentIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public int Height
            {
                get { return Invoker.CallNative<int>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ragdollhierarchyjoint_t : ClassData
        {
            public ragdollhierarchyjoint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdollhierarchyjoint_t", "ragdollhierarchyjoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdollhierarchyjoint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ragdollhierarchyjoint_t", "ragdollhierarchyjoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ragdollhierarchyjoint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ParentIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int ChildIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "ChildIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ChildIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class Relationship_t : ClassData
        {
            public Relationship_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Relationship_t", "Relationship_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Relationship_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("Relationship_t", "Relationship_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public Relationship_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Disposition
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Disposition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Disposition", CallKind.ClassMember, m_classData, value); }
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RelationshipOverride_t : Relationship_t
        {
            public RelationshipOverride_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RelationshipOverride_t", "RelationshipOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RelationshipOverride_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RelationshipOverride_t", "RelationshipOverride_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RelationshipOverride_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CBaseEntity Entity
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Entity", CallKind.ClassMember, m_classData); }
            }
            public uint ClassType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ClassType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClassType", CallKind.ClassMember, m_classData, value); }
            }
            public Relationship_t Parent
            {
                get { return Invoker.CallNative<Relationship_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class RenderHairStrandInfo_t : ClassData
        {
            public RenderHairStrandInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderHairStrandInfo_t", "RenderHairStrandInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderHairStrandInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderHairStrandInfo_t", "RenderHairStrandInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderHairStrandInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint[] GuideHairIndices_nSurfaceTriIndex
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "GuideHairIndices_nSurfaceTriIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GuideHairIndices_nSurfaceTriIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] GuideBary_vBaseBary
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "GuideBary_vBaseBary", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GuideBary_vBaseBary", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] RootOffset_flLengthScale
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "RootOffset_flLengthScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RootOffset_flLengthScale", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] PackedBaseUv
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "PackedBaseUv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PackedBaseUv", CallKind.ClassMember, m_classData, value); }
            }
            public uint PackedSurfaceNormalOs
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PackedSurfaceNormalOs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PackedSurfaceNormalOs", CallKind.ClassMember, m_classData, value); }
            }
            public uint PackedSurfaceTangentOs
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PackedSurfaceTangentOs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PackedSurfaceTangentOs", CallKind.ClassMember, m_classData, value); }
            }
            public uint DataOffset_Segments
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DataOffset_Segments", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DataOffset_Segments", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RenderInputLayoutField_t : ClassData
        {
            public RenderInputLayoutField_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderInputLayoutField_t", "RenderInputLayoutField_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderInputLayoutField_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderInputLayoutField_t", "RenderInputLayoutField_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderInputLayoutField_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string SemanticName
            {
                get { return Invoker.CallNative<string>("SDKClass", "SemanticName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SemanticName", CallKind.ClassMember, m_classData, value); }
            }
            public char SemanticIndex
            {
                get { return Invoker.CallNative<char>("SDKClass", "SemanticIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SemanticIndex", CallKind.ClassMember, m_classData, value); }
            }
            public short Offset
            {
                get { return Invoker.CallNative<short>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public char Slot
            {
                get { return Invoker.CallNative<char>("SDKClass", "Slot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slot", CallKind.ClassMember, m_classData, value); }
            }
            public byte SlotType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "SlotType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SlotType", CallKind.ClassMember, m_classData, value); }
            }
            public string ShaderSemantic
            {
                get { return Invoker.CallNative<string>("SDKClass", "ShaderSemantic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ShaderSemantic", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RenderProjectedMaterial_t : ClassData
        {
            public RenderProjectedMaterial_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderProjectedMaterial_t", "RenderProjectedMaterial_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderProjectedMaterial_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderProjectedMaterial_t", "RenderProjectedMaterial_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderProjectedMaterial_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class RenderSkeletonBone_t : ClassData
        {
            public RenderSkeletonBone_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderSkeletonBone_t", "RenderSkeletonBone_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderSkeletonBone_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RenderSkeletonBone_t", "RenderSkeletonBone_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RenderSkeletonBone_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string BoneName
            {
                get { return Invoker.CallNative<string>("SDKClass", "BoneName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneName", CallKind.ClassMember, m_classData, value); }
            }
            public string ParentName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ParentName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentName", CallKind.ClassMember, m_classData, value); }
            }
            public SkeletonBoneBounds_t Bbox
            {
                get { return Invoker.CallNative<SkeletonBoneBounds_t>("SDKClass", "Bbox", CallKind.ClassMember, m_classData); }
            }
            public float SphereRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "SphereRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SphereRadius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ResourceId_t : ClassData
        {
            public ResourceId_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResourceId_t", "ResourceId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResourceId_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResourceId_t", "ResourceId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResourceId_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong Value
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ResponseContext_t : ClassData
        {
            public ResponseContext_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseContext_t", "ResponseContext_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseContext_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseContext_t", "ResponseContext_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseContext_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string Value
            {
                get { return Invoker.CallNative<string>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
            public float ExpirationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "ExpirationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ExpirationTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ResponseFollowup : ClassData
        {
            public ResponseFollowup(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseFollowup", "ResponseFollowup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseFollowup(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseFollowup", "ResponseFollowup", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseFollowup()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Followup_concept
            {
                get { return Invoker.CallNative<string>("SDKClass", "Followup_concept", CallKind.ClassMember, m_classData); }
            }
            public string Followup_contexts
            {
                get { return Invoker.CallNative<string>("SDKClass", "Followup_contexts", CallKind.ClassMember, m_classData); }
            }
            public float Followup_delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Followup_delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Followup_delay", CallKind.ClassMember, m_classData, value); }
            }
            public string Followup_target
            {
                get { return Invoker.CallNative<string>("SDKClass", "Followup_target", CallKind.ClassMember, m_classData); }
            }
            public string Followup_entityiotarget
            {
                get { return Invoker.CallNative<string>("SDKClass", "Followup_entityiotarget", CallKind.ClassMember, m_classData); }
            }
            public string Followup_entityioinput
            {
                get { return Invoker.CallNative<string>("SDKClass", "Followup_entityioinput", CallKind.ClassMember, m_classData); }
            }
            public float Followup_entityiodelay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Followup_entityiodelay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Followup_entityiodelay", CallKind.ClassMember, m_classData, value); }
            }
            public bool Fired
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Fired", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Fired", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ResponseParams : ClassData
        {
            public ResponseParams(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseParams", "ResponseParams", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseParams(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ResponseParams", "ResponseParams", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ResponseParams()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short Odds
            {
                get { return Invoker.CallNative<short>("SDKClass", "Odds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Odds", CallKind.ClassMember, m_classData, value); }
            }
            public short Flags
            {
                get { return Invoker.CallNative<short>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int[] Followup
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Followup", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnBlendVertex_t : ClassData
        {
            public RnBlendVertex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnBlendVertex_t", "RnBlendVertex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnBlendVertex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnBlendVertex_t", "RnBlendVertex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnBlendVertex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort TargetIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "TargetIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetIndex", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnBodyDesc_t : ClassData
        {
            public RnBodyDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnBodyDesc_t", "RnBodyDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnBodyDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnBodyDesc_t", "RnBodyDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnBodyDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string DebugName
            {
                get { return Invoker.CallNative<string>("SDKClass", "DebugName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugName", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AngularVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AngularVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LocalMassCenter
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LocalMassCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalMassCenter", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] LocalInertiaInv
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "LocalInertiaInv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LocalInertiaInv", CallKind.ClassMember, m_classData, value); }
            }
            public float MassInv
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassInv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassInv", CallKind.ClassMember, m_classData, value); }
            }
            public float GameMass
            {
                get { return Invoker.CallNative<float>("SDKClass", "GameMass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameMass", CallKind.ClassMember, m_classData, value); }
            }
            public float MassScaleInv
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassScaleInv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassScaleInv", CallKind.ClassMember, m_classData, value); }
            }
            public float InertiaScaleInv
            {
                get { return Invoker.CallNative<float>("SDKClass", "InertiaScaleInv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InertiaScaleInv", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearBuoyancyDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearBuoyancyDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearBuoyancyDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularBuoyancyDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularBuoyancyDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularBuoyancyDrag", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastAwakeForceAccum
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastAwakeForceAccum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAwakeForceAccum", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LastAwakeTorqueAccum
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LastAwakeTorqueAccum", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastAwakeTorqueAccum", CallKind.ClassMember, m_classData, value); }
            }
            public float BuoyancyFactor
            {
                get { return Invoker.CallNative<float>("SDKClass", "BuoyancyFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuoyancyFactor", CallKind.ClassMember, m_classData, value); }
            }
            public float GravityScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "GravityScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GravityScale", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeScale", CallKind.ClassMember, m_classData, value); }
            }
            public int BodyType
            {
                get { return Invoker.CallNative<int>("SDKClass", "BodyType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BodyType", CallKind.ClassMember, m_classData, value); }
            }
            public uint GameIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "GameIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint GameFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "GameFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GameFlags", CallKind.ClassMember, m_classData, value); }
            }
            public char MinVelocityIterations
            {
                get { return Invoker.CallNative<char>("SDKClass", "MinVelocityIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinVelocityIterations", CallKind.ClassMember, m_classData, value); }
            }
            public char MinPositionIterations
            {
                get { return Invoker.CallNative<char>("SDKClass", "MinPositionIterations", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinPositionIterations", CallKind.ClassMember, m_classData, value); }
            }
            public char MassPriority
            {
                get { return Invoker.CallNative<char>("SDKClass", "MassPriority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassPriority", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool Sleeping
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Sleeping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sleeping", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsContinuousEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsContinuousEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsContinuousEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool DragEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DragEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DragEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool BuoyancyDragEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BuoyancyDragEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuoyancyDragEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Gravity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Gravity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Gravity", CallKind.ClassMember, m_classData, value); }
            }
            public bool SpeculativeEnabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "SpeculativeEnabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SpeculativeEnabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasShadowController
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasShadowController", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasShadowController", CallKind.ClassMember, m_classData, value); }
            }
            public byte DynamicContinuousContactBehavior
            {
                get { return Invoker.CallNative<byte>("SDKClass", "DynamicContinuousContactBehavior", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DynamicContinuousContactBehavior", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnCapsule_t : ClassData
        {
            public RnCapsule_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnCapsule_t", "RnCapsule_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnCapsule_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnCapsule_t", "RnCapsule_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnCapsule_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] Center
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnCapsuleDesc_t : RnShapeDesc_t
        {
            public RnCapsuleDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnCapsuleDesc_t", "RnCapsuleDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnCapsuleDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnCapsuleDesc_t", "RnCapsuleDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnCapsuleDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public RnCapsule_t Capsule
            {
                get { return Invoker.CallNative<RnCapsule_t>("SDKClass", "Capsule", CallKind.ClassMember, m_classData); }
            }
            public RnShapeDesc_t Parent
            {
                get { return Invoker.CallNative<RnShapeDesc_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnFace_t : ClassData
        {
            public RnFace_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnFace_t", "RnFace_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnFace_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnFace_t", "RnFace_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnFace_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Edge
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Edge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Edge", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnHalfEdge_t : ClassData
        {
            public RnHalfEdge_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHalfEdge_t", "RnHalfEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHalfEdge_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHalfEdge_t", "RnHalfEdge_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHalfEdge_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Next
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Next", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Next", CallKind.ClassMember, m_classData, value); }
            }
            public byte Twin
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Twin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Twin", CallKind.ClassMember, m_classData, value); }
            }
            public byte Origin
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Origin", CallKind.ClassMember, m_classData, value); }
            }
            public byte Face
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Face", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Face", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnHull_t : ClassData
        {
            public RnHull_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHull_t", "RnHull_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHull_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHull_t", "RnHull_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHull_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Centroid
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Centroid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Centroid", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxAngularRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxAngularRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxAngularRadius", CallKind.ClassMember, m_classData, value); }
            }
            public AABB_t Bounds
            {
                get { return Invoker.CallNative<AABB_t>("SDKClass", "Bounds", CallKind.ClassMember, m_classData); }
            }
            public Vector2D OrthographicAreas
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OrthographicAreas", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrthographicAreas", CallKind.ClassMember, m_classData, value); }
            }
            public float Volume
            {
                get { return Invoker.CallNative<float>("SDKClass", "Volume", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Volume", CallKind.ClassMember, m_classData, value); }
            }
            public float SurfaceArea
            {
                get { return Invoker.CallNative<float>("SDKClass", "SurfaceArea", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfaceArea", CallKind.ClassMember, m_classData, value); }
            }
            public QAngle[] VertexPositions
            {
                get { return Invoker.CallNative<QAngle[]>("SDKClass", "VertexPositions", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VertexPositions", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public int[] RegionSVM
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "RegionSVM", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnHullDesc_t : RnShapeDesc_t
        {
            public RnHullDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHullDesc_t", "RnHullDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHullDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnHullDesc_t", "RnHullDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnHullDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public RnHull_t Hull
            {
                get { return Invoker.CallNative<RnHull_t>("SDKClass", "Hull", CallKind.ClassMember, m_classData); }
            }
            public RnShapeDesc_t Parent
            {
                get { return Invoker.CallNative<RnShapeDesc_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnMesh_t : ClassData
        {
            public RnMesh_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnMesh_t", "RnMesh_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnMesh_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnMesh_t", "RnMesh_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnMesh_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Min
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Max
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] TriangleEdgeFlags
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "TriangleEdgeFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriangleEdgeFlags", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] Materials
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "Materials", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Materials", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D OrthographicAreas
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "OrthographicAreas", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OrthographicAreas", CallKind.ClassMember, m_classData, value); }
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public uint DebugFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "DebugFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugFlags", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnMeshDesc_t : RnShapeDesc_t
        {
            public RnMeshDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnMeshDesc_t", "RnMeshDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnMeshDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnMeshDesc_t", "RnMeshDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnMeshDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public RnMesh_t Mesh
            {
                get { return Invoker.CallNative<RnMesh_t>("SDKClass", "Mesh", CallKind.ClassMember, m_classData); }
            }
            public RnShapeDesc_t Parent
            {
                get { return Invoker.CallNative<RnShapeDesc_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnNode_t : ClassData
        {
            public RnNode_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnNode_t", "RnNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnNode_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnNode_t", "RnNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnNode_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Min
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public uint Children
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Children", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Children", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Max
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
            public uint TriangleOffset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TriangleOffset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TriangleOffset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnPlane_t : ClassData
        {
            public RnPlane_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnPlane_t", "RnPlane_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnPlane_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnPlane_t", "RnPlane_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnPlane_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Normal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Normal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Normal", CallKind.ClassMember, m_classData, value); }
            }
            public float Offset
            {
                get { return Invoker.CallNative<float>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnShapeDesc_t : ClassData
        {
            public RnShapeDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnShapeDesc_t", "RnShapeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnShapeDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnShapeDesc_t", "RnShapeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnShapeDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint CollisionAttributeIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CollisionAttributeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionAttributeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public uint SurfacePropertyIndex
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SurfacePropertyIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfacePropertyIndex", CallKind.ClassMember, m_classData, value); }
            }
            public string UserFriendlyName
            {
                get { return Invoker.CallNative<string>("SDKClass", "UserFriendlyName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UserFriendlyName", CallKind.ClassMember, m_classData, value); }
            }
            public bool UserFriendlyNameSealed
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UserFriendlyNameSealed", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UserFriendlyNameSealed", CallKind.ClassMember, m_classData, value); }
            }
            public bool UserFriendlyNameLong
            {
                get { return Invoker.CallNative<bool>("SDKClass", "UserFriendlyNameLong", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "UserFriendlyNameLong", CallKind.ClassMember, m_classData, value); }
            }
            public uint ToolMaterialHash
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ToolMaterialHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ToolMaterialHash", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnSoftbodyCapsule_t : ClassData
        {
            public RnSoftbodyCapsule_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodyCapsule_t", "RnSoftbodyCapsule_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodyCapsule_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodyCapsule_t", "RnSoftbodyCapsule_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodyCapsule_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector[] Center
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public float Radius
            {
                get { return Invoker.CallNative<float>("SDKClass", "Radius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Radius", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] Particle
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Particle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Particle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnSoftbodyParticle_t : ClassData
        {
            public RnSoftbodyParticle_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodyParticle_t", "RnSoftbodyParticle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodyParticle_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodyParticle_t", "RnSoftbodyParticle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodyParticle_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MassInv
            {
                get { return Invoker.CallNative<float>("SDKClass", "MassInv", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassInv", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnSoftbodySpring_t : ClassData
        {
            public RnSoftbodySpring_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodySpring_t", "RnSoftbodySpring_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodySpring_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSoftbodySpring_t", "RnSoftbodySpring_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSoftbodySpring_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] Particle
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "Particle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Particle", CallKind.ClassMember, m_classData, value); }
            }
            public float Length
            {
                get { return Invoker.CallNative<float>("SDKClass", "Length", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Length", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnSphereDesc_t : RnShapeDesc_t
        {
            public RnSphereDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSphereDesc_t", "RnSphereDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSphereDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnSphereDesc_t", "RnSphereDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnSphereDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public RnShapeDesc_t Parent
            {
                get { return Invoker.CallNative<RnShapeDesc_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class RnTriangle_t : ClassData
        {
            public RnTriangle_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnTriangle_t", "RnTriangle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnTriangle_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnTriangle_t", "RnTriangle_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnTriangle_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Index
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnVertex_t : ClassData
        {
            public RnVertex_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnVertex_t", "RnVertex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnVertex_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnVertex_t", "RnVertex_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnVertex_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Edge
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Edge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Edge", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class RnWing_t : ClassData
        {
            public RnWing_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnWing_t", "RnWing_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnWing_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("RnWing_t", "RnWing_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public RnWing_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int[] Index
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SampleCode : ClassData
        {
            public SampleCode(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SampleCode", "SampleCode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SampleCode(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SampleCode", "SampleCode", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SampleCode()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte[] SubCode
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "SubCode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SubCode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SceneEventId_t : ClassData
        {
            public SceneEventId_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneEventId_t", "SceneEventId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneEventId_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneEventId_t", "SceneEventId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneEventId_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Value
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Value", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Value", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SceneObject_t : ClassData
        {
            public SceneObject_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneObject_t", "SceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneObject_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneObject_t", "SceneObject_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneObject_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ObjectID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ObjectID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObjectID", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D[] Transform
            {
                get { return Invoker.CallNative<Vector4D[]>("SDKClass", "Transform", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Transform", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeStartDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeStartDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeStartDistance", CallKind.ClassMember, m_classData, value); }
            }
            public float FadeEndDistance
            {
                get { return Invoker.CallNative<float>("SDKClass", "FadeEndDistance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FadeEndDistance", CallKind.ClassMember, m_classData, value); }
            }
            public string Skin
            {
                get { return Invoker.CallNative<string>("SDKClass", "Skin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Skin", CallKind.ClassMember, m_classData, value); }
            }
            public uint ObjectTypeFlags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ObjectTypeFlags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ObjectTypeFlags", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LightingOrigin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LightingOrigin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightingOrigin", CallKind.ClassMember, m_classData, value); }
            }
            public short OverlayRenderOrder
            {
                get { return Invoker.CallNative<short>("SDKClass", "OverlayRenderOrder", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverlayRenderOrder", CallKind.ClassMember, m_classData, value); }
            }
            public short LODOverride
            {
                get { return Invoker.CallNative<short>("SDKClass", "LODOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LODOverride", CallKind.ClassMember, m_classData, value); }
            }
            public int CubeMapPrecomputedHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "CubeMapPrecomputedHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CubeMapPrecomputedHandshake", CallKind.ClassMember, m_classData, value); }
            }
            public int LightProbeVolumePrecomputedHandshake
            {
                get { return Invoker.CallNative<int>("SDKClass", "LightProbeVolumePrecomputedHandshake", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LightProbeVolumePrecomputedHandshake", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SceneViewId_t : ClassData
        {
            public SceneViewId_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneViewId_t", "SceneViewId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneViewId_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SceneViewId_t", "SceneViewId_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SceneViewId_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong ViewId
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "ViewId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ViewId", CallKind.ClassMember, m_classData, value); }
            }
            public ulong FrameCount
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "FrameCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrameCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ScriptInfo_t : ClassData
        {
            public ScriptInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ScriptInfo_t", "ScriptInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ScriptInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ScriptInfo_t", "ScriptInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ScriptInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Code
            {
                get { return Invoker.CallNative<string>("SDKClass", "Code", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Code", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ProxyReadParams
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ProxyReadParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProxyReadParams", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ProxyWriteParams
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ProxyWriteParams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProxyWriteParams", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ScriptType
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ScriptType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ScriptType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SelectedEditItemInfo_t : ClassData
        {
            public SelectedEditItemInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SelectedEditItemInfo_t", "SelectedEditItemInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SelectedEditItemInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SelectedEditItemInfo_t", "SelectedEditItemInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SelectedEditItemInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class SellbackPurchaseEntry_t : ClassData
        {
            public SellbackPurchaseEntry_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SellbackPurchaseEntry_t", "SellbackPurchaseEntry_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SellbackPurchaseEntry_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SellbackPurchaseEntry_t", "SellbackPurchaseEntry_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SellbackPurchaseEntry_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort DefIdx
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "DefIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DefIdx", CallKind.ClassMember, m_classData, value); }
            }
            public int Cost
            {
                get { return Invoker.CallNative<int>("SDKClass", "Cost", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Cost", CallKind.ClassMember, m_classData, value); }
            }
            public int PrevArmor
            {
                get { return Invoker.CallNative<int>("SDKClass", "PrevArmor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevArmor", CallKind.ClassMember, m_classData, value); }
            }
            public bool PrevHelmet
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PrevHelmet", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevHelmet", CallKind.ClassMember, m_classData, value); }
            }
            public CEntityInstance Item
            {
                get { return Invoker.CallNative<CEntityInstance>("SDKClass", "Item", CallKind.ClassMember, m_classData); }
            }
        }
        public class SequenceHistory_t : ClassData
        {
            public SequenceHistory_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SequenceHistory_t", "SequenceHistory_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SequenceHistory_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SequenceHistory_t", "SequenceHistory_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SequenceHistory_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float SeqStartTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "SeqStartTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeqStartTime", CallKind.ClassMember, m_classData, value); }
            }
            public float SeqFixedCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "SeqFixedCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeqFixedCycle", CallKind.ClassMember, m_classData, value); }
            }
            public uint SeqLoopMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SeqLoopMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SeqLoopMode", CallKind.ClassMember, m_classData, value); }
            }
            public float PlaybackRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "PlaybackRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PlaybackRate", CallKind.ClassMember, m_classData, value); }
            }
            public float CyclesPerSecond
            {
                get { return Invoker.CallNative<float>("SDKClass", "CyclesPerSecond", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CyclesPerSecond", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SequenceWeightedList_t : ClassData
        {
            public SequenceWeightedList_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SequenceWeightedList_t", "SequenceWeightedList_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SequenceWeightedList_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SequenceWeightedList_t", "SequenceWeightedList_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SequenceWeightedList_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Sequence
            {
                get { return Invoker.CallNative<int>("SDKClass", "Sequence", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Sequence", CallKind.ClassMember, m_classData, value); }
            }
            public float RelativeWeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "RelativeWeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RelativeWeight", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ServerAuthoritativeWeaponSlot_t : ClassData
        {
            public ServerAuthoritativeWeaponSlot_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ServerAuthoritativeWeaponSlot_t", "ServerAuthoritativeWeaponSlot_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ServerAuthoritativeWeaponSlot_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ServerAuthoritativeWeaponSlot_t", "ServerAuthoritativeWeaponSlot_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ServerAuthoritativeWeaponSlot_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Class
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Class", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Class", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Slot
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Slot", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Slot", CallKind.ClassMember, m_classData, value); }
            }
            public ushort ItemDefIdx
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ItemDefIdx", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemDefIdx", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class shard_model_desc_t : ClassData
        {
            public shard_model_desc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("shard_model_desc_t", "shard_model_desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public shard_model_desc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("shard_model_desc_t", "shard_model_desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public shard_model_desc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ModelID
            {
                get { return Invoker.CallNative<int>("SDKClass", "ModelID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelID", CallKind.ClassMember, m_classData, value); }
            }
            public byte Solid
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Solid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Solid", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D PanelSize
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "PanelSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelSize", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D StressPositionA
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "StressPositionA", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StressPositionA", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D StressPositionB
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "StressPositionB", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StressPositionB", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] PanelVertices
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "PanelVertices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PanelVertices", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D[] InitialPanelVertices
            {
                get { return Invoker.CallNative<Vector2D[]>("SDKClass", "InitialPanelVertices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InitialPanelVertices", CallKind.ClassMember, m_classData, value); }
            }
            public float GlassHalfThickness
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlassHalfThickness", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlassHalfThickness", CallKind.ClassMember, m_classData, value); }
            }
            public bool HasParent
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasParent", CallKind.ClassMember, m_classData, value); }
            }
            public bool ParentFrozen
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ParentFrozen", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ParentFrozen", CallKind.ClassMember, m_classData, value); }
            }
            public uint SurfacePropStringToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "SurfacePropStringToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfacePropStringToken", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SimpleConstraintSoundProfile : ClassData
        {
            public SimpleConstraintSoundProfile(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SimpleConstraintSoundProfile", "SimpleConstraintSoundProfile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SimpleConstraintSoundProfile(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SimpleConstraintSoundProfile", "SimpleConstraintSoundProfile", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SimpleConstraintSoundProfile()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float[] KeyPoints
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "KeyPoints", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "KeyPoints", CallKind.ClassMember, m_classData, value); }
            }
            public float[] ReversalSoundThresholds
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "ReversalSoundThresholds", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReversalSoundThresholds", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SkeletonAnimCapture_t : ClassData
        {
            public SkeletonAnimCapture_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonAnimCapture_t", "SkeletonAnimCapture_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonAnimCapture_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonAnimCapture_t", "SkeletonAnimCapture_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonAnimCapture_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int EntIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int EntParent
            {
                get { return Invoker.CallNative<int>("SDKClass", "EntParent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntParent", CallKind.ClassMember, m_classData, value); }
            }
            public int[] ImportedCollision
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "ImportedCollision", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ImportedCollision", CallKind.ClassMember, m_classData, value); }
            }
            public string ModelName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ModelName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModelName", CallKind.ClassMember, m_classData, value); }
            }
            public string CaptureName
            {
                get { return Invoker.CallNative<string>("SDKClass", "CaptureName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CaptureName", CallKind.ClassMember, m_classData, value); }
            }
            public int FlexControllers
            {
                get { return Invoker.CallNative<int>("SDKClass", "FlexControllers", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FlexControllers", CallKind.ClassMember, m_classData, value); }
            }
            public bool Predicted
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Predicted", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Predicted", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SkeletonBoneBounds_t : ClassData
        {
            public SkeletonBoneBounds_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonBoneBounds_t", "SkeletonBoneBounds_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonBoneBounds_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonBoneBounds_t", "SkeletonBoneBounds_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonBoneBounds_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Center
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Center", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Center", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Size
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Size", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Size", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SkeletonDemoDb_t : ClassData
        {
            public SkeletonDemoDb_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonDemoDb_t", "SkeletonDemoDb_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonDemoDb_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SkeletonDemoDb_t", "SkeletonDemoDb_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SkeletonDemoDb_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RecordingTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "RecordingTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RecordingTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class sky3dparams_t : ClassData
        {
            public sky3dparams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("sky3dparams_t", "sky3dparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public sky3dparams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("sky3dparams_t", "sky3dparams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public sky3dparams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public short Scale
            {
                get { return Invoker.CallNative<short>("SDKClass", "Scale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Scale", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Origin
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Origin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Origin", CallKind.ClassMember, m_classData, value); }
            }
            public fogparams_t Fog
            {
                get { return Invoker.CallNative<fogparams_t>("SDKClass", "Fog", CallKind.ClassMember, m_classData); }
            }
            public uint WorldGroupID
            {
                get { return Invoker.CallNative<uint>("SDKClass", "WorldGroupID", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WorldGroupID", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class sndopvarlatchdata_t : ClassData
        {
            public sndopvarlatchdata_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("sndopvarlatchdata_t", "sndopvarlatchdata_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public sndopvarlatchdata_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("sndopvarlatchdata_t", "sndopvarlatchdata_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public sndopvarlatchdata_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Stack
            {
                get { return Invoker.CallNative<string>("SDKClass", "Stack", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Stack", CallKind.ClassMember, m_classData, value); }
            }
            public string Operator
            {
                get { return Invoker.CallNative<string>("SDKClass", "Operator", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Operator", CallKind.ClassMember, m_classData, value); }
            }
            public string Opvar
            {
                get { return Invoker.CallNative<string>("SDKClass", "Opvar", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Opvar", CallKind.ClassMember, m_classData, value); }
            }
            public float Val
            {
                get { return Invoker.CallNative<float>("SDKClass", "Val", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Val", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Pos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Pos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pos", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SolveIKChainPoseOpFixedSettings_t : ClassData
        {
            public SolveIKChainPoseOpFixedSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SolveIKChainPoseOpFixedSettings_t", "SolveIKChainPoseOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SolveIKChainPoseOpFixedSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SolveIKChainPoseOpFixedSettings_t", "SolveIKChainPoseOpFixedSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SolveIKChainPoseOpFixedSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class SosEditItemInfo_t : ClassData
        {
            public SosEditItemInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SosEditItemInfo_t", "SosEditItemInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SosEditItemInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SosEditItemInfo_t", "SosEditItemInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SosEditItemInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint ItemType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ItemType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemType", CallKind.ClassMember, m_classData, value); }
            }
            public string ItemName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ItemName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemName", CallKind.ClassMember, m_classData, value); }
            }
            public string ItemTypeName
            {
                get { return Invoker.CallNative<string>("SDKClass", "ItemTypeName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemTypeName", CallKind.ClassMember, m_classData, value); }
            }
            public string ItemKVString
            {
                get { return Invoker.CallNative<string>("SDKClass", "ItemKVString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemKVString", CallKind.ClassMember, m_classData, value); }
            }
            public Vector4D ItemPos
            {
                get { return Invoker.CallNative<Vector4D>("SDKClass", "ItemPos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemPos", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SoundOpvarTraceResult_t : ClassData
        {
            public SoundOpvarTraceResult_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SoundOpvarTraceResult_t", "SoundOpvarTraceResult_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SoundOpvarTraceResult_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SoundOpvarTraceResult_t", "SoundOpvarTraceResult_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SoundOpvarTraceResult_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Pos
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Pos", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Pos", CallKind.ClassMember, m_classData, value); }
            }
            public bool DidHit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "DidHit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DidHit", CallKind.ClassMember, m_classData, value); }
            }
            public float DistSqrToCenter
            {
                get { return Invoker.CallNative<float>("SDKClass", "DistSqrToCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DistSqrToCenter", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SpawnPoint : CServerOnlyPointEntity
        {
            public SpawnPoint(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SpawnPoint", "SpawnPoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SpawnPoint(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SpawnPoint", "SpawnPoint", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SpawnPoint()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Priority
            {
                get { return Invoker.CallNative<int>("SDKClass", "Priority", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Priority", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public int Type
            {
                get { return Invoker.CallNative<int>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public CServerOnlyPointEntity Parent
            {
                get { return Invoker.CallNative<CServerOnlyPointEntity>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class StanceInfo_t : ClassData
        {
            public StanceInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("StanceInfo_t", "StanceInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public StanceInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("StanceInfo_t", "StanceInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public StanceInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public float Direction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Direction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Direction", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class SummaryTakeDamageInfo_t : ClassData
        {
            public SummaryTakeDamageInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SummaryTakeDamageInfo_t", "SummaryTakeDamageInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SummaryTakeDamageInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("SummaryTakeDamageInfo_t", "SummaryTakeDamageInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public SummaryTakeDamageInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int SummarisedCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "SummarisedCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SummarisedCount", CallKind.ClassMember, m_classData, value); }
            }
            public CTakeDamageInfo Info
            {
                get { return Invoker.CallNative<CTakeDamageInfo>("SDKClass", "Info", CallKind.ClassMember, m_classData); }
            }
            public CTakeDamageResult Result
            {
                get { return Invoker.CallNative<CTakeDamageResult>("SDKClass", "Result", CallKind.ClassMember, m_classData); }
            }
            public CBaseEntity Target
            {
                get { return Invoker.CallNative<CBaseEntity>("SDKClass", "Target", CallKind.ClassMember, m_classData); }
            }
        }
        public class TagSpan_t : ClassData
        {
            public TagSpan_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TagSpan_t", "TagSpan_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TagSpan_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TagSpan_t", "TagSpan_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TagSpan_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int TagIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TagIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TagIndex", CallKind.ClassMember, m_classData, value); }
            }
            public float StartCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "StartCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StartCycle", CallKind.ClassMember, m_classData, value); }
            }
            public float EndCycle
            {
                get { return Invoker.CallNative<float>("SDKClass", "EndCycle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndCycle", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class TextureControls_t : ClassData
        {
            public TextureControls_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TextureControls_t", "TextureControls_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TextureControls_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TextureControls_t", "TextureControls_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TextureControls_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public CParticleCollectionRendererFloatInput FinalTextureScaleU
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FinalTextureScaleU", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FinalTextureScaleV
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FinalTextureScaleV", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FinalTextureOffsetU
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FinalTextureOffsetU", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FinalTextureOffsetV
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FinalTextureOffsetV", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput FinalTextureUVRotation
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "FinalTextureUVRotation", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput ZoomScale
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "ZoomScale", CallKind.ClassMember, m_classData); }
            }
            public CParticleCollectionRendererFloatInput Distortion
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "Distortion", CallKind.ClassMember, m_classData); }
            }
            public bool RandomizeOffsets
            {
                get { return Invoker.CallNative<bool>("SDKClass", "RandomizeOffsets", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RandomizeOffsets", CallKind.ClassMember, m_classData, value); }
            }
            public bool ClampUVs
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ClampUVs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ClampUVs", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleBlend
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleBlend", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleBlend", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleScale
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleScale", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleOffsetU
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleOffsetU", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleOffsetU", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleOffsetV
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleOffsetV", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleOffsetV", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleRotation
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleRotation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleRotation", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleZoom
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleZoom", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleZoom", CallKind.ClassMember, m_classData, value); }
            }
            public uint PerParticleDistortion
            {
                get { return Invoker.CallNative<uint>("SDKClass", "PerParticleDistortion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PerParticleDistortion", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class TextureGroup_t : ClassData
        {
            public TextureGroup_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TextureGroup_t", "TextureGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TextureGroup_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TextureGroup_t", "TextureGroup_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TextureGroup_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool ReplaceTextureWithGradient
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ReplaceTextureWithGradient", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReplaceTextureWithGradient", CallKind.ClassMember, m_classData, value); }
            }
            public uint TextureType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TextureType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureType", CallKind.ClassMember, m_classData, value); }
            }
            public uint TextureChannels
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TextureChannels", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureChannels", CallKind.ClassMember, m_classData, value); }
            }
            public uint TextureBlendMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TextureBlendMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TextureBlendMode", CallKind.ClassMember, m_classData, value); }
            }
            public CParticleCollectionRendererFloatInput TextureBlend
            {
                get { return Invoker.CallNative<CParticleCollectionRendererFloatInput>("SDKClass", "TextureBlend", CallKind.ClassMember, m_classData); }
            }
            public TextureControls_t TextureControls
            {
                get { return Invoker.CallNative<TextureControls_t>("SDKClass", "TextureControls", CallKind.ClassMember, m_classData); }
            }
        }
        public class thinkfunc_t : ClassData
        {
            public thinkfunc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("thinkfunc_t", "thinkfunc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public thinkfunc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("thinkfunc_t", "thinkfunc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public thinkfunc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Context
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Context", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Context", CallKind.ClassMember, m_classData, value); }
            }
            public int NextThinkTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "NextThinkTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextThinkTick", CallKind.ClassMember, m_classData, value); }
            }
            public int LastThinkTick
            {
                get { return Invoker.CallNative<int>("SDKClass", "LastThinkTick", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LastThinkTick", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class TimedEvent : ClassData
        {
            public TimedEvent(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TimedEvent", "TimedEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TimedEvent(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TimedEvent", "TimedEvent", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TimedEvent()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TimeBetweenEvents
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeBetweenEvents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeBetweenEvents", CallKind.ClassMember, m_classData, value); }
            }
            public float NextEvent
            {
                get { return Invoker.CallNative<float>("SDKClass", "NextEvent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NextEvent", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class TraceSettings_t : ClassData
        {
            public TraceSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TraceSettings_t", "TraceSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TraceSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TraceSettings_t", "TraceSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TraceSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float TraceHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float TraceRadius
            {
                get { return Invoker.CallNative<float>("SDKClass", "TraceRadius", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TraceRadius", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class TwoBoneIKSettings_t : ClassData
        {
            public TwoBoneIKSettings_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TwoBoneIKSettings_t", "TwoBoneIKSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TwoBoneIKSettings_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("TwoBoneIKSettings_t", "TwoBoneIKSettings_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public TwoBoneIKSettings_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint EndEffectorType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "EndEffectorType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndEffectorType", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimAttachment EndEffectorAttachment
            {
                get { return Invoker.CallNative<CAnimAttachment>("SDKClass", "EndEffectorAttachment", CallKind.ClassMember, m_classData); }
            }
            public uint TargetType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "TargetType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetType", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimAttachment TargetAttachment
            {
                get { return Invoker.CallNative<CAnimAttachment>("SDKClass", "TargetAttachment", CallKind.ClassMember, m_classData); }
            }
            public int TargetBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "TargetBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TargetBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public CAnimParamHandle PositionParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "PositionParam", CallKind.ClassMember, m_classData); }
            }
            public CAnimParamHandle RotationParam
            {
                get { return Invoker.CallNative<CAnimParamHandle>("SDKClass", "RotationParam", CallKind.ClassMember, m_classData); }
            }
            public bool AlwaysUseFallbackHinge
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AlwaysUseFallbackHinge", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AlwaysUseFallbackHinge", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LsFallbackHingeAxis
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LsFallbackHingeAxis", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LsFallbackHingeAxis", CallKind.ClassMember, m_classData, value); }
            }
            public int FixedBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "FixedBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FixedBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int MiddleBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "MiddleBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MiddleBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public int EndBoneIndex
            {
                get { return Invoker.CallNative<int>("SDKClass", "EndBoneIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EndBoneIndex", CallKind.ClassMember, m_classData, value); }
            }
            public bool MatchTargetOrientation
            {
                get { return Invoker.CallNative<bool>("SDKClass", "MatchTargetOrientation", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MatchTargetOrientation", CallKind.ClassMember, m_classData, value); }
            }
            public bool ConstrainTwist
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ConstrainTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ConstrainTwist", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTwist
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTwist", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VariableInfo_t : ClassData
        {
            public VariableInfo_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VariableInfo_t", "VariableInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VariableInfo_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VariableInfo_t", "VariableInfo_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VariableInfo_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public uint NameToken
            {
                get { return Invoker.CallNative<uint>("SDKClass", "NameToken", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NameToken", CallKind.ClassMember, m_classData, value); }
            }
            public FuseVariableIndex_t Index
            {
                get { return Invoker.CallNative<FuseVariableIndex_t>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
            }
            public byte NumComponents
            {
                get { return Invoker.CallNative<byte>("SDKClass", "NumComponents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "NumComponents", CallKind.ClassMember, m_classData, value); }
            }
            public byte VarType
            {
                get { return Invoker.CallNative<byte>("SDKClass", "VarType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VarType", CallKind.ClassMember, m_classData, value); }
            }
            public byte Access
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Access", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Access", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VecInputMaterialVariable_t : ClassData
        {
            public VecInputMaterialVariable_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VecInputMaterialVariable_t", "VecInputMaterialVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VecInputMaterialVariable_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VecInputMaterialVariable_t", "VecInputMaterialVariable_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VecInputMaterialVariable_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string StrVariable
            {
                get { return Invoker.CallNative<string>("SDKClass", "StrVariable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "StrVariable", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VelocitySampler : ClassData
        {
            public VelocitySampler(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VelocitySampler", "VelocitySampler", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VelocitySampler(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VelocitySampler", "VelocitySampler", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VelocitySampler()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D PrevSample
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "PrevSample", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevSample", CallKind.ClassMember, m_classData, value); }
            }
            public float PrevSampleTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "PrevSampleTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PrevSampleTime", CallKind.ClassMember, m_classData, value); }
            }
            public float IdealSampleRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "IdealSampleRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IdealSampleRate", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VertexPositionColor_t : ClassData
        {
            public VertexPositionColor_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VertexPositionColor_t", "VertexPositionColor_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VertexPositionColor_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VertexPositionColor_t", "VertexPositionColor_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VertexPositionColor_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VertexPositionNormal_t : ClassData
        {
            public VertexPositionNormal_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VertexPositionNormal_t", "VertexPositionNormal_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VertexPositionNormal_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VertexPositionNormal_t", "VertexPositionNormal_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VertexPositionNormal_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public Vector2D Position
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Position", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Position", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D Normal
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "Normal", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Normal", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class ViewAngleServerChange_t : ClassData
        {
            public ViewAngleServerChange_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ViewAngleServerChange_t", "ViewAngleServerChange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ViewAngleServerChange_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("ViewAngleServerChange_t", "ViewAngleServerChange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public ViewAngleServerChange_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public byte Type
            {
                get { return Invoker.CallNative<byte>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public Vector Angle
            {
                get { return Invoker.CallNative<Vector>("SDKClass", "Angle", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Angle", CallKind.ClassMember, m_classData, value); }
            }
            public uint Index
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Index", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Index", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMapResourceData_t : ClassData
        {
            public VMapResourceData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMapResourceData_t", "VMapResourceData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMapResourceData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMapResourceData_t", "VMapResourceData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMapResourceData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class VMixAutoFilterDesc_t : ClassData
        {
            public VMixAutoFilterDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixAutoFilterDesc_t", "VMixAutoFilterDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixAutoFilterDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixAutoFilterDesc_t", "VMixAutoFilterDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixAutoFilterDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float EnvelopeAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "EnvelopeAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnvelopeAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public VMixFilterDesc_t Filter
            {
                get { return Invoker.CallNative<VMixFilterDesc_t>("SDKClass", "Filter", CallKind.ClassMember, m_classData); }
            }
            public float LFOAmount
            {
                get { return Invoker.CallNative<float>("SDKClass", "LFOAmount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LFOAmount", CallKind.ClassMember, m_classData, value); }
            }
            public float LFORate
            {
                get { return Invoker.CallNative<float>("SDKClass", "LFORate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LFORate", CallKind.ClassMember, m_classData, value); }
            }
            public float Phase
            {
                get { return Invoker.CallNative<float>("SDKClass", "Phase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Phase", CallKind.ClassMember, m_classData, value); }
            }
            public uint LFOShape
            {
                get { return Invoker.CallNative<uint>("SDKClass", "LFOShape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LFOShape", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixBoxverb2Desc_t : ClassData
        {
            public VMixBoxverb2Desc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixBoxverb2Desc_t", "VMixBoxverb2Desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixBoxverb2Desc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixBoxverb2Desc_t", "VMixBoxverb2Desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixBoxverb2Desc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float SizeMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "SizeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float SizeMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "SizeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeMin", CallKind.ClassMember, m_classData, value); }
            }
            public float Complexity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Complexity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Complexity", CallKind.ClassMember, m_classData, value); }
            }
            public float Diffusion
            {
                get { return Invoker.CallNative<float>("SDKClass", "Diffusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Diffusion", CallKind.ClassMember, m_classData, value); }
            }
            public float ModDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float ModRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModRate", CallKind.ClassMember, m_classData, value); }
            }
            public bool Parallel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Parallel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parallel", CallKind.ClassMember, m_classData, value); }
            }
            public VMixFilterDesc_t FilterType
            {
                get { return Invoker.CallNative<VMixFilterDesc_t>("SDKClass", "FilterType", CallKind.ClassMember, m_classData); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float Depth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackScale", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float OutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "OutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public float Taps
            {
                get { return Invoker.CallNative<float>("SDKClass", "Taps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Taps", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixBoxverbDesc_t : ClassData
        {
            public VMixBoxverbDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixBoxverbDesc_t", "VMixBoxverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixBoxverbDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixBoxverbDesc_t", "VMixBoxverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixBoxverbDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float SizeMax
            {
                get { return Invoker.CallNative<float>("SDKClass", "SizeMax", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeMax", CallKind.ClassMember, m_classData, value); }
            }
            public float SizeMin
            {
                get { return Invoker.CallNative<float>("SDKClass", "SizeMin", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SizeMin", CallKind.ClassMember, m_classData, value); }
            }
            public float Complexity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Complexity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Complexity", CallKind.ClassMember, m_classData, value); }
            }
            public float Diffusion
            {
                get { return Invoker.CallNative<float>("SDKClass", "Diffusion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Diffusion", CallKind.ClassMember, m_classData, value); }
            }
            public float ModDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float ModRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModRate", CallKind.ClassMember, m_classData, value); }
            }
            public bool Parallel
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Parallel", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parallel", CallKind.ClassMember, m_classData, value); }
            }
            public VMixFilterDesc_t FilterType
            {
                get { return Invoker.CallNative<VMixFilterDesc_t>("SDKClass", "FilterType", CallKind.ClassMember, m_classData); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float Height
            {
                get { return Invoker.CallNative<float>("SDKClass", "Height", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Height", CallKind.ClassMember, m_classData, value); }
            }
            public float Depth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackScale", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackHeight
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackHeight", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackHeight", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackDepth", CallKind.ClassMember, m_classData, value); }
            }
            public float OutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "OutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public float Taps
            {
                get { return Invoker.CallNative<float>("SDKClass", "Taps", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Taps", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixConvolutionDesc_t : ClassData
        {
            public VMixConvolutionDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixConvolutionDesc_t", "VMixConvolutionDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixConvolutionDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixConvolutionDesc_t", "VMixConvolutionDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixConvolutionDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FldbGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGain", CallKind.ClassMember, m_classData, value); }
            }
            public float PreDelayMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "PreDelayMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PreDelayMS", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbLow
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbLow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbLow", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbMid
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbMid", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbMid", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbHigh
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbHigh", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbHigh", CallKind.ClassMember, m_classData, value); }
            }
            public float LowCutoffFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "LowCutoffFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LowCutoffFreq", CallKind.ClassMember, m_classData, value); }
            }
            public float HighCutoffFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "HighCutoffFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HighCutoffFreq", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDelayDesc_t : ClassData
        {
            public VMixDelayDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDelayDesc_t", "VMixDelayDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDelayDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDelayDesc_t", "VMixDelayDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDelayDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public VMixFilterDesc_t FeedbackFilter
            {
                get { return Invoker.CallNative<VMixFilterDesc_t>("SDKClass", "FeedbackFilter", CallKind.ClassMember, m_classData); }
            }
            public bool EnableFilter
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableFilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableFilter", CallKind.ClassMember, m_classData, value); }
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public float DirectGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "DirectGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DirectGain", CallKind.ClassMember, m_classData, value); }
            }
            public float DelayGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "DelayGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DelayGain", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackGain", CallKind.ClassMember, m_classData, value); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDiffusorDesc_t : ClassData
        {
            public VMixDiffusorDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDiffusorDesc_t", "VMixDiffusorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDiffusorDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDiffusorDesc_t", "VMixDiffusorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDiffusorDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Size
            {
                get { return Invoker.CallNative<float>("SDKClass", "Size", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Size", CallKind.ClassMember, m_classData, value); }
            }
            public float Complexity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Complexity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Complexity", CallKind.ClassMember, m_classData, value); }
            }
            public float Feedback
            {
                get { return Invoker.CallNative<float>("SDKClass", "Feedback", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Feedback", CallKind.ClassMember, m_classData, value); }
            }
            public float OutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "OutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputGain", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDualCompressorDesc_t : ClassData
        {
            public VMixDualCompressorDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDualCompressorDesc_t", "VMixDualCompressorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDualCompressorDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDualCompressorDesc_t", "VMixDualCompressorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDualCompressorDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RMSTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbKneeWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public bool PeakMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PeakMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakMode", CallKind.ClassMember, m_classData, value); }
            }
            public VMixDynamicsBand_t BandDesc
            {
                get { return Invoker.CallNative<VMixDynamicsBand_t>("SDKClass", "BandDesc", CallKind.ClassMember, m_classData); }
            }
        }
        public class VMixDynamics3BandDesc_t : ClassData
        {
            public VMixDynamics3BandDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamics3BandDesc_t", "VMixDynamics3BandDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamics3BandDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamics3BandDesc_t", "VMixDynamics3BandDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamics3BandDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FldbGainOutput
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGainOutput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGainOutput", CallKind.ClassMember, m_classData, value); }
            }
            public float RMSTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbKneeWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float Depth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Depth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Depth", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public float TimeScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "TimeScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TimeScale", CallKind.ClassMember, m_classData, value); }
            }
            public float LowCutoffFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "LowCutoffFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LowCutoffFreq", CallKind.ClassMember, m_classData, value); }
            }
            public float HighCutoffFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "HighCutoffFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HighCutoffFreq", CallKind.ClassMember, m_classData, value); }
            }
            public bool PeakMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PeakMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDynamicsBand_t : ClassData
        {
            public VMixDynamicsBand_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsBand_t", "VMixDynamicsBand_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsBand_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsBand_t", "VMixDynamicsBand_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsBand_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FldbGainInput
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGainInput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGainInput", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbGainOutput
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGainOutput", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGainOutput", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbThresholdBelow
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbThresholdBelow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbThresholdBelow", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbThresholdAbove
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbThresholdAbove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbThresholdAbove", CallKind.ClassMember, m_classData, value); }
            }
            public float RatioBelow
            {
                get { return Invoker.CallNative<float>("SDKClass", "RatioBelow", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RatioBelow", CallKind.ClassMember, m_classData, value); }
            }
            public float RatioAbove
            {
                get { return Invoker.CallNative<float>("SDKClass", "RatioAbove", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RatioAbove", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enable
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enable", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enable", CallKind.ClassMember, m_classData, value); }
            }
            public bool Solo
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Solo", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Solo", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDynamicsCompressorDesc_t : ClassData
        {
            public VMixDynamicsCompressorDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsCompressorDesc_t", "VMixDynamicsCompressorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsCompressorDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsCompressorDesc_t", "VMixDynamicsCompressorDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsCompressorDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FldbOutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbCompressionThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbCompressionThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbCompressionThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbKneeWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float CompressionRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "CompressionRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompressionRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float RMSTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public bool PeakMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PeakMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixDynamicsDesc_t : ClassData
        {
            public VMixDynamicsDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsDesc_t", "VMixDynamicsDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixDynamicsDesc_t", "VMixDynamicsDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixDynamicsDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FldbGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGain", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbNoiseGateThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbNoiseGateThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbNoiseGateThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbCompressionThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbCompressionThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbCompressionThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbLimiterThreshold
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbLimiterThreshold", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbLimiterThreshold", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbKneeWidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbKneeWidth", CallKind.ClassMember, m_classData, value); }
            }
            public float Ratio
            {
                get { return Invoker.CallNative<float>("SDKClass", "Ratio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Ratio", CallKind.ClassMember, m_classData, value); }
            }
            public float LimiterRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "LimiterRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LimiterRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float RMSTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RMSTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public bool PeakMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PeakMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixEffectChainDesc_t : ClassData
        {
            public VMixEffectChainDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEffectChainDesc_t", "VMixEffectChainDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEffectChainDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEffectChainDesc_t", "VMixEffectChainDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEffectChainDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float CrossfadeTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "CrossfadeTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CrossfadeTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixEnvelopeDesc_t : ClassData
        {
            public VMixEnvelopeDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEnvelopeDesc_t", "VMixEnvelopeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEnvelopeDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEnvelopeDesc_t", "VMixEnvelopeDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEnvelopeDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float HoldTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "HoldTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HoldTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixEQ8Desc_t : ClassData
        {
            public VMixEQ8Desc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEQ8Desc_t", "VMixEQ8Desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEQ8Desc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixEQ8Desc_t", "VMixEQ8Desc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixEQ8Desc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class VMixFilterDesc_t : ClassData
        {
            public VMixFilterDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixFilterDesc_t", "VMixFilterDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixFilterDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixFilterDesc_t", "VMixFilterDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixFilterDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort FilterType
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "FilterType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterType", CallKind.ClassMember, m_classData, value); }
            }
            public byte FilterSlope
            {
                get { return Invoker.CallNative<byte>("SDKClass", "FilterSlope", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FilterSlope", CallKind.ClassMember, m_classData, value); }
            }
            public bool Enabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "Enabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Enabled", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbGain", CallKind.ClassMember, m_classData, value); }
            }
            public float CutoffFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "CutoffFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CutoffFreq", CallKind.ClassMember, m_classData, value); }
            }
            public float Q
            {
                get { return Invoker.CallNative<float>("SDKClass", "Q", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Q", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixFreeverbDesc_t : ClassData
        {
            public VMixFreeverbDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixFreeverbDesc_t", "VMixFreeverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixFreeverbDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixFreeverbDesc_t", "VMixFreeverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixFreeverbDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float RoomSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "RoomSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RoomSize", CallKind.ClassMember, m_classData, value); }
            }
            public float Damp
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damp", CallKind.ClassMember, m_classData, value); }
            }
            public float Width
            {
                get { return Invoker.CallNative<float>("SDKClass", "Width", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Width", CallKind.ClassMember, m_classData, value); }
            }
            public float LateReflections
            {
                get { return Invoker.CallNative<float>("SDKClass", "LateReflections", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LateReflections", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixModDelayDesc_t : ClassData
        {
            public VMixModDelayDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixModDelayDesc_t", "VMixModDelayDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixModDelayDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixModDelayDesc_t", "VMixModDelayDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixModDelayDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public VMixFilterDesc_t FeedbackFilter
            {
                get { return Invoker.CallNative<VMixFilterDesc_t>("SDKClass", "FeedbackFilter", CallKind.ClassMember, m_classData); }
            }
            public bool PhaseInvert
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PhaseInvert", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PhaseInvert", CallKind.ClassMember, m_classData, value); }
            }
            public float GlideTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "GlideTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GlideTime", CallKind.ClassMember, m_classData, value); }
            }
            public float Delay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Delay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Delay", CallKind.ClassMember, m_classData, value); }
            }
            public float OutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "OutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public float FeedbackGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FeedbackGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FeedbackGain", CallKind.ClassMember, m_classData, value); }
            }
            public float ModRate
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModRate", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModRate", CallKind.ClassMember, m_classData, value); }
            }
            public float ModDepth
            {
                get { return Invoker.CallNative<float>("SDKClass", "ModDepth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ModDepth", CallKind.ClassMember, m_classData, value); }
            }
            public bool ApplyAntialiasing
            {
                get { return Invoker.CallNative<bool>("SDKClass", "ApplyAntialiasing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ApplyAntialiasing", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixOscDesc_t : ClassData
        {
            public VMixOscDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixOscDesc_t", "VMixOscDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixOscDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixOscDesc_t", "VMixOscDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixOscDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint OscType
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OscType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OscType", CallKind.ClassMember, m_classData, value); }
            }
            public float Freq
            {
                get { return Invoker.CallNative<float>("SDKClass", "Freq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Freq", CallKind.ClassMember, m_classData, value); }
            }
            public float Phase
            {
                get { return Invoker.CallNative<float>("SDKClass", "Phase", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Phase", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixPannerDesc_t : ClassData
        {
            public VMixPannerDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPannerDesc_t", "VMixPannerDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPannerDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPannerDesc_t", "VMixPannerDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPannerDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Type
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public float Strength
            {
                get { return Invoker.CallNative<float>("SDKClass", "Strength", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Strength", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixPitchShiftDesc_t : ClassData
        {
            public VMixPitchShiftDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPitchShiftDesc_t", "VMixPitchShiftDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPitchShiftDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPitchShiftDesc_t", "VMixPitchShiftDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPitchShiftDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int GrainSampleCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "GrainSampleCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrainSampleCount", CallKind.ClassMember, m_classData, value); }
            }
            public float PitchShift
            {
                get { return Invoker.CallNative<float>("SDKClass", "PitchShift", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PitchShift", CallKind.ClassMember, m_classData, value); }
            }
            public int Quality
            {
                get { return Invoker.CallNative<int>("SDKClass", "Quality", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Quality", CallKind.ClassMember, m_classData, value); }
            }
            public int ProcType
            {
                get { return Invoker.CallNative<int>("SDKClass", "ProcType", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProcType", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixPlateverbDesc_t : ClassData
        {
            public VMixPlateverbDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPlateverbDesc_t", "VMixPlateverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPlateverbDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixPlateverbDesc_t", "VMixPlateverbDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixPlateverbDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Prefilter
            {
                get { return Invoker.CallNative<float>("SDKClass", "Prefilter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Prefilter", CallKind.ClassMember, m_classData, value); }
            }
            public float Decay
            {
                get { return Invoker.CallNative<float>("SDKClass", "Decay", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Decay", CallKind.ClassMember, m_classData, value); }
            }
            public float Damp
            {
                get { return Invoker.CallNative<float>("SDKClass", "Damp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Damp", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixShaperDesc_t : ClassData
        {
            public VMixShaperDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixShaperDesc_t", "VMixShaperDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixShaperDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixShaperDesc_t", "VMixShaperDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixShaperDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int Shape
            {
                get { return Invoker.CallNative<int>("SDKClass", "Shape", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Shape", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbDrive
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbDrive", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbDrive", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbOutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public float WetMix
            {
                get { return Invoker.CallNative<float>("SDKClass", "WetMix", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WetMix", CallKind.ClassMember, m_classData, value); }
            }
            public int OversampleFactor
            {
                get { return Invoker.CallNative<int>("SDKClass", "OversampleFactor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OversampleFactor", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixSubgraphSwitchDesc_t : ClassData
        {
            public VMixSubgraphSwitchDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixSubgraphSwitchDesc_t", "VMixSubgraphSwitchDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixSubgraphSwitchDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixSubgraphSwitchDesc_t", "VMixSubgraphSwitchDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixSubgraphSwitchDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint InterpolationMode
            {
                get { return Invoker.CallNative<uint>("SDKClass", "InterpolationMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterpolationMode", CallKind.ClassMember, m_classData, value); }
            }
            public bool OnlyTailsOnFadeOut
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OnlyTailsOnFadeOut", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OnlyTailsOnFadeOut", CallKind.ClassMember, m_classData, value); }
            }
            public float InterpolationTime
            {
                get { return Invoker.CallNative<float>("SDKClass", "InterpolationTime", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InterpolationTime", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixUtilityDesc_t : ClassData
        {
            public VMixUtilityDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixUtilityDesc_t", "VMixUtilityDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixUtilityDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixUtilityDesc_t", "VMixUtilityDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixUtilityDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Op
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Op", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Op", CallKind.ClassMember, m_classData, value); }
            }
            public float InputPan
            {
                get { return Invoker.CallNative<float>("SDKClass", "InputPan", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InputPan", CallKind.ClassMember, m_classData, value); }
            }
            public float OutputBalance
            {
                get { return Invoker.CallNative<float>("SDKClass", "OutputBalance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OutputBalance", CallKind.ClassMember, m_classData, value); }
            }
            public float FldbOutputGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldbOutputGain", CallKind.ClassMember, m_classData, value); }
            }
            public bool BassMono
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BassMono", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BassMono", CallKind.ClassMember, m_classData, value); }
            }
            public float BassFreq
            {
                get { return Invoker.CallNative<float>("SDKClass", "BassFreq", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BassFreq", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VMixVocoderDesc_t : ClassData
        {
            public VMixVocoderDesc_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixVocoderDesc_t", "VMixVocoderDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixVocoderDesc_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VMixVocoderDesc_t", "VMixVocoderDesc_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VMixVocoderDesc_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int BandCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "BandCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BandCount", CallKind.ClassMember, m_classData, value); }
            }
            public float Bandwidth
            {
                get { return Invoker.CallNative<float>("SDKClass", "Bandwidth", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Bandwidth", CallKind.ClassMember, m_classData, value); }
            }
            public float FldBModGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldBModGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldBModGain", CallKind.ClassMember, m_classData, value); }
            }
            public float FreqRangeStart
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreqRangeStart", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreqRangeStart", CallKind.ClassMember, m_classData, value); }
            }
            public float FreqRangeEnd
            {
                get { return Invoker.CallNative<float>("SDKClass", "FreqRangeEnd", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FreqRangeEnd", CallKind.ClassMember, m_classData, value); }
            }
            public float FldBUnvoicedGain
            {
                get { return Invoker.CallNative<float>("SDKClass", "FldBUnvoicedGain", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FldBUnvoicedGain", CallKind.ClassMember, m_classData, value); }
            }
            public float AttackTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AttackTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public float ReleaseTimeMS
            {
                get { return Invoker.CallNative<float>("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ReleaseTimeMS", CallKind.ClassMember, m_classData, value); }
            }
            public int DebugBand
            {
                get { return Invoker.CallNative<int>("SDKClass", "DebugBand", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugBand", CallKind.ClassMember, m_classData, value); }
            }
            public bool PeakMode
            {
                get { return Invoker.CallNative<bool>("SDKClass", "PeakMode", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "PeakMode", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VoxelVisBlockOffset_t : ClassData
        {
            public VoxelVisBlockOffset_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VoxelVisBlockOffset_t", "VoxelVisBlockOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VoxelVisBlockOffset_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VoxelVisBlockOffset_t", "VoxelVisBlockOffset_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VoxelVisBlockOffset_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Offset
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Offset", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Offset", CallKind.ClassMember, m_classData, value); }
            }
            public uint ElementCount
            {
                get { return Invoker.CallNative<uint>("SDKClass", "ElementCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementCount", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysics2ShapeDef_t : ClassData
        {
            public VPhysics2ShapeDef_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysics2ShapeDef_t", "VPhysics2ShapeDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysics2ShapeDef_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysics2ShapeDef_t", "VPhysics2ShapeDef_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysics2ShapeDef_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] CollisionAttributeIndices
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "CollisionAttributeIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionAttributeIndices", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class vphysics_save_cphysicsbody_t : RnBodyDesc_t
        {
            public vphysics_save_cphysicsbody_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("vphysics_save_cphysicsbody_t", "vphysics_save_cphysicsbody_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public vphysics_save_cphysicsbody_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("vphysics_save_cphysicsbody_t", "vphysics_save_cphysicsbody_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public vphysics_save_cphysicsbody_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong OldPointer
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "OldPointer", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OldPointer", CallKind.ClassMember, m_classData, value); }
            }
            public RnBodyDesc_t Parent
            {
                get { return Invoker.CallNative<RnBodyDesc_t>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
            }
        }
        public class VPhysicsCollisionAttribute_t : ClassData
        {
            public VPhysicsCollisionAttribute_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysicsCollisionAttribute_t", "VPhysicsCollisionAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysicsCollisionAttribute_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysicsCollisionAttribute_t", "VPhysicsCollisionAttribute_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysicsCollisionAttribute_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ulong InteractsAs
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "InteractsAs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractsAs", CallKind.ClassMember, m_classData, value); }
            }
            public ulong InteractsWith
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "InteractsWith", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractsWith", CallKind.ClassMember, m_classData, value); }
            }
            public ulong InteractsExclude
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "InteractsExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractsExclude", CallKind.ClassMember, m_classData, value); }
            }
            public uint EntityId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "EntityId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EntityId", CallKind.ClassMember, m_classData, value); }
            }
            public uint OwnerId
            {
                get { return Invoker.CallNative<uint>("SDKClass", "OwnerId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OwnerId", CallKind.ClassMember, m_classData, value); }
            }
            public ushort HierarchyId
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "HierarchyId", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HierarchyId", CallKind.ClassMember, m_classData, value); }
            }
            public byte CollisionGroup
            {
                get { return Invoker.CallNative<byte>("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData, value); }
            }
            public byte CollisionFunctionMask
            {
                get { return Invoker.CallNative<byte>("SDKClass", "CollisionFunctionMask", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionFunctionMask", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXAggregateData_t : ClassData
        {
            public VPhysXAggregateData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXAggregateData_t", "VPhysXAggregateData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXAggregateData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXAggregateData_t", "VPhysXAggregateData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXAggregateData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort RefCounter
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "RefCounter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RefCounter", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] BonesHash
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "BonesHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BonesHash", CallKind.ClassMember, m_classData, value); }
            }
            public string[] BoneNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "BoneNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneNames", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] IndexNames
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "IndexNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndexNames", CallKind.ClassMember, m_classData, value); }
            }
            public ushort[] IndexHash
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "IndexHash", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IndexHash", CallKind.ClassMember, m_classData, value); }
            }
            public int[] FeModel
            {
                get { return Invoker.CallNative<int[]>("SDKClass", "FeModel", CallKind.ClassMember, m_classData); }
            }
            public ushort[] BoneParents
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "BoneParents", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BoneParents", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] SurfacePropertyHashes
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "SurfacePropertyHashes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SurfacePropertyHashes", CallKind.ClassMember, m_classData, value); }
            }
            public string[] DebugPartNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "DebugPartNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DebugPartNames", CallKind.ClassMember, m_classData, value); }
            }
            public string EmbeddedKeyvalues
            {
                get { return Invoker.CallNative<string>("SDKClass", "EmbeddedKeyvalues", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EmbeddedKeyvalues", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXBodyPart_t : ClassData
        {
            public VPhysXBodyPart_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXBodyPart_t", "VPhysXBodyPart_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXBodyPart_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXBodyPart_t", "VPhysXBodyPart_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXBodyPart_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public float Mass
            {
                get { return Invoker.CallNative<float>("SDKClass", "Mass", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Mass", CallKind.ClassMember, m_classData, value); }
            }
            public VPhysics2ShapeDef_t RnShape
            {
                get { return Invoker.CallNative<VPhysics2ShapeDef_t>("SDKClass", "RnShape", CallKind.ClassMember, m_classData); }
            }
            public ushort CollisionAttributeIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "CollisionAttributeIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionAttributeIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Reserved
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Reserved", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Reserved", CallKind.ClassMember, m_classData, value); }
            }
            public float InertiaScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "InertiaScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InertiaScale", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDrag", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDrag", CallKind.ClassMember, m_classData, value); }
            }
            public bool OverrideMassCenter
            {
                get { return Invoker.CallNative<bool>("SDKClass", "OverrideMassCenter", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverrideMassCenter", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D MassCenterOverride
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "MassCenterOverride", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MassCenterOverride", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXCollisionAttributes_t : ClassData
        {
            public VPhysXCollisionAttributes_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXCollisionAttributes_t", "VPhysXCollisionAttributes_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXCollisionAttributes_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXCollisionAttributes_t", "VPhysXCollisionAttributes_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXCollisionAttributes_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint CollisionGroup
            {
                get { return Invoker.CallNative<uint>("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionGroup", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] InteractAs
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "InteractAs", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractAs", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] InteractWith
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "InteractWith", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractWith", CallKind.ClassMember, m_classData, value); }
            }
            public uint[] InteractExclude
            {
                get { return Invoker.CallNative<uint[]>("SDKClass", "InteractExclude", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractExclude", CallKind.ClassMember, m_classData, value); }
            }
            public string CollisionGroupString
            {
                get { return Invoker.CallNative<string>("SDKClass", "CollisionGroupString", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CollisionGroupString", CallKind.ClassMember, m_classData, value); }
            }
            public string[] InteractAsStrings
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "InteractAsStrings", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractAsStrings", CallKind.ClassMember, m_classData, value); }
            }
            public string[] InteractWithStrings
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "InteractWithStrings", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractWithStrings", CallKind.ClassMember, m_classData, value); }
            }
            public string[] InteractExcludeStrings
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "InteractExcludeStrings", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "InteractExcludeStrings", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXConstraint2_t : ClassData
        {
            public VPhysXConstraint2_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXConstraint2_t", "VPhysXConstraint2_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXConstraint2_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXConstraint2_t", "VPhysXConstraint2_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXConstraint2_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public uint Flags
            {
                get { return Invoker.CallNative<uint>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Parent
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Parent", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Parent", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Child
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Child", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Child", CallKind.ClassMember, m_classData, value); }
            }
            public VPhysXConstraintParams_t Params
            {
                get { return Invoker.CallNative<VPhysXConstraintParams_t>("SDKClass", "Params", CallKind.ClassMember, m_classData); }
            }
        }
        public class VPhysXConstraintParams_t : ClassData
        {
            public VPhysXConstraintParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXConstraintParams_t", "VPhysXConstraintParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXConstraintParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXConstraintParams_t", "VPhysXConstraintParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXConstraintParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public char Type
            {
                get { return Invoker.CallNative<char>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public char TranslateMotion
            {
                get { return Invoker.CallNative<char>("SDKClass", "TranslateMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TranslateMotion", CallKind.ClassMember, m_classData, value); }
            }
            public char RotateMotion
            {
                get { return Invoker.CallNative<char>("SDKClass", "RotateMotion", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "RotateMotion", CallKind.ClassMember, m_classData, value); }
            }
            public char Flags
            {
                get { return Invoker.CallNative<char>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public Vector[] Anchor
            {
                get { return Invoker.CallNative<Vector[]>("SDKClass", "Anchor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Anchor", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxForce", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTorque
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearLimitValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearLimitValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearLimitValue", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearLimitRestitution
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearLimitRestitution", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearLimitRestitution", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearLimitSpring
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearLimitSpring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearLimitSpring", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearLimitDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearLimitDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearLimitDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistLowLimitValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistLowLimitValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistLowLimitValue", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistLowLimitRestitution
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistLowLimitRestitution", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistLowLimitRestitution", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistLowLimitSpring
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistLowLimitSpring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistLowLimitSpring", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistLowLimitDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistLowLimitDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistLowLimitDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistHighLimitValue
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistHighLimitValue", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistHighLimitValue", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistHighLimitRestitution
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistHighLimitRestitution", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistHighLimitRestitution", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistHighLimitSpring
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistHighLimitSpring", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistHighLimitSpring", CallKind.ClassMember, m_classData, value); }
            }
            public float TwistHighLimitDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "TwistHighLimitDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "TwistHighLimitDamping", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GoalPosition
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GoalPosition", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalPosition", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D GoalAngularVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "GoalAngularVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GoalAngularVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringX
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringX", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringY
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringY", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringZ", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingX
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingX", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingX", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingY
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingY", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingY", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingZ
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingZ", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingZ", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringTwist
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringTwist", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringSwing
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringSwing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringSwing", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveSpringSlerp
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveSpringSlerp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveSpringSlerp", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingTwist
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingTwist", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingTwist", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingSwing
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingSwing", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingSwing", CallKind.ClassMember, m_classData, value); }
            }
            public float DriveDampingSlerp
            {
                get { return Invoker.CallNative<float>("SDKClass", "DriveDampingSlerp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "DriveDampingSlerp", CallKind.ClassMember, m_classData, value); }
            }
            public int SolverIterationCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "SolverIterationCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SolverIterationCount", CallKind.ClassMember, m_classData, value); }
            }
            public float ProjectionLinearTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProjectionLinearTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectionLinearTolerance", CallKind.ClassMember, m_classData, value); }
            }
            public float ProjectionAngularTolerance
            {
                get { return Invoker.CallNative<float>("SDKClass", "ProjectionAngularTolerance", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ProjectionAngularTolerance", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXJoint_t : ClassData
        {
            public VPhysXJoint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXJoint_t", "VPhysXJoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXJoint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXJoint_t", "VPhysXJoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXJoint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort Type
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Type", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Type", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Flags
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Flags", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Flags", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableCollision
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableCollision", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableCollision", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsLinearConstraintDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsLinearConstraintDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsLinearConstraintDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool IsAngularConstraintDisabled
            {
                get { return Invoker.CallNative<bool>("SDKClass", "IsAngularConstraintDisabled", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "IsAngularConstraintDisabled", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableLinearLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLinearLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLinearLimit", CallKind.ClassMember, m_classData, value); }
            }
            public VPhysXRange_t LinearLimit
            {
                get { return Invoker.CallNative<VPhysXRange_t>("SDKClass", "LinearLimit", CallKind.ClassMember, m_classData); }
            }
            public bool EnableLinearMotor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableLinearMotor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableLinearMotor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D LinearTargetVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "LinearTargetVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearTargetVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxForce
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxForce", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxForce", CallKind.ClassMember, m_classData, value); }
            }
            public bool EnableSwingLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableSwingLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableSwingLimit", CallKind.ClassMember, m_classData, value); }
            }
            public VPhysXRange_t SwingLimit
            {
                get { return Invoker.CallNative<VPhysXRange_t>("SDKClass", "SwingLimit", CallKind.ClassMember, m_classData); }
            }
            public bool EnableTwistLimit
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableTwistLimit", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableTwistLimit", CallKind.ClassMember, m_classData, value); }
            }
            public VPhysXRange_t TwistLimit
            {
                get { return Invoker.CallNative<VPhysXRange_t>("SDKClass", "TwistLimit", CallKind.ClassMember, m_classData); }
            }
            public bool EnableAngularMotor
            {
                get { return Invoker.CallNative<bool>("SDKClass", "EnableAngularMotor", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "EnableAngularMotor", CallKind.ClassMember, m_classData, value); }
            }
            public Vector2D AngularTargetVelocity
            {
                get { return Invoker.CallNative<Vector2D>("SDKClass", "AngularTargetVelocity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularTargetVelocity", CallKind.ClassMember, m_classData, value); }
            }
            public float MaxTorque
            {
                get { return Invoker.CallNative<float>("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MaxTorque", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float LinearDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "LinearDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LinearDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularFrequency
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularFrequency", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularFrequency", CallKind.ClassMember, m_classData, value); }
            }
            public float AngularDampingRatio
            {
                get { return Invoker.CallNative<float>("SDKClass", "AngularDampingRatio", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AngularDampingRatio", CallKind.ClassMember, m_classData, value); }
            }
            public float Friction
            {
                get { return Invoker.CallNative<float>("SDKClass", "Friction", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Friction", CallKind.ClassMember, m_classData, value); }
            }
            public float Elasticity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Elasticity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Elasticity", CallKind.ClassMember, m_classData, value); }
            }
            public float ElasticDamping
            {
                get { return Invoker.CallNative<float>("SDKClass", "ElasticDamping", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElasticDamping", CallKind.ClassMember, m_classData, value); }
            }
            public float Plasticity
            {
                get { return Invoker.CallNative<float>("SDKClass", "Plasticity", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Plasticity", CallKind.ClassMember, m_classData, value); }
            }
            public string Tag
            {
                get { return Invoker.CallNative<string>("SDKClass", "Tag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Tag", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VPhysXRange_t : ClassData
        {
            public VPhysXRange_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXRange_t", "VPhysXRange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXRange_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VPhysXRange_t", "VPhysXRange_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VPhysXRange_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float Min
            {
                get { return Invoker.CallNative<float>("SDKClass", "Min", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Min", CallKind.ClassMember, m_classData, value); }
            }
            public float Max
            {
                get { return Invoker.CallNative<float>("SDKClass", "Max", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Max", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class VsInputSignature_t : ClassData
        {
            public VsInputSignature_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VsInputSignature_t", "VsInputSignature_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VsInputSignature_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VsInputSignature_t", "VsInputSignature_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VsInputSignature_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class VsInputSignatureElement_t : ClassData
        {
            public VsInputSignatureElement_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VsInputSignatureElement_t", "VsInputSignatureElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VsInputSignatureElement_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("VsInputSignatureElement_t", "VsInputSignatureElement_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public VsInputSignatureElement_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public string Semantic
            {
                get { return Invoker.CallNative<string>("SDKClass", "Semantic", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Semantic", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WaterWheelDrag_t : ClassData
        {
            public WaterWheelDrag_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WaterWheelDrag_t", "WaterWheelDrag_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WaterWheelDrag_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WaterWheelDrag_t", "WaterWheelDrag_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WaterWheelDrag_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FractionOfWheelSubmerged
            {
                get { return Invoker.CallNative<float>("SDKClass", "FractionOfWheelSubmerged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FractionOfWheelSubmerged", CallKind.ClassMember, m_classData, value); }
            }
            public float WheelDrag
            {
                get { return Invoker.CallNative<float>("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "WheelDrag", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WaterWheelFrictionScale_t : ClassData
        {
            public WaterWheelFrictionScale_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WaterWheelFrictionScale_t", "WaterWheelFrictionScale_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WaterWheelFrictionScale_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WaterWheelFrictionScale_t", "WaterWheelFrictionScale_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WaterWheelFrictionScale_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float FractionOfWheelSubmerged
            {
                get { return Invoker.CallNative<float>("SDKClass", "FractionOfWheelSubmerged", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FractionOfWheelSubmerged", CallKind.ClassMember, m_classData, value); }
            }
            public float FrictionScale
            {
                get { return Invoker.CallNative<float>("SDKClass", "FrictionScale", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "FrictionScale", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WeaponPurchaseCount_t : ClassData
        {
            public WeaponPurchaseCount_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeaponPurchaseCount_t", "WeaponPurchaseCount_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeaponPurchaseCount_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeaponPurchaseCount_t", "WeaponPurchaseCount_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeaponPurchaseCount_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort ItemDefIndex
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "ItemDefIndex", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ItemDefIndex", CallKind.ClassMember, m_classData, value); }
            }
            public ushort Count
            {
                get { return Invoker.CallNative<ushort>("SDKClass", "Count", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Count", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WeaponPurchaseTracker_t : ClassData
        {
            public WeaponPurchaseTracker_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeaponPurchaseTracker_t", "WeaponPurchaseTracker_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeaponPurchaseTracker_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeaponPurchaseTracker_t", "WeaponPurchaseTracker_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeaponPurchaseTracker_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
        public class WeightList : ClassData
        {
            public WeightList(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeightList", "WeightList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeightList(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WeightList", "WeightList", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WeightList()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public string Name
            {
                get { return Invoker.CallNative<string>("SDKClass", "Name", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Name", CallKind.ClassMember, m_classData, value); }
            }
            public float[] Weights
            {
                get { return Invoker.CallNative<float[]>("SDKClass", "Weights", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Weights", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class World_t : ClassData
        {
            public World_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("World_t", "World_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public World_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("World_t", "World_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public World_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public WorldBuilderParams_t BuilderParams
            {
                get { return Invoker.CallNative<WorldBuilderParams_t>("SDKClass", "BuilderParams", CallKind.ClassMember, m_classData); }
            }
            public BakedLightingInfo_t WorldLightingInfo
            {
                get { return Invoker.CallNative<BakedLightingInfo_t>("SDKClass", "WorldLightingInfo", CallKind.ClassMember, m_classData); }
            }
        }
        public class WorldBuilderParams_t : ClassData
        {
            public WorldBuilderParams_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldBuilderParams_t", "WorldBuilderParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldBuilderParams_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldBuilderParams_t", "WorldBuilderParams_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldBuilderParams_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public float MinDrawVolumeSize
            {
                get { return Invoker.CallNative<float>("SDKClass", "MinDrawVolumeSize", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "MinDrawVolumeSize", CallKind.ClassMember, m_classData, value); }
            }
            public bool BuildBakedLighting
            {
                get { return Invoker.CallNative<bool>("SDKClass", "BuildBakedLighting", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "BuildBakedLighting", CallKind.ClassMember, m_classData, value); }
            }
            public bool AggregateInstanceStreams
            {
                get { return Invoker.CallNative<bool>("SDKClass", "AggregateInstanceStreams", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "AggregateInstanceStreams", CallKind.ClassMember, m_classData, value); }
            }
            public BakedLightingInfo_t BakedLightingInfo
            {
                get { return Invoker.CallNative<BakedLightingInfo_t>("SDKClass", "BakedLightingInfo", CallKind.ClassMember, m_classData); }
            }
            public ulong CompileTimestamp
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "CompileTimestamp", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompileTimestamp", CallKind.ClassMember, m_classData, value); }
            }
            public ulong CompileFingerprint
            {
                get { return Invoker.CallNative<ulong>("SDKClass", "CompileFingerprint", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "CompileFingerprint", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WorldNode_t : ClassData
        {
            public WorldNode_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldNode_t", "WorldNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldNode_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldNode_t", "WorldNode_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldNode_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public ushort[] VisClusterMembership
            {
                get { return Invoker.CallNative<ushort[]>("SDKClass", "VisClusterMembership", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "VisClusterMembership", CallKind.ClassMember, m_classData, value); }
            }
            public string[] LayerNames
            {
                get { return Invoker.CallNative<string[]>("SDKClass", "LayerNames", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "LayerNames", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] SceneObjectLayerIndices
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "SceneObjectLayerIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "SceneObjectLayerIndices", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] OverlayLayerIndices
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "OverlayLayerIndices", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "OverlayLayerIndices", CallKind.ClassMember, m_classData, value); }
            }
            public string GrassFileName
            {
                get { return Invoker.CallNative<string>("SDKClass", "GrassFileName", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "GrassFileName", CallKind.ClassMember, m_classData, value); }
            }
            public BakedLightingInfo_t NodeLightingInfo
            {
                get { return Invoker.CallNative<BakedLightingInfo_t>("SDKClass", "NodeLightingInfo", CallKind.ClassMember, m_classData); }
            }
            public bool HasBakedGeometryFlag
            {
                get { return Invoker.CallNative<bool>("SDKClass", "HasBakedGeometryFlag", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "HasBakedGeometryFlag", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WorldNodeOnDiskBufferData_t : ClassData
        {
            public WorldNodeOnDiskBufferData_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldNodeOnDiskBufferData_t", "WorldNodeOnDiskBufferData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldNodeOnDiskBufferData_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WorldNodeOnDiskBufferData_t", "WorldNodeOnDiskBufferData_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WorldNodeOnDiskBufferData_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public int ElementCount
            {
                get { return Invoker.CallNative<int>("SDKClass", "ElementCount", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementCount", CallKind.ClassMember, m_classData, value); }
            }
            public int ElementSizeInBytes
            {
                get { return Invoker.CallNative<int>("SDKClass", "ElementSizeInBytes", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "ElementSizeInBytes", CallKind.ClassMember, m_classData, value); }
            }
            public byte[] Data
            {
                get { return Invoker.CallNative<byte[]>("SDKClass", "Data", CallKind.ClassMember, m_classData); }
                set { Invoker.CallNative("SDKClass", "Data", CallKind.ClassMember, m_classData, value); }
            }
        }
        public class WrappedPhysicsJoint_t : ClassData
        {
            public WrappedPhysicsJoint_t(ClassData ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WrappedPhysicsJoint_t", "WrappedPhysicsJoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WrappedPhysicsJoint_t(string ptr_or_class)
            {
                this.m_classData = Internal_API.Invoker.CallNative<IntPtr>("WrappedPhysicsJoint_t", "WrappedPhysicsJoint_t", Internal_API.CallKind.ClassFunction, ptr_or_class);
            }
            public WrappedPhysicsJoint_t()
            {
            }
            public string ToPtr()
            {
                return Internal_API.Invoker.CallNative<string>("SDKClass", "ToPtr", Internal_API.CallKind.ClassFunction, m_classData);
            }
            public bool IsValid()
            {
                return Internal_API.Invoker.CallNative<bool>("SDKClass", "IsValid", Internal_API.CallKind.ClassFunction, m_classData);
            }

        }
    }
}